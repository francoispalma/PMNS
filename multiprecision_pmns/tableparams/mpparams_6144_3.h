#define N 36
#define NBCHUNKS 3
#define LAMBDA 2
#define RHOver2 60

static const uint64_t RHOhi = 14162221990511957u;

static const int64_t M[3][71] = { {
		465791618807833998, 1107452326020434026, 1085711586970609134, 973588686811617028, 1023843256015790188, 686929882097454016, 998582349766763062, 958213049675332738, 970663233175197912, 1102512314084423010, 580834280874646588, 595118976575206186, 555305021666990452, 454954023924852274, 1018707029808179264, 605689413162842414, 338019253661908364, 702921757436634954, 408850132945318314, 880595664041236788, 734820709937514972, 697839838035404686, 994208046696952374, 917947688477957104, 304458397895487532, 1078629563526752978, 233270759638932504, 248727742902951522, 256757400678281568, 493209936141181548, 707787768854036590, 854693568340891398, 511690712580851306, 900165206150449482, 1009107021618349744, 704874587998669919, 809356561707340487, 553726163010217013, 1119316545788728055, 1063255095709232002, 1088382380311318582, 919925693352150496, 1075751927186805019, 479106524837666369, 485331616587598956, 551256157042211505, 290417140437323294, 297559488287603093, 277652510833495226, 227477011962426137, 1085814267207513120, 879305458884844695, 169009626830954182, 927921631021740965, 780885818776082645, 1016758584324041882, 943871107272180974, 348919919017702343, 1073564775651899675, 458973844238978552, 728689951251167254, 1115775534066799977, 116635379819466252, 124363871451475761, 128378700339140784, 823065720374014262, 930354636730441783, 1003807536473869187, 255845356290425653, 1026543355378648229, 504553510809174872
	}, {
		481064412815838145, 1091673783086738534, 558228052566564369, 883418718706901703, 25684541599639251, 954011503428500967, 1136888963358251089, 555282335381089510, 295547479530528462, 388298616559283672, 1066082503341816114, 951877430670225684, 580888337226301486, 40154662050158112, 84489452499302875, 269203417849269409, 967000048187777600, 11644051027536711, 575406539909433539, 1073943538163780673, 941004543453959467, 500452907662483778, 801346140156230735, 324066306016092234, 422243869093228969, 61840829529009723, 629046895990105652, 1129260862684402072, 572584881826812622, 135085367174573019, 1111211420743640825, 542370587358185763, 180550275950858574, 984987477619208829, 502117930229365984, 497137839470618766, 240532206407919072, 545836891543369267, 855574778586705672, 441709359353450851, 12842270799819625, 1053466504017673971, 1144905233982549032, 854101919993968243, 724234492068687719, 770610060583065324, 533041251670908057, 1052399467638536330, 290444168613150743, 20077331025079056, 618705478553074925, 134601708924634704, 483500024093888800, 5822025513768355, 287703269954716769, 536971769081890336, 1046963024030403221, 250226453831241889, 400673070078115367, 162033153008046117, 211121934546614484, 30920414764504861, 314523447995052826, 1141091183645624524, 286292440913406311, 67542683587286509, 1132066462675243900, 271185293679092881, 90275137975429287, 1068954491113027902, 251058965114682992
	}, {
-1098159089439062, 452628624370330, -2318099336382151, -1663720662623090, -26299161677680, -208190785436241, -801297801444131, -144319104623319, -1714324612680929, 80122317724119, 296668627445924, 1839601212616223, 273434693633632, 779216021254014, 251129723484037, 280178497488096, -416037907814626, 621560544897290, -1359923032559600, -118595385345326, -963244004848997, 114856381881372, 1315432524651854, 1801483495937392, 862880532487618, -151955045919598, 694480585639494, 43844990594253, -1690268474562398, -616120222091800, -382709394796427, 433086259332094, 2837386531266718, 609668626576633, 438300412585460, 625219354911987, -549079544719531, 226314312185165, -1159049668191076, -831860331311545, -13149580838840, -104095392718121, -400648900722066, -72159552311660, -857162306340465, 40061158862059, 148334313722962, 919800606308111, 136717346816816, 389608010627007, 125564861742018, 140089248744048, -208018953907313, 310780272448645, -679961516279800, -59297692672663, -481622002424499, 57428190940686, 657716262325927, 900741747968696, 431440266243809, -75977522959799, 347240292819747, 21922495297126, -845134237281199, -308060111045900, -191354697398214, 216543129666047, 1418693265633359, 304834313288316, 219150206292730
} };

static const int64_t M1[] = {
878154159617605018, 1129288726097456760, 851213086209187624, 183562971554755046, 728808716659145186, 431947354860530952, 866125555601881142, 163937246781838380, 350838342008429756, 674468846300771636, 46354262199078848, 454389407823887210, 398654802587989046, 480759917739617022, 104644738255938484, 278522510242594220, 96113958115465240, 1080919620151452304, 412769209152484398, 1088311026623305034, 175473832052931168, 36952813766813464, 227435793144832778, 27695036464838986, 269389898943638152, 227363732286640080, 664682489115634686, 1058766028892986424, 929613031943671030, 568960966088712112, 842157307211396796, 583017139686041604, 149215729624527466, 857283664299198850, 940467116165358412, 583031444508995883, 439077079808802509, 564644363048728380, 1002067295408017300, 91781485777377523, 364404358329572593, 792434429733688964, 1009523530104364059, 81968623390919190, 751879923307638366, 337234423150385818, 599637883402962912, 227194703911943605, 775788153597418011, 240379958869808511, 628783121431392730, 139261255121297110, 48056979057732620, 540459810075726152, 206384604576242199, 1120616265615076005, 87736916026465584, 18476406883406732, 113717896572416389, 13847518232419493, 134694949471819076, 113681866143320040, 332341244557817343, 1105843766749916700, 464806515971835515, 284480483044356056, 997539405909121886, 867969322146444290, 74607864812263733, 1005102584453022913, 470233558082679206
};

static const int64_t M0m0m1[35] = { -400506428762022173, 326869501031019775, -384495835851213083, -365415257673827316, -94174333614366208, -1978004874193392, -771293529291317487, 599523038689086609, -252060856948666452, -302528414139259983, -33659739759041726, 195650447853578455, 430135258020541364, 627216556378465261, -574123554626661814, 20859747265604787, 840097394787395562, -223047043023071046, 28470742931257842, -463032421313824869, 175445438516547081, 714335176691529659, 14817604659418907, 460951849113171944, 347061975935637765, -636669009229133608, 368696236768132704, 426892285590735744, 162038440098182510, -525506232086411169, -652702125896946557, -776330524511443050, 829968910917087467, -147237896493803534, -335543883978220690 };

static const int64_t M0m0m2[35] = { -56941485862515684, -226856661979197238, -350890877033094162, -275748848776212342, -29635209318837814, 231017806380503088, -694123951871275530, 120416513851420240, -737392473536265408, -853784571181471488, -324076880196365020, -101909040434024638, 152482747187046138, 399739544416039124, -507016317227327958, 294475792987607068, 671087767956441380, 1952830562034965, 400506428762022173, -326869501031019775, 384495835851213083, 365415257673827316, 94174333614366208, 1978004874193392, 771293529291317487, -599523038689086609, 252060856948666452, 302528414139259983, 33659739759041726, -195650447853578455, -430135258020541364, -627216556378465261, 574123554626661814, -20859747265604787, -840097394787395562 };

static const int64_t M1m0m1[35] = { 334874333501514467, 528106646620411406, 85429764867253795, 58743548309032927, 788503869356411110, -729400198001581737, -722661364889320063, -792261090464958520, -95187596078582067, 358650802101336748, 39543630155904565, -917314100463963311, 820767252130490082, 522293256333106707, -438155202602216351, 850385768694574125, 18617906135477184, 491315813956850411, -47171063546797697, 8865122461478931, -191388245443697549, 191482905522208962, -387830799278295742, 891433351009627854, 933783299435934548, 823181505229463382, 409711044073634893, -370481123062559200, 246748810757501746, 984856784051249821, -841622294062093157, -251107962654013825, 528430340577645638, -934352782188393198, 232441058979205808 };

static const int64_t M1m0m2[35] = { 94342127093595394, -17730244922957861, 382776490887395098, -382965811044417925, 775661598556591484, -629945197412408733, -714645094265022120, -493441505852079787, 333499416459577190, 740962246125118400, -493497621515003492, -816792063495652665, 530323083517339339, 502215925308027651, 96060823451555699, 715784059769939420, -464882117958411616, 485493788443082055, -334874333501514467, -528106646620411406, -85429764867253795, -58743548309032927, -788503869356411110, 729400198001581737, 722661364889320063, 792261090464958520, 95187596078582067, -358650802101336748, -39543630155904565, 917314100463963311, -820767252130490082, -522293256333106707, 438155202602216351, -850385768694574125, -18617906135477184 };

static const int64_t M2m0m1[35] = { -810843487840069, -344909697530491, 195805663342079, 946716713192917, 1328582105490694, 1905578888655513, 1263529433209684, -79795493607938, 1551642891979959, 3783831732194, -1838602788285360, -1535920828399911, -519426741613243, 43478248705087, 2711821669524700, 469579377832585, 646319366492773, 314439082463342, 130881971560269, 285612004857828, -677427665766577, -889288522252231, -670865843164767, -1004837140686817, -832089166965875, 3817970648139, -1204402599160212, 18138663564933, 993468551004161, 1227860717354011, 328072044215030, 173064880960960, -1293128403891341, -164745064544268, -427169160200043 };

static const int64_t M2m0m2[35] = { -261763943120538, -571224009715656, 1354855331533154, 1778577044504462, 1341731686329534, 2009674281373633, 1664178333931749, -7635941296279, 2408805198320423, -36277327129866, -1986937102008322, -2455721434708023, -656144088430059, -346129761921920, 2586256807782681, 329490129088537, 854338320400086, 3658810014697, 810843487840069, 344909697530491, -195805663342079, -946716713192917, -1328582105490694, -1905578888655513, -1263529433209684, 79795493607938, -1551642891979959, -3783831732194, 1838602788285360, 1535920828399911, 519426741613243, -43478248705087, -2711821669524700, -469579377832585, -646319366492773 };

static const int64_t M1_m0m1[35] = { -26307870656318111, -629254841032270322, 326328041251760844, -54828672010564059, -136968565184739815, 388182111337996998, 412787873446121069, 145395108895720890, -87197434192003680, -431389898864246370, 329975148540708118, 341766262176768507, 66369153613978785, -810284323790613883, 673354112799981712, -434899095428945236, -260511367499221184, -1110349870173577245, 232692475232560310, 596949602040499351, -238591125225295260, 73305078893970791, 250686461757156204, -374334593105577505, -278092923974301993, -31713242752400850, -733382825857025953, 384312161007316094, -1018090137175719579, -57285779132412451, -221751252311703875, 525332141330211197, -598746247987717979, 287080175275121173, -422176579024946586 };

static const int64_t M1_m0m2[35] = { 687536554141726356, -40977699474151726, 477182250450590520, -146610157787941582, 651548581092534568, -404252318395691966, 556185847948603986, 63426485504801700, -839077357499642046, 384297182592214788, -269662734862254794, 114571558264824902, -709418999983439226, -1050664282660422394, 44570991368588982, -574160350550242346, -308568346556953804, -497888175642456421, 26307870656318111, 629254841032270322, -326328041251760844, 54828672010564059, 136968565184739815, -388182111337996998, -412787873446121069, -145395108895720890, 87197434192003680, 431389898864246370, -329975148540708118, -341766262176768507, -66369153613978785, 810284323790613883, -673354112799981712, 434899095428945236, 260511367499221184 };

static inline void mtoep9(__int128* restrict rop, const int64_t* restrict vect, const int64_t* restrict matr)
	SCHOOLBOOK(N/6)

static inline void m1toep9(int64_t* restrict rop, const int64_t* restrict vect, const int64_t* restrict matr)
	M1SCHOOLBOOK(N/6)


static inline void mtoep10(__int128* restrict rop, const int64_t* restrict vect, const int64_t* restrict matr)
	TOEP33TOP(N/2, mtoep9)

static inline void m1toep10(int64_t* restrict rop, const int64_t* restrict vect, const int64_t* restrict matr)
	M1TOEP33TOP(N/2, m1toep9)


static inline void toeplitz_vm(__int128* restrict rop, const int64_t* restrict vect, const int64_t* restrict matr)
	TOEP22TOP(N, mtoep10)

static inline void ptoeplitz_vm(__int128* restrict rop, const int64_t* restrict vect, const int64_t* restrict matr)
	pTOEP22TOP(N, mtoep10)

static inline void m1toep20(int64_t* restrict rop, const int64_t* restrict vect, const int64_t* restrict matr)
	M1TOEP22TOP(N, m1toep10)


static inline void mtoeplitz_vm0(__int128* restrict rop, const int64_t* restrict vect)
{
	__int128 t0[N/2], t1[N/2], t2[N/2];
	int64_t v0p1[N/2];
	for(int i = 0; i < N/2; i++)
	{
		v0p1[i] = vect[i] + vect[i + N/2];
	}
	mtoep10(t0, v0p1, M[0] + N/2);
	mtoep10(t1, vect, M0m0m1);
	mtoep10(t2, vect + N/2, M0m0m2);
	for(int i = 0; i < N/2; i++)
	{
		rop[i] = t0[i] - t2[i];
		rop[i + N/2] = t0[i] - t1[i];
	}
}


static inline void mtoeplitz_vm1(__int128* restrict rop, const int64_t* restrict vect)
{
	__int128 t0[N/2], t1[N/2], t2[N/2];
	int64_t v0p1[N/2];
	for(int i = 0; i < N/2; i++)
	{
		v0p1[i] = vect[i] + vect[i + N/2];
	}
	mtoep10(t0, v0p1, M[1] + N/2);
	mtoep10(t1, vect, M1m0m1);
	mtoep10(t2, vect + N/2, M1m0m2);
	for(int i = 0; i < N/2; i++)
	{
		rop[i] = t0[i] - t2[i];
		rop[i + N/2] = t0[i] - t1[i];
	}
}


static inline void mtoeplitz_vm2(__int128* restrict rop, const int64_t* restrict vect)
{
	__int128 t0[N/2], t1[N/2], t2[N/2];
	int64_t v0p1[N/2];
	for(int i = 0; i < N/2; i++)
	{
		v0p1[i] = vect[i] + vect[i + N/2];
	}
	mtoep10(t0, v0p1, M[2] + N/2);
	mtoep10(t1, vect, M2m0m1);
	mtoep10(t2, vect + N/2, M2m0m2);
	for(int i = 0; i < N/2; i++)
	{
		rop[i] = t0[i] - t2[i];
		rop[i + N/2] = t0[i] - t1[i];
	}
}


// Utility function to extract the lower 64 bits of each vector coefficient
static inline void m1toeplitz_vm(int64_t* restrict rop, const __int128* restrict vect)
{
	int64_t t0[N/2], t1[N/2], t2[N/2];
	int64_t v0p1[N/2], v[N];
	for(int i = 0; i < N/2; i++)
	{
		v[i] = vect[i];
		v[i + N/2] = vect[i + N/2];
		v0p1[i] = v[i] + v[i + N/2];
	}
	m1toep10(t0, v0p1, M1 + N/2);
	m1toep10(t1, v, M1_m0m1);
	m1toep10(t2, v + N/2, M1_m0m2);
	for(int i = 0; i < N/2; i++)
	{
		rop[i] = t0[i] - t2[i];
		rop[i + N/2] = t0[i] - t1[i];
	}
}

void (* const multbym[3]) (__int128* restrict rop, const int64_t* restrict vect) = { mtoeplitz_vm0, mtoeplitz_vm1, mtoeplitz_vm2 };

