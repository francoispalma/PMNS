p = 135235643069960614055763147653064061503447506836195743621526670176368184234720875133770858820476536434488752158042109408722131110950494765999584602783171012937442890496568352400298953673566640901275488915484314041362810104082501296367785554838617047203051373164870703338765011558032443485283660293658396373031
n = 9
gamma = 31655366034728588078624438514615301544129522139330836045091327852751402305472801538659044715201150659916554681038263189819329423658063171106562974285532277781484292697032498794895427121795477802587356170442668003146237461337340801098373462588444085927763403266750253334246732747899661111138239398839213291694
lam = 2
phi = 2**128
rho = 2**118

def mult(A, B, p, n, gamma, rho, lam):
	R = [0] * n
	for i in range(n):
		for j in range(1, n - i):
			R[i] += A[i + j] * B[n - j]
		R[i] *= lam
		
#		print("AFTER LAMBDA")
#		print(hex(R[i]))
		
		for j in range(i + 1):
			R[i] += A[j] * B[i - j]
	return R

if __name__ == "__main__":
	A, B = [0x6d1d5e0a81bcaed926d19382859d1b03, 0x6ab08260c7591b1af116bc8892ca5204, 0x7e8e240d249ecb1131b75dd8281ff784, 0x79a72201aebfdd67142c85f21a223aa8, 0xead7e6d770b694afcd3ad86ad0c870de, 0x647dd593c5d2a3dffc5a4566354522d7, 0x8f2bdb073cfc4a3529462f89b9d0d1e8, 0x788fd4f5a1f4d8ac819f93ad25096a2f, 0x60c853305eca2d1a8219bd12dcfde09c], [0x70111831aba1e64ef3ac8042385dcd51, 0x65aed2bd7dfc4e6d27e5127c14336b6b, 0x44b6fc28c5d0a55e2ec3ea3153fb2779, 0xc7b39a6d787d290bdd95f9661f4159f8, 0x3311dd1459d46d3d5499cc6d1e5175e6, 0x51e19c67afedbf73c1f691e343055c28, 0xabf8931f08283368fbf4c09ef0445adb, 0xb4427c8cfdc7d01686613d9257e6d950, 0xb9f0f5c8cabbb418f577ac804dfe0187]
	#print(A)
	#print(B)
	#A = [elem if elem < 2**127 else elem - 2**128 for elem in A]
	B = [elem if elem < 2**127 else elem - 2**128 for elem in B]
	#print(A)
	#print(B)
	print([hex(elem) if elem >= 0 else hex(2**256 + elem) for elem in mult(A, B, p, n, gamma, rho, lam)])
