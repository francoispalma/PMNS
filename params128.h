#ifndef PMNS_PARAMS128_H_INCLUDED
#define PMNS_PARAMS128_H_INCLUDED

#define RHO 119
#define N 9
#define LAMBDA 2

// Various values you can get from precalc
static const uint64_t Mlo[] = {3172079863358853931u, 17636822218148255496u, 9102563644318989933u, 556914693329530421u, 1093431626072838477u, 5873559958954818252u, 1763340473071477375u, 207563683107153922u, 306022772091946809u},
	M1lo[] = {2020236466581256967u, 11795090199601762376u, 4762257142323208001u, 14393630769614108267u, 7289474052683735178u, 4118346716850393172u, 8625955492210123977u, 5084328875032251245u, 10903235522466873329u},
	MLambdalo[] = {6344159726717707862u, 16826900362586959376u, 18205127288637979866u, 1113829386659060842u, 2186863252145676954u, 11747119917909636504u, 3526680946142954750u, 415127366214307844u, 612045544183893618u},
	M1Lambdalo[] = {4040472933162513934u, 5143436325493973136u, 9524514284646416002u, 10340517465518664918u, 14578948105367470356u, 8236693433700786344u, 17251910984420247954u, 10168657750064502490u, 3359726971224195042u},
	__Pilo__[N][N] = {
		{6101838728333056926u, 15415781750719687420u, 10961842517230266485u, 12077884037808420822u, 9536003486226099089u, 13817849915348700313u, 13359438124057632128u, 11700632036743756087u, 4894236271046940528u},
		{12035566006852559335u, 14171821067452833724u, 12369013555075757948u, 4498830046889639264u, 12491385306095908126u, 7281714071057473634u, 13990047337312568689u, 18317884742165177906u, 1732787752794673740u},
		{9492297614001460686u, 18067498595867155931u, 2568946183426931582u, 17544365362825391576u, 9795626891582000100u, 12935396539608406943u, 1366705183163506147u, 784257938918514841u, 14531383952606947681u},
		{4031101772273862042u, 9799682892199525198u, 10029235206982056305u, 11777556536902430215u, 14983884792756429576u, 13786415054207410445u, 5164811737447012916u, 4641812998818860882u, 15450662535685161345u},
		{18201505412995845877u, 1597990354445859299u, 1345911974159841930u, 7148866633385548324u, 1653022974622271257u, 293109945761173882u, 1478829104076881526u, 7438392248879289657u, 17647503226388375132u},
		{10631620440972302233u, 937019028068910430u, 16160812164284796409u, 13604344312420951748u, 936480452444349398u, 18443794835304013076u, 4422345331227985759u, 13518344924605998072u, 15019833528415127745u},
		{1356297451071716695u, 12989954322853754826u, 5209207176413557349u, 12731611521381514027u, 16166831710790311421u, 10440493365110482490u, 4034287003982806885u, 8717535533847538844u, 3097103436283940245u},
		{18270088159726145789u, 12862060155748585383u, 4345707004653924737u, 13760044399391461876u, 15546085080096618368u, 5392216896789570415u, 1237961068835819117u, 5199700141060526671u, 15171138066839495043u},
		{12497697391143513486u, 6577342630937818366u, 7273941017261079450u, 17810511932290402566u, 6918882530410955522u, 6783834399351903598u, 431077133603065699u, 1074220332160761236u, 5978351090210277550u}
	};

static const int64_t Mhi[] = {-109723346650584, -95062332776751, 11526164101087, 135517858403176, -368981253730194, 402145146993827, -394570767852897, -442644888696241, -156906056599244},
	M1hi[] = {-5370770653914184426, 227776749162088947, 9153554377090773830, -3720001336475404590, -9141404196223785588, 1632220371660336250, -9087981984724935771, -6879438685807940248, -1266505332725477632},
	MLambdahi[] = {-219446693301168, -190124665553501, 23052328202174, 271035716806352, -737962507460388, 804290293987654, -789141535705794, -885289777392482, -313812113198488},
	M1Lambdahi[] = {7705202765881182764, 455553498324177895, -139635319528003956, -7440002672950809179, 163935681261980440, 3264440743320672500, 270780104259680074, 4687866702093671120, -2533010665450955263},
	__Pihi__[N][N] = {
		{-1224282496164506, -1026890262404246, -1130165693101467, -1522328732877241, -438485294842974, -715430033392734, -963860926272816, -14958829929156, -482794607528167},
		{-510783130012457, -396219944570232, -771380122181384, -1493896580854637, -225692170338048, -1090474290139397, -1066677438123583, -599542625585739, -508160514576348},
		{-967218749311117, -1417488317193590, -699458645623866, -962335442175945, -1142314647643350, -652664905966072, -601451636488004, -755232501879441, -559063707421303},
		{-989768854749840, -1487779157335961, -920091701239355, -1335747890969890, -1137525623228383, -827541998539314, -731696307520463, -220000501310787, -585831129801878},
		{-291230299431567, -1351165144466699, -455507994789324, -1397935257071080, -30086140438475, -904657958911889, -710851447392130, -248346530001435, -658754701932108},
		{-1379542605987243, -306881685989213, -969904282858013, -583918033739026, -766909584520539, -1346917736204962, -1066437561542257, -249613489167695, -321376169815791},
		{-1436311890201474, -726625137860419, -672521035586712, -726925287094250, -599254844704479, -300208583526326, -149124096173545, -482216806472967, 76910849534088},
		{-1211635702189360, -330890522859798, -730699926309232, -237239894950423, -473913237237353, -390791970447157, -518861148229910, -30589863769620, -596748983296320},
		{-1013392887061800, -1342434217278751, -1272975730539343, -664226835267917, -186294453784096, -1069040728711359, -1069564991691530, -910196346164464, -634007180727485}
	};

static const _poly G1 = { .deg = 16,
		.t = (int64_t[]) {0x2b4923a2f0269bc1, 0x411daf9647574b4b, 0x553db9ab950cf4b8, 0x4727aecdaa1f88fa, 0xd0af2aecaeab31be, 0x4ed95a6cb29a4910, 0xef4761cd6841bfad, 0xb83b5f7839cb7b03, 0x125dc4ae3aa08eb5, 0xd81c169d628633c8, 0x33c9efad4712b9d6, 0x24391b7e23fd1f74, 0x668c81e0738225bf, 0xb56ccd81082dc6de, 0x3c6f7e78d6540290, 0x744cddc7cf200b8e} },
	G2 = { .deg = 16,
		.t = (int64_t[]) {0x429f182ac2720e8f, 0xf416fe2a4bb07da1, 0x7a9d198ecdc5d439, 0xdf73b2e431943ca, 0x55dba964102caeac, 0x556884146da91d5c, 0x940439dce11af3c4, 0xcc880f128c3b915e, 0x2acd8aa7a130fab, 0x445f3683677b07c5, 0xfb740dda640f2cca, 0xfe02a69b6fd3d694, 0x455e14228a0a3bdd, 0x4095bd27d62cae1f, 0x3b9cbed0725b2888, 0x22bd2aad6d07d6e} },
	G3 = { .deg = 16,
		.t = (int64_t[]) {0x7bb38a0acc1e3ea8, 0xc501611ba5c78612, 0xf975edad177bcb1e, 0xeae819cdeb74a3db, 0x7f97b806bef2b02d, 0x703bfd49b8fee7da, 0x127402505c91829d, 0x30cbc11669504f35, 0x5b972ba6a34d1ded, 0x5e62f716b9217199, 0x10d74696d15031f3, 0xa92d9a4fc3b200f7, 0x3dfd5de5c1b0ed64, 0x66e36ae2e41842d, 0x1783f425eea0a83e, 0xa61f2c2e2ddeee6a} },
	G4 = { .deg = 16,
		.t = (int64_t[]) {0xdac88094cdc2fb9b, 0x5f26ca66c79efff6, 0xf9fff9d9c89bf38f, 0xd852ffeaa9dc3cd6, 0xf29d55957038a723, 0xdbb9716e4b1bab9f, 0x1c727f332478cfd6, 0x9a465b7e62710727, 0xb0ef2897bdd5faac, 0xa4aa8add243e5279, 0x160030e05110249b, 0x17407475947a84ac, 0x32a6dbdd46fb32f8, 0xf7de068f22a66e0e, 0x6b7371fcbc293c56, 0x14807922fdae09d8} },
	G5 = { .deg = 16,
		.t = (int64_t[]) {0x4cc402ff644b52e5, 0x8424cc53139d8d19, 0x91b173955695892f, 0x92925ba3b22d87a3, 0xbd5380b29f26150a, 0xf64032b905d1e954, 0x34fa26b272d90f09, 0x786a724be83fc662, 0x33996f9079f190d5, 0xff099d0481d2593f, 0x260ba58dda84ba72, 0xb427a6ee8ae56b16, 0xc5f27e4d7e947e71, 0x913997bf12b71d4, 0x802469bffd32f829, 0x68ca19d2b419a367} },
	G6 = { .deg = 16,
		.t = (int64_t[]) {0x4bd3532bb09a8db9, 0x72e631b2671b6df9, 0x7b90bfb2176a66b1, 0x49dff15e253b5e57, 0xea02ac5a9080af09, 0x1d66cdec8f7adfc6, 0x8aad785d5590aaa0, 0x6aadbebf578d3d06, 0x327da814e23a8bc7, 0x2c8b7e10d8954404, 0x58e43aeff4110f82, 0x754641a23183a43c, 0x4448aeae81e84bc4, 0x71d91dc6b61cfe4, 0x18c4d56864097b29, 0x6a0114b426879329} },
	G7 = { .deg = 16,
		.t = (int64_t[]) {0xb00eeff9151f58f7, 0x4fa6c3b989d7cc77, 0x6de5b556c297638d, 0xd76f2adbaa739fce, 0x728eb90e34f6a78e, 0xbe277b4ff6765b6d, 0x3cce490f2cf163bc, 0x328b3f6c9861d611, 0xedbb507cb71d20d7, 0x506b41e0dca06aba, 0x7c427ec823766150, 0x8c28baedcff24e2f, 0xce9d937873668801, 0x87d55e4ec0801493, 0x6290faf893cb5169, 0xb1d69281ee9a70f5} },
	G8 = { .deg = 16,
		.t = (int64_t[]) {0xc48c69c05e03eb8e, 0x1bf3f6e5359c105e, 0x2ad805c1bd0b65fd, 0xbbf0ee099f2eac0f, 0x2cd8e95aaeab712a, 0xa2fa34321c18a8ac, 0x1b8c47c6247c72bd, 0x6d5cd61d8198f86a, 0xc1e26fe10ff53ebf, 0x41007e70e4cb6b82, 0x13cc8137910e09ed, 0x47e5f2a8cb3d507f, 0xcec518a7831c25ef, 0x3098e208db8bc8e9, 0x35ef8a5f23248000, 0x5e17e5be67b1dd91} };
static _poly __P__ = { .deg = 9,
		.t = (int64_t[]) {0xfffffffffff51b29, 0xffffffffffffffff, 0xffffffffffffffff, 0xffffffffffffffff, 0xffffffffffffffff, 0xffffffffffffffff, 0xffffffffffffffff, 0xffffffffffffffff, 0xffffffffffffffff, 0xffffffffffffffff, 0xffffffffffffffff, 0xffffffffffffffff, 0xffffffffffffffff, 0xffffffffffffffff, 0xffffffffffffffff, 0xffffffffffffffff} },
	Gi[] = {G1, G2, G3, G4, G5, G6, G7, G8};


static inline void m1_mns128_mod_mult_ext_red_pre(unsigned __int128* restrict Rlo,
	const restrict poly128 A)
{

Rlo[0] = (__int128) ((__int128) A->lo[1] * 3359726971224195042u) + ((__int128) (LOW(A->lo[1] * -2533010665450955263) + LOW(A->hi[1] * 3359726971224195042u)) << 64) + ((__int128) A->lo[2] * 10168657750064502490u) + ((__int128) (LOW(A->lo[2] * 4687866702093671120) + LOW(A->hi[2] * 10168657750064502490u)) << 64) + ((__int128) A->lo[3] * 17251910984420247954u) + ((__int128) (LOW(A->lo[3] * 270780104259680074) + LOW(A->hi[3] * 17251910984420247954u)) << 64) + ((__int128) A->lo[4] * 8236693433700786344u) + ((__int128) (LOW(A->lo[4] * 3264440743320672500) + LOW(A->hi[4] * 8236693433700786344u)) << 64) + ((__int128) A->lo[5] * 14578948105367470356u) + ((__int128) (LOW(A->lo[5] * 163935681261980440) + LOW(A->hi[5] * 14578948105367470356u)) << 64) + ((__int128) A->lo[6] * 10340517465518664918u) + ((__int128) (LOW(A->lo[6] * -7440002672950809179) + LOW(A->hi[6] * 10340517465518664918u)) << 64) + ((__int128) A->lo[7] * 9524514284646416002u) + ((__int128) (LOW(A->lo[7] * -139635319528003956) + LOW(A->hi[7] * 9524514284646416002u)) << 64) + ((__int128) A->lo[8] * 5143436325493973136u) + ((__int128) (LOW(A->lo[8] * 455553498324177895) + LOW(A->hi[8] * 5143436325493973136u)) << 64) + ((__int128) A->lo[0] * 2020236466581256967u) + ((__int128) (LOW(A->lo[0] * -5370770653914184426) + LOW(A->hi[0] * 2020236466581256967u)) << 64);
Rlo[1] = (__int128) ((__int128) A->lo[2] * 3359726971224195042u) + ((__int128) (LOW(A->lo[2] * -2533010665450955263) + LOW(A->hi[2] * 3359726971224195042u)) << 64) + ((__int128) A->lo[3] * 10168657750064502490u) + ((__int128) (LOW(A->lo[3] * 4687866702093671120) + LOW(A->hi[3] * 10168657750064502490u)) << 64) + ((__int128) A->lo[4] * 17251910984420247954u) + ((__int128) (LOW(A->lo[4] * 270780104259680074) + LOW(A->hi[4] * 17251910984420247954u)) << 64) + ((__int128) A->lo[5] * 8236693433700786344u) + ((__int128) (LOW(A->lo[5] * 3264440743320672500) + LOW(A->hi[5] * 8236693433700786344u)) << 64) + ((__int128) A->lo[6] * 14578948105367470356u) + ((__int128) (LOW(A->lo[6] * 163935681261980440) + LOW(A->hi[6] * 14578948105367470356u)) << 64) + ((__int128) A->lo[7] * 10340517465518664918u) + ((__int128) (LOW(A->lo[7] * -7440002672950809179) + LOW(A->hi[7] * 10340517465518664918u)) << 64) + ((__int128) A->lo[8] * 9524514284646416002u) + ((__int128) (LOW(A->lo[8] * -139635319528003956) + LOW(A->hi[8] * 9524514284646416002u)) << 64) + ((__int128) A->lo[0] * 11795090199601762376u) + ((__int128) (LOW(A->lo[0] * 227776749162088947) + LOW(A->hi[0] * 11795090199601762376u)) << 64) + ((__int128) A->lo[1] * 2020236466581256967u) + ((__int128) (LOW(A->lo[1] * -5370770653914184426) + LOW(A->hi[1] * 2020236466581256967u)) << 64);
Rlo[2] = (__int128) ((__int128) A->lo[3] * 3359726971224195042u) + ((__int128) (LOW(A->lo[3] * -2533010665450955263) + LOW(A->hi[3] * 3359726971224195042u)) << 64) + ((__int128) A->lo[4] * 10168657750064502490u) + ((__int128) (LOW(A->lo[4] * 4687866702093671120) + LOW(A->hi[4] * 10168657750064502490u)) << 64) + ((__int128) A->lo[5] * 17251910984420247954u) + ((__int128) (LOW(A->lo[5] * 270780104259680074) + LOW(A->hi[5] * 17251910984420247954u)) << 64) + ((__int128) A->lo[6] * 8236693433700786344u) + ((__int128) (LOW(A->lo[6] * 3264440743320672500) + LOW(A->hi[6] * 8236693433700786344u)) << 64) + ((__int128) A->lo[7] * 14578948105367470356u) + ((__int128) (LOW(A->lo[7] * 163935681261980440) + LOW(A->hi[7] * 14578948105367470356u)) << 64) + ((__int128) A->lo[8] * 10340517465518664918u) + ((__int128) (LOW(A->lo[8] * -7440002672950809179) + LOW(A->hi[8] * 10340517465518664918u)) << 64) + ((__int128) A->lo[0] * 4762257142323208001u) + ((__int128) (LOW(A->lo[0] * 9153554377090773830) + LOW(A->hi[0] * 4762257142323208001u)) << 64) + ((__int128) A->lo[1] * 11795090199601762376u) + ((__int128) (LOW(A->lo[1] * 227776749162088947) + LOW(A->hi[1] * 11795090199601762376u)) << 64) + ((__int128) A->lo[2] * 2020236466581256967u) + ((__int128) (LOW(A->lo[2] * -5370770653914184426) + LOW(A->hi[2] * 2020236466581256967u)) << 64);
Rlo[3] = (__int128) ((__int128) A->lo[4] * 3359726971224195042u) + ((__int128) (LOW(A->lo[4] * -2533010665450955263) + LOW(A->hi[4] * 3359726971224195042u)) << 64) + ((__int128) A->lo[5] * 10168657750064502490u) + ((__int128) (LOW(A->lo[5] * 4687866702093671120) + LOW(A->hi[5] * 10168657750064502490u)) << 64) + ((__int128) A->lo[6] * 17251910984420247954u) + ((__int128) (LOW(A->lo[6] * 270780104259680074) + LOW(A->hi[6] * 17251910984420247954u)) << 64) + ((__int128) A->lo[7] * 8236693433700786344u) + ((__int128) (LOW(A->lo[7] * 3264440743320672500) + LOW(A->hi[7] * 8236693433700786344u)) << 64) + ((__int128) A->lo[8] * 14578948105367470356u) + ((__int128) (LOW(A->lo[8] * 163935681261980440) + LOW(A->hi[8] * 14578948105367470356u)) << 64) + ((__int128) A->lo[0] * 14393630769614108267u) + ((__int128) (LOW(A->lo[0] * -3720001336475404590) + LOW(A->hi[0] * 14393630769614108267u)) << 64) + ((__int128) A->lo[1] * 4762257142323208001u) + ((__int128) (LOW(A->lo[1] * 9153554377090773830) + LOW(A->hi[1] * 4762257142323208001u)) << 64) + ((__int128) A->lo[2] * 11795090199601762376u) + ((__int128) (LOW(A->lo[2] * 227776749162088947) + LOW(A->hi[2] * 11795090199601762376u)) << 64) + ((__int128) A->lo[3] * 2020236466581256967u) + ((__int128) (LOW(A->lo[3] * -5370770653914184426) + LOW(A->hi[3] * 2020236466581256967u)) << 64);
Rlo[4] = (__int128) ((__int128) A->lo[5] * 3359726971224195042u) + ((__int128) (LOW(A->lo[5] * -2533010665450955263) + LOW(A->hi[5] * 3359726971224195042u)) << 64) + ((__int128) A->lo[6] * 10168657750064502490u) + ((__int128) (LOW(A->lo[6] * 4687866702093671120) + LOW(A->hi[6] * 10168657750064502490u)) << 64) + ((__int128) A->lo[7] * 17251910984420247954u) + ((__int128) (LOW(A->lo[7] * 270780104259680074) + LOW(A->hi[7] * 17251910984420247954u)) << 64) + ((__int128) A->lo[8] * 8236693433700786344u) + ((__int128) (LOW(A->lo[8] * 3264440743320672500) + LOW(A->hi[8] * 8236693433700786344u)) << 64) + ((__int128) A->lo[0] * 7289474052683735178u) + ((__int128) (LOW(A->lo[0] * -9141404196223785588) + LOW(A->hi[0] * 7289474052683735178u)) << 64) + ((__int128) A->lo[1] * 14393630769614108267u) + ((__int128) (LOW(A->lo[1] * -3720001336475404590) + LOW(A->hi[1] * 14393630769614108267u)) << 64) + ((__int128) A->lo[2] * 4762257142323208001u) + ((__int128) (LOW(A->lo[2] * 9153554377090773830) + LOW(A->hi[2] * 4762257142323208001u)) << 64) + ((__int128) A->lo[3] * 11795090199601762376u) + ((__int128) (LOW(A->lo[3] * 227776749162088947) + LOW(A->hi[3] * 11795090199601762376u)) << 64) + ((__int128) A->lo[4] * 2020236466581256967u) + ((__int128) (LOW(A->lo[4] * -5370770653914184426) + LOW(A->hi[4] * 2020236466581256967u)) << 64);
Rlo[5] = (__int128) ((__int128) A->lo[6] * 3359726971224195042u) + ((__int128) (LOW(A->lo[6] * -2533010665450955263) + LOW(A->hi[6] * 3359726971224195042u)) << 64) + ((__int128) A->lo[7] * 10168657750064502490u) + ((__int128) (LOW(A->lo[7] * 4687866702093671120) + LOW(A->hi[7] * 10168657750064502490u)) << 64) + ((__int128) A->lo[8] * 17251910984420247954u) + ((__int128) (LOW(A->lo[8] * 270780104259680074) + LOW(A->hi[8] * 17251910984420247954u)) << 64) + ((__int128) A->lo[0] * 4118346716850393172u) + ((__int128) (LOW(A->lo[0] * 1632220371660336250) + LOW(A->hi[0] * 4118346716850393172u)) << 64) + ((__int128) A->lo[1] * 7289474052683735178u) + ((__int128) (LOW(A->lo[1] * -9141404196223785588) + LOW(A->hi[1] * 7289474052683735178u)) << 64) + ((__int128) A->lo[2] * 14393630769614108267u) + ((__int128) (LOW(A->lo[2] * -3720001336475404590) + LOW(A->hi[2] * 14393630769614108267u)) << 64) + ((__int128) A->lo[3] * 4762257142323208001u) + ((__int128) (LOW(A->lo[3] * 9153554377090773830) + LOW(A->hi[3] * 4762257142323208001u)) << 64) + ((__int128) A->lo[4] * 11795090199601762376u) + ((__int128) (LOW(A->lo[4] * 227776749162088947) + LOW(A->hi[4] * 11795090199601762376u)) << 64) + ((__int128) A->lo[5] * 2020236466581256967u) + ((__int128) (LOW(A->lo[5] * -5370770653914184426) + LOW(A->hi[5] * 2020236466581256967u)) << 64);
Rlo[6] = (__int128) ((__int128) A->lo[7] * 3359726971224195042u) + ((__int128) (LOW(A->lo[7] * -2533010665450955263) + LOW(A->hi[7] * 3359726971224195042u)) << 64) + ((__int128) A->lo[8] * 10168657750064502490u) + ((__int128) (LOW(A->lo[8] * 4687866702093671120) + LOW(A->hi[8] * 10168657750064502490u)) << 64) + ((__int128) A->lo[0] * 8625955492210123977u) + ((__int128) (LOW(A->lo[0] * -9087981984724935771) + LOW(A->hi[0] * 8625955492210123977u)) << 64) + ((__int128) A->lo[1] * 4118346716850393172u) + ((__int128) (LOW(A->lo[1] * 1632220371660336250) + LOW(A->hi[1] * 4118346716850393172u)) << 64) + ((__int128) A->lo[2] * 7289474052683735178u) + ((__int128) (LOW(A->lo[2] * -9141404196223785588) + LOW(A->hi[2] * 7289474052683735178u)) << 64) + ((__int128) A->lo[3] * 14393630769614108267u) + ((__int128) (LOW(A->lo[3] * -3720001336475404590) + LOW(A->hi[3] * 14393630769614108267u)) << 64) + ((__int128) A->lo[4] * 4762257142323208001u) + ((__int128) (LOW(A->lo[4] * 9153554377090773830) + LOW(A->hi[4] * 4762257142323208001u)) << 64) + ((__int128) A->lo[5] * 11795090199601762376u) + ((__int128) (LOW(A->lo[5] * 227776749162088947) + LOW(A->hi[5] * 11795090199601762376u)) << 64) + ((__int128) A->lo[6] * 2020236466581256967u) + ((__int128) (LOW(A->lo[6] * -5370770653914184426) + LOW(A->hi[6] * 2020236466581256967u)) << 64);
Rlo[7] = (__int128) ((__int128) A->lo[8] * 3359726971224195042u) + ((__int128) (LOW(A->lo[8] * -2533010665450955263) + LOW(A->hi[8] * 3359726971224195042u)) << 64) + ((__int128) A->lo[0] * 5084328875032251245u) + ((__int128) (LOW(A->lo[0] * -6879438685807940248) + LOW(A->hi[0] * 5084328875032251245u)) << 64) + ((__int128) A->lo[1] * 8625955492210123977u) + ((__int128) (LOW(A->lo[1] * -9087981984724935771) + LOW(A->hi[1] * 8625955492210123977u)) << 64) + ((__int128) A->lo[2] * 4118346716850393172u) + ((__int128) (LOW(A->lo[2] * 1632220371660336250) + LOW(A->hi[2] * 4118346716850393172u)) << 64) + ((__int128) A->lo[3] * 7289474052683735178u) + ((__int128) (LOW(A->lo[3] * -9141404196223785588) + LOW(A->hi[3] * 7289474052683735178u)) << 64) + ((__int128) A->lo[4] * 14393630769614108267u) + ((__int128) (LOW(A->lo[4] * -3720001336475404590) + LOW(A->hi[4] * 14393630769614108267u)) << 64) + ((__int128) A->lo[5] * 4762257142323208001u) + ((__int128) (LOW(A->lo[5] * 9153554377090773830) + LOW(A->hi[5] * 4762257142323208001u)) << 64) + ((__int128) A->lo[6] * 11795090199601762376u) + ((__int128) (LOW(A->lo[6] * 227776749162088947) + LOW(A->hi[6] * 11795090199601762376u)) << 64) + ((__int128) A->lo[7] * 2020236466581256967u) + ((__int128) (LOW(A->lo[7] * -5370770653914184426) + LOW(A->hi[7] * 2020236466581256967u)) << 64);
Rlo[8] = (__int128) ((__int128) A->lo[0] * 10903235522466873329u) + ((__int128) (LOW(A->lo[0] * -1266505332725477632) + LOW(A->hi[0] * 10903235522466873329u)) << 64) + ((__int128) A->lo[1] * 5084328875032251245u) + ((__int128) (LOW(A->lo[1] * -6879438685807940248) + LOW(A->hi[1] * 5084328875032251245u)) << 64) + ((__int128) A->lo[2] * 8625955492210123977u) + ((__int128) (LOW(A->lo[2] * -9087981984724935771) + LOW(A->hi[2] * 8625955492210123977u)) << 64) + ((__int128) A->lo[3] * 4118346716850393172u) + ((__int128) (LOW(A->lo[3] * 1632220371660336250) + LOW(A->hi[3] * 4118346716850393172u)) << 64) + ((__int128) A->lo[4] * 7289474052683735178u) + ((__int128) (LOW(A->lo[4] * -9141404196223785588) + LOW(A->hi[4] * 7289474052683735178u)) << 64) + ((__int128) A->lo[5] * 14393630769614108267u) + ((__int128) (LOW(A->lo[5] * -3720001336475404590) + LOW(A->hi[5] * 14393630769614108267u)) << 64) + ((__int128) A->lo[6] * 4762257142323208001u) + ((__int128) (LOW(A->lo[6] * 9153554377090773830) + LOW(A->hi[6] * 4762257142323208001u)) << 64) + ((__int128) A->lo[7] * 11795090199601762376u) + ((__int128) (LOW(A->lo[7] * 227776749162088947) + LOW(A->hi[7] * 11795090199601762376u)) << 64) + ((__int128) A->lo[8] * 2020236466581256967u) + ((__int128) (LOW(A->lo[8] * -5370770653914184426) + LOW(A->hi[8] * 2020236466581256967u)) << 64);
}


static inline void m_mns128_mod_mult_ext_red_pre(__int128* restrict Rhi, 
	unsigned __int128* restrict Rlo, const restrict poly128 A)
{
	unsigned __int128 A0B0, A1B0, A0B1, tmplo;
	__int128 A1B1, aux2, aux3;

	A1B1 = (__int128) LOW(A->hi[1]) * -313812113198488;
	A1B0 = (__int128) LOW(A->hi[1]) * 612045544183893618u;
	A0B1 = (__int128) (A->lo[1]) * -313812113198488;
	A0B0 = (__int128) (A->lo[1]) * 612045544183893618u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[0] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[0], tmplo, Rlo + 0);

	A1B1 = (__int128) LOW(A->hi[2]) * -885289777392482;
	A1B0 = (__int128) LOW(A->hi[2]) * 415127366214307844u;
	A0B1 = (__int128) (A->lo[2]) * -885289777392482;
	A0B0 = (__int128) (A->lo[2]) * 415127366214307844u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[0] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[0], tmplo, Rlo + 0);

	A1B1 = (__int128) LOW(A->hi[3]) * -789141535705794;
	A1B0 = (__int128) LOW(A->hi[3]) * 3526680946142954750u;
	A0B1 = (__int128) (A->lo[3]) * -789141535705794;
	A0B0 = (__int128) (A->lo[3]) * 3526680946142954750u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[0] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[0], tmplo, Rlo + 0);

	A1B1 = (__int128) LOW(A->hi[4]) * 804290293987654;
	A1B0 = (__int128) LOW(A->hi[4]) * 11747119917909636504u;
	A0B1 = (__int128) (A->lo[4]) * 804290293987654;
	A0B0 = (__int128) (A->lo[4]) * 11747119917909636504u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[0] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[0], tmplo, Rlo + 0);

	A1B1 = (__int128) LOW(A->hi[5]) * -737962507460388;
	A1B0 = (__int128) LOW(A->hi[5]) * 2186863252145676954u;
	A0B1 = (__int128) (A->lo[5]) * -737962507460388;
	A0B0 = (__int128) (A->lo[5]) * 2186863252145676954u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[0] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[0], tmplo, Rlo + 0);

	A1B1 = (__int128) LOW(A->hi[6]) * 271035716806352;
	A1B0 = (__int128) LOW(A->hi[6]) * 1113829386659060842u;
	A0B1 = (__int128) (A->lo[6]) * 271035716806352;
	A0B0 = (__int128) (A->lo[6]) * 1113829386659060842u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[0] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[0], tmplo, Rlo + 0);

	A1B1 = (__int128) LOW(A->hi[7]) * 23052328202174;
	A1B0 = (__int128) LOW(A->hi[7]) * 18205127288637979866u;
	A0B1 = (__int128) (A->lo[7]) * 23052328202174;
	A0B0 = (__int128) (A->lo[7]) * 18205127288637979866u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[0] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[0], tmplo, Rlo + 0);

	A1B1 = (__int128) LOW(A->hi[8]) * -190124665553501;
	A1B0 = (__int128) LOW(A->hi[8]) * 16826900362586959376u;
	A0B1 = (__int128) (A->lo[8]) * -190124665553501;
	A0B0 = (__int128) (A->lo[8]) * 16826900362586959376u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[0] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[0], tmplo, Rlo + 0);

	A1B1 = (__int128) LOW(A->hi[0]) * -109723346650584;
	A1B0 = (__int128) LOW(A->hi[0]) * 3172079863358853931u;
	A0B1 = (__int128) (A->lo[0]) * -109723346650584;
	A0B0 = (__int128) (A->lo[0]) * 3172079863358853931u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[0] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[0], tmplo, Rlo + 0);

	A1B1 = (__int128) LOW(A->hi[2]) * -313812113198488;
	A1B0 = (__int128) LOW(A->hi[2]) * 612045544183893618u;
	A0B1 = (__int128) (A->lo[2]) * -313812113198488;
	A0B0 = (__int128) (A->lo[2]) * 612045544183893618u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[1] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[1], tmplo, Rlo + 1);

	A1B1 = (__int128) LOW(A->hi[3]) * -885289777392482;
	A1B0 = (__int128) LOW(A->hi[3]) * 415127366214307844u;
	A0B1 = (__int128) (A->lo[3]) * -885289777392482;
	A0B0 = (__int128) (A->lo[3]) * 415127366214307844u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[1] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[1], tmplo, Rlo + 1);

	A1B1 = (__int128) LOW(A->hi[4]) * -789141535705794;
	A1B0 = (__int128) LOW(A->hi[4]) * 3526680946142954750u;
	A0B1 = (__int128) (A->lo[4]) * -789141535705794;
	A0B0 = (__int128) (A->lo[4]) * 3526680946142954750u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[1] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[1], tmplo, Rlo + 1);

	A1B1 = (__int128) LOW(A->hi[5]) * 804290293987654;
	A1B0 = (__int128) LOW(A->hi[5]) * 11747119917909636504u;
	A0B1 = (__int128) (A->lo[5]) * 804290293987654;
	A0B0 = (__int128) (A->lo[5]) * 11747119917909636504u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[1] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[1], tmplo, Rlo + 1);

	A1B1 = (__int128) LOW(A->hi[6]) * -737962507460388;
	A1B0 = (__int128) LOW(A->hi[6]) * 2186863252145676954u;
	A0B1 = (__int128) (A->lo[6]) * -737962507460388;
	A0B0 = (__int128) (A->lo[6]) * 2186863252145676954u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[1] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[1], tmplo, Rlo + 1);

	A1B1 = (__int128) LOW(A->hi[7]) * 271035716806352;
	A1B0 = (__int128) LOW(A->hi[7]) * 1113829386659060842u;
	A0B1 = (__int128) (A->lo[7]) * 271035716806352;
	A0B0 = (__int128) (A->lo[7]) * 1113829386659060842u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[1] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[1], tmplo, Rlo + 1);

	A1B1 = (__int128) LOW(A->hi[8]) * 23052328202174;
	A1B0 = (__int128) LOW(A->hi[8]) * 18205127288637979866u;
	A0B1 = (__int128) (A->lo[8]) * 23052328202174;
	A0B0 = (__int128) (A->lo[8]) * 18205127288637979866u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[1] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[1], tmplo, Rlo + 1);

	A1B1 = (__int128) LOW(A->hi[0]) * -95062332776751;
	A1B0 = (__int128) LOW(A->hi[0]) * 17636822218148255496u;
	A0B1 = (__int128) (A->lo[0]) * -95062332776751;
	A0B0 = (__int128) (A->lo[0]) * 17636822218148255496u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[1] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[1], tmplo, Rlo + 1);

	A1B1 = (__int128) LOW(A->hi[1]) * -109723346650584;
	A1B0 = (__int128) LOW(A->hi[1]) * 3172079863358853931u;
	A0B1 = (__int128) (A->lo[1]) * -109723346650584;
	A0B0 = (__int128) (A->lo[1]) * 3172079863358853931u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[1] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[1], tmplo, Rlo + 1);

	A1B1 = (__int128) LOW(A->hi[3]) * -313812113198488;
	A1B0 = (__int128) LOW(A->hi[3]) * 612045544183893618u;
	A0B1 = (__int128) (A->lo[3]) * -313812113198488;
	A0B0 = (__int128) (A->lo[3]) * 612045544183893618u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[2] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[2], tmplo, Rlo + 2);

	A1B1 = (__int128) LOW(A->hi[4]) * -885289777392482;
	A1B0 = (__int128) LOW(A->hi[4]) * 415127366214307844u;
	A0B1 = (__int128) (A->lo[4]) * -885289777392482;
	A0B0 = (__int128) (A->lo[4]) * 415127366214307844u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[2] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[2], tmplo, Rlo + 2);

	A1B1 = (__int128) LOW(A->hi[5]) * -789141535705794;
	A1B0 = (__int128) LOW(A->hi[5]) * 3526680946142954750u;
	A0B1 = (__int128) (A->lo[5]) * -789141535705794;
	A0B0 = (__int128) (A->lo[5]) * 3526680946142954750u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[2] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[2], tmplo, Rlo + 2);

	A1B1 = (__int128) LOW(A->hi[6]) * 804290293987654;
	A1B0 = (__int128) LOW(A->hi[6]) * 11747119917909636504u;
	A0B1 = (__int128) (A->lo[6]) * 804290293987654;
	A0B0 = (__int128) (A->lo[6]) * 11747119917909636504u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[2] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[2], tmplo, Rlo + 2);

	A1B1 = (__int128) LOW(A->hi[7]) * -737962507460388;
	A1B0 = (__int128) LOW(A->hi[7]) * 2186863252145676954u;
	A0B1 = (__int128) (A->lo[7]) * -737962507460388;
	A0B0 = (__int128) (A->lo[7]) * 2186863252145676954u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[2] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[2], tmplo, Rlo + 2);

	A1B1 = (__int128) LOW(A->hi[8]) * 271035716806352;
	A1B0 = (__int128) LOW(A->hi[8]) * 1113829386659060842u;
	A0B1 = (__int128) (A->lo[8]) * 271035716806352;
	A0B0 = (__int128) (A->lo[8]) * 1113829386659060842u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[2] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[2], tmplo, Rlo + 2);

	A1B1 = (__int128) LOW(A->hi[0]) * 11526164101087;
	A1B0 = (__int128) LOW(A->hi[0]) * 9102563644318989933u;
	A0B1 = (__int128) (A->lo[0]) * 11526164101087;
	A0B0 = (__int128) (A->lo[0]) * 9102563644318989933u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[2] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[2], tmplo, Rlo + 2);

	A1B1 = (__int128) LOW(A->hi[1]) * -95062332776751;
	A1B0 = (__int128) LOW(A->hi[1]) * 17636822218148255496u;
	A0B1 = (__int128) (A->lo[1]) * -95062332776751;
	A0B0 = (__int128) (A->lo[1]) * 17636822218148255496u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[2] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[2], tmplo, Rlo + 2);

	A1B1 = (__int128) LOW(A->hi[2]) * -109723346650584;
	A1B0 = (__int128) LOW(A->hi[2]) * 3172079863358853931u;
	A0B1 = (__int128) (A->lo[2]) * -109723346650584;
	A0B0 = (__int128) (A->lo[2]) * 3172079863358853931u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[2] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[2], tmplo, Rlo + 2);

	A1B1 = (__int128) LOW(A->hi[4]) * -313812113198488;
	A1B0 = (__int128) LOW(A->hi[4]) * 612045544183893618u;
	A0B1 = (__int128) (A->lo[4]) * -313812113198488;
	A0B0 = (__int128) (A->lo[4]) * 612045544183893618u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[3] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[3], tmplo, Rlo + 3);

	A1B1 = (__int128) LOW(A->hi[5]) * -885289777392482;
	A1B0 = (__int128) LOW(A->hi[5]) * 415127366214307844u;
	A0B1 = (__int128) (A->lo[5]) * -885289777392482;
	A0B0 = (__int128) (A->lo[5]) * 415127366214307844u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[3] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[3], tmplo, Rlo + 3);

	A1B1 = (__int128) LOW(A->hi[6]) * -789141535705794;
	A1B0 = (__int128) LOW(A->hi[6]) * 3526680946142954750u;
	A0B1 = (__int128) (A->lo[6]) * -789141535705794;
	A0B0 = (__int128) (A->lo[6]) * 3526680946142954750u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[3] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[3], tmplo, Rlo + 3);

	A1B1 = (__int128) LOW(A->hi[7]) * 804290293987654;
	A1B0 = (__int128) LOW(A->hi[7]) * 11747119917909636504u;
	A0B1 = (__int128) (A->lo[7]) * 804290293987654;
	A0B0 = (__int128) (A->lo[7]) * 11747119917909636504u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[3] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[3], tmplo, Rlo + 3);

	A1B1 = (__int128) LOW(A->hi[8]) * -737962507460388;
	A1B0 = (__int128) LOW(A->hi[8]) * 2186863252145676954u;
	A0B1 = (__int128) (A->lo[8]) * -737962507460388;
	A0B0 = (__int128) (A->lo[8]) * 2186863252145676954u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[3] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[3], tmplo, Rlo + 3);

	A1B1 = (__int128) LOW(A->hi[0]) * 135517858403176;
	A1B0 = (__int128) LOW(A->hi[0]) * 556914693329530421u;
	A0B1 = (__int128) (A->lo[0]) * 135517858403176;
	A0B0 = (__int128) (A->lo[0]) * 556914693329530421u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[3] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[3], tmplo, Rlo + 3);

	A1B1 = (__int128) LOW(A->hi[1]) * 11526164101087;
	A1B0 = (__int128) LOW(A->hi[1]) * 9102563644318989933u;
	A0B1 = (__int128) (A->lo[1]) * 11526164101087;
	A0B0 = (__int128) (A->lo[1]) * 9102563644318989933u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[3] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[3], tmplo, Rlo + 3);

	A1B1 = (__int128) LOW(A->hi[2]) * -95062332776751;
	A1B0 = (__int128) LOW(A->hi[2]) * 17636822218148255496u;
	A0B1 = (__int128) (A->lo[2]) * -95062332776751;
	A0B0 = (__int128) (A->lo[2]) * 17636822218148255496u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[3] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[3], tmplo, Rlo + 3);

	A1B1 = (__int128) LOW(A->hi[3]) * -109723346650584;
	A1B0 = (__int128) LOW(A->hi[3]) * 3172079863358853931u;
	A0B1 = (__int128) (A->lo[3]) * -109723346650584;
	A0B0 = (__int128) (A->lo[3]) * 3172079863358853931u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[3] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[3], tmplo, Rlo + 3);

	A1B1 = (__int128) LOW(A->hi[5]) * -313812113198488;
	A1B0 = (__int128) LOW(A->hi[5]) * 612045544183893618u;
	A0B1 = (__int128) (A->lo[5]) * -313812113198488;
	A0B0 = (__int128) (A->lo[5]) * 612045544183893618u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[4] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[4], tmplo, Rlo + 4);

	A1B1 = (__int128) LOW(A->hi[6]) * -885289777392482;
	A1B0 = (__int128) LOW(A->hi[6]) * 415127366214307844u;
	A0B1 = (__int128) (A->lo[6]) * -885289777392482;
	A0B0 = (__int128) (A->lo[6]) * 415127366214307844u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[4] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[4], tmplo, Rlo + 4);

	A1B1 = (__int128) LOW(A->hi[7]) * -789141535705794;
	A1B0 = (__int128) LOW(A->hi[7]) * 3526680946142954750u;
	A0B1 = (__int128) (A->lo[7]) * -789141535705794;
	A0B0 = (__int128) (A->lo[7]) * 3526680946142954750u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[4] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[4], tmplo, Rlo + 4);

	A1B1 = (__int128) LOW(A->hi[8]) * 804290293987654;
	A1B0 = (__int128) LOW(A->hi[8]) * 11747119917909636504u;
	A0B1 = (__int128) (A->lo[8]) * 804290293987654;
	A0B0 = (__int128) (A->lo[8]) * 11747119917909636504u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[4] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[4], tmplo, Rlo + 4);

	A1B1 = (__int128) LOW(A->hi[0]) * -368981253730194;
	A1B0 = (__int128) LOW(A->hi[0]) * 1093431626072838477u;
	A0B1 = (__int128) (A->lo[0]) * -368981253730194;
	A0B0 = (__int128) (A->lo[0]) * 1093431626072838477u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[4] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[4], tmplo, Rlo + 4);

	A1B1 = (__int128) LOW(A->hi[1]) * 135517858403176;
	A1B0 = (__int128) LOW(A->hi[1]) * 556914693329530421u;
	A0B1 = (__int128) (A->lo[1]) * 135517858403176;
	A0B0 = (__int128) (A->lo[1]) * 556914693329530421u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[4] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[4], tmplo, Rlo + 4);

	A1B1 = (__int128) LOW(A->hi[2]) * 11526164101087;
	A1B0 = (__int128) LOW(A->hi[2]) * 9102563644318989933u;
	A0B1 = (__int128) (A->lo[2]) * 11526164101087;
	A0B0 = (__int128) (A->lo[2]) * 9102563644318989933u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[4] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[4], tmplo, Rlo + 4);

	A1B1 = (__int128) LOW(A->hi[3]) * -95062332776751;
	A1B0 = (__int128) LOW(A->hi[3]) * 17636822218148255496u;
	A0B1 = (__int128) (A->lo[3]) * -95062332776751;
	A0B0 = (__int128) (A->lo[3]) * 17636822218148255496u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[4] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[4], tmplo, Rlo + 4);

	A1B1 = (__int128) LOW(A->hi[4]) * -109723346650584;
	A1B0 = (__int128) LOW(A->hi[4]) * 3172079863358853931u;
	A0B1 = (__int128) (A->lo[4]) * -109723346650584;
	A0B0 = (__int128) (A->lo[4]) * 3172079863358853931u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[4] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[4], tmplo, Rlo + 4);

	A1B1 = (__int128) LOW(A->hi[6]) * -313812113198488;
	A1B0 = (__int128) LOW(A->hi[6]) * 612045544183893618u;
	A0B1 = (__int128) (A->lo[6]) * -313812113198488;
	A0B0 = (__int128) (A->lo[6]) * 612045544183893618u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[5] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[5], tmplo, Rlo + 5);

	A1B1 = (__int128) LOW(A->hi[7]) * -885289777392482;
	A1B0 = (__int128) LOW(A->hi[7]) * 415127366214307844u;
	A0B1 = (__int128) (A->lo[7]) * -885289777392482;
	A0B0 = (__int128) (A->lo[7]) * 415127366214307844u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[5] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[5], tmplo, Rlo + 5);

	A1B1 = (__int128) LOW(A->hi[8]) * -789141535705794;
	A1B0 = (__int128) LOW(A->hi[8]) * 3526680946142954750u;
	A0B1 = (__int128) (A->lo[8]) * -789141535705794;
	A0B0 = (__int128) (A->lo[8]) * 3526680946142954750u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[5] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[5], tmplo, Rlo + 5);

	A1B1 = (__int128) LOW(A->hi[0]) * 402145146993827;
	A1B0 = (__int128) LOW(A->hi[0]) * 5873559958954818252u;
	A0B1 = (__int128) (A->lo[0]) * 402145146993827;
	A0B0 = (__int128) (A->lo[0]) * 5873559958954818252u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[5] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[5], tmplo, Rlo + 5);

	A1B1 = (__int128) LOW(A->hi[1]) * -368981253730194;
	A1B0 = (__int128) LOW(A->hi[1]) * 1093431626072838477u;
	A0B1 = (__int128) (A->lo[1]) * -368981253730194;
	A0B0 = (__int128) (A->lo[1]) * 1093431626072838477u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[5] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[5], tmplo, Rlo + 5);

	A1B1 = (__int128) LOW(A->hi[2]) * 135517858403176;
	A1B0 = (__int128) LOW(A->hi[2]) * 556914693329530421u;
	A0B1 = (__int128) (A->lo[2]) * 135517858403176;
	A0B0 = (__int128) (A->lo[2]) * 556914693329530421u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[5] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[5], tmplo, Rlo + 5);

	A1B1 = (__int128) LOW(A->hi[3]) * 11526164101087;
	A1B0 = (__int128) LOW(A->hi[3]) * 9102563644318989933u;
	A0B1 = (__int128) (A->lo[3]) * 11526164101087;
	A0B0 = (__int128) (A->lo[3]) * 9102563644318989933u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[5] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[5], tmplo, Rlo + 5);

	A1B1 = (__int128) LOW(A->hi[4]) * -95062332776751;
	A1B0 = (__int128) LOW(A->hi[4]) * 17636822218148255496u;
	A0B1 = (__int128) (A->lo[4]) * -95062332776751;
	A0B0 = (__int128) (A->lo[4]) * 17636822218148255496u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[5] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[5], tmplo, Rlo + 5);

	A1B1 = (__int128) LOW(A->hi[5]) * -109723346650584;
	A1B0 = (__int128) LOW(A->hi[5]) * 3172079863358853931u;
	A0B1 = (__int128) (A->lo[5]) * -109723346650584;
	A0B0 = (__int128) (A->lo[5]) * 3172079863358853931u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[5] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[5], tmplo, Rlo + 5);

	A1B1 = (__int128) LOW(A->hi[7]) * -313812113198488;
	A1B0 = (__int128) LOW(A->hi[7]) * 612045544183893618u;
	A0B1 = (__int128) (A->lo[7]) * -313812113198488;
	A0B0 = (__int128) (A->lo[7]) * 612045544183893618u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[6] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[6], tmplo, Rlo + 6);

	A1B1 = (__int128) LOW(A->hi[8]) * -885289777392482;
	A1B0 = (__int128) LOW(A->hi[8]) * 415127366214307844u;
	A0B1 = (__int128) (A->lo[8]) * -885289777392482;
	A0B0 = (__int128) (A->lo[8]) * 415127366214307844u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[6] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[6], tmplo, Rlo + 6);

	A1B1 = (__int128) LOW(A->hi[0]) * -394570767852897;
	A1B0 = (__int128) LOW(A->hi[0]) * 1763340473071477375u;
	A0B1 = (__int128) (A->lo[0]) * -394570767852897;
	A0B0 = (__int128) (A->lo[0]) * 1763340473071477375u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[6] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[6], tmplo, Rlo + 6);

	A1B1 = (__int128) LOW(A->hi[1]) * 402145146993827;
	A1B0 = (__int128) LOW(A->hi[1]) * 5873559958954818252u;
	A0B1 = (__int128) (A->lo[1]) * 402145146993827;
	A0B0 = (__int128) (A->lo[1]) * 5873559958954818252u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[6] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[6], tmplo, Rlo + 6);

	A1B1 = (__int128) LOW(A->hi[2]) * -368981253730194;
	A1B0 = (__int128) LOW(A->hi[2]) * 1093431626072838477u;
	A0B1 = (__int128) (A->lo[2]) * -368981253730194;
	A0B0 = (__int128) (A->lo[2]) * 1093431626072838477u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[6] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[6], tmplo, Rlo + 6);

	A1B1 = (__int128) LOW(A->hi[3]) * 135517858403176;
	A1B0 = (__int128) LOW(A->hi[3]) * 556914693329530421u;
	A0B1 = (__int128) (A->lo[3]) * 135517858403176;
	A0B0 = (__int128) (A->lo[3]) * 556914693329530421u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[6] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[6], tmplo, Rlo + 6);

	A1B1 = (__int128) LOW(A->hi[4]) * 11526164101087;
	A1B0 = (__int128) LOW(A->hi[4]) * 9102563644318989933u;
	A0B1 = (__int128) (A->lo[4]) * 11526164101087;
	A0B0 = (__int128) (A->lo[4]) * 9102563644318989933u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[6] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[6], tmplo, Rlo + 6);

	A1B1 = (__int128) LOW(A->hi[5]) * -95062332776751;
	A1B0 = (__int128) LOW(A->hi[5]) * 17636822218148255496u;
	A0B1 = (__int128) (A->lo[5]) * -95062332776751;
	A0B0 = (__int128) (A->lo[5]) * 17636822218148255496u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[6] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[6], tmplo, Rlo + 6);

	A1B1 = (__int128) LOW(A->hi[6]) * -109723346650584;
	A1B0 = (__int128) LOW(A->hi[6]) * 3172079863358853931u;
	A0B1 = (__int128) (A->lo[6]) * -109723346650584;
	A0B0 = (__int128) (A->lo[6]) * 3172079863358853931u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[6] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[6], tmplo, Rlo + 6);

	A1B1 = (__int128) LOW(A->hi[8]) * -313812113198488;
	A1B0 = (__int128) LOW(A->hi[8]) * 612045544183893618u;
	A0B1 = (__int128) (A->lo[8]) * -313812113198488;
	A0B0 = (__int128) (A->lo[8]) * 612045544183893618u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[7] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[7], tmplo, Rlo + 7);

	A1B1 = (__int128) LOW(A->hi[0]) * -442644888696241;
	A1B0 = (__int128) LOW(A->hi[0]) * 207563683107153922u;
	A0B1 = (__int128) (A->lo[0]) * -442644888696241;
	A0B0 = (__int128) (A->lo[0]) * 207563683107153922u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[7] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[7], tmplo, Rlo + 7);

	A1B1 = (__int128) LOW(A->hi[1]) * -394570767852897;
	A1B0 = (__int128) LOW(A->hi[1]) * 1763340473071477375u;
	A0B1 = (__int128) (A->lo[1]) * -394570767852897;
	A0B0 = (__int128) (A->lo[1]) * 1763340473071477375u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[7] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[7], tmplo, Rlo + 7);

	A1B1 = (__int128) LOW(A->hi[2]) * 402145146993827;
	A1B0 = (__int128) LOW(A->hi[2]) * 5873559958954818252u;
	A0B1 = (__int128) (A->lo[2]) * 402145146993827;
	A0B0 = (__int128) (A->lo[2]) * 5873559958954818252u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[7] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[7], tmplo, Rlo + 7);

	A1B1 = (__int128) LOW(A->hi[3]) * -368981253730194;
	A1B0 = (__int128) LOW(A->hi[3]) * 1093431626072838477u;
	A0B1 = (__int128) (A->lo[3]) * -368981253730194;
	A0B0 = (__int128) (A->lo[3]) * 1093431626072838477u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[7] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[7], tmplo, Rlo + 7);

	A1B1 = (__int128) LOW(A->hi[4]) * 135517858403176;
	A1B0 = (__int128) LOW(A->hi[4]) * 556914693329530421u;
	A0B1 = (__int128) (A->lo[4]) * 135517858403176;
	A0B0 = (__int128) (A->lo[4]) * 556914693329530421u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[7] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[7], tmplo, Rlo + 7);

	A1B1 = (__int128) LOW(A->hi[5]) * 11526164101087;
	A1B0 = (__int128) LOW(A->hi[5]) * 9102563644318989933u;
	A0B1 = (__int128) (A->lo[5]) * 11526164101087;
	A0B0 = (__int128) (A->lo[5]) * 9102563644318989933u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[7] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[7], tmplo, Rlo + 7);

	A1B1 = (__int128) LOW(A->hi[6]) * -95062332776751;
	A1B0 = (__int128) LOW(A->hi[6]) * 17636822218148255496u;
	A0B1 = (__int128) (A->lo[6]) * -95062332776751;
	A0B0 = (__int128) (A->lo[6]) * 17636822218148255496u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[7] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[7], tmplo, Rlo + 7);

	A1B1 = (__int128) LOW(A->hi[7]) * -109723346650584;
	A1B0 = (__int128) LOW(A->hi[7]) * 3172079863358853931u;
	A0B1 = (__int128) (A->lo[7]) * -109723346650584;
	A0B0 = (__int128) (A->lo[7]) * 3172079863358853931u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[7] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[7], tmplo, Rlo + 7);

	A1B1 = (__int128) LOW(A->hi[0]) * -156906056599244;
	A1B0 = (__int128) LOW(A->hi[0]) * 306022772091946809u;
	A0B1 = (__int128) (A->lo[0]) * -156906056599244;
	A0B0 = (__int128) (A->lo[0]) * 306022772091946809u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[8] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[8], tmplo, Rlo + 8);

	A1B1 = (__int128) LOW(A->hi[1]) * -442644888696241;
	A1B0 = (__int128) LOW(A->hi[1]) * 207563683107153922u;
	A0B1 = (__int128) (A->lo[1]) * -442644888696241;
	A0B0 = (__int128) (A->lo[1]) * 207563683107153922u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[8] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[8], tmplo, Rlo + 8);

	A1B1 = (__int128) LOW(A->hi[2]) * -394570767852897;
	A1B0 = (__int128) LOW(A->hi[2]) * 1763340473071477375u;
	A0B1 = (__int128) (A->lo[2]) * -394570767852897;
	A0B0 = (__int128) (A->lo[2]) * 1763340473071477375u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[8] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[8], tmplo, Rlo + 8);

	A1B1 = (__int128) LOW(A->hi[3]) * 402145146993827;
	A1B0 = (__int128) LOW(A->hi[3]) * 5873559958954818252u;
	A0B1 = (__int128) (A->lo[3]) * 402145146993827;
	A0B0 = (__int128) (A->lo[3]) * 5873559958954818252u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[8] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[8], tmplo, Rlo + 8);

	A1B1 = (__int128) LOW(A->hi[4]) * -368981253730194;
	A1B0 = (__int128) LOW(A->hi[4]) * 1093431626072838477u;
	A0B1 = (__int128) (A->lo[4]) * -368981253730194;
	A0B0 = (__int128) (A->lo[4]) * 1093431626072838477u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[8] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[8], tmplo, Rlo + 8);

	A1B1 = (__int128) LOW(A->hi[5]) * 135517858403176;
	A1B0 = (__int128) LOW(A->hi[5]) * 556914693329530421u;
	A0B1 = (__int128) (A->lo[5]) * 135517858403176;
	A0B0 = (__int128) (A->lo[5]) * 556914693329530421u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[8] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[8], tmplo, Rlo + 8);

	A1B1 = (__int128) LOW(A->hi[6]) * 11526164101087;
	A1B0 = (__int128) LOW(A->hi[6]) * 9102563644318989933u;
	A0B1 = (__int128) (A->lo[6]) * 11526164101087;
	A0B0 = (__int128) (A->lo[6]) * 9102563644318989933u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[8] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[8], tmplo, Rlo + 8);

	A1B1 = (__int128) LOW(A->hi[7]) * -95062332776751;
	A1B0 = (__int128) LOW(A->hi[7]) * 17636822218148255496u;
	A0B1 = (__int128) (A->lo[7]) * -95062332776751;
	A0B0 = (__int128) (A->lo[7]) * 17636822218148255496u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[8] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[8], tmplo, Rlo + 8);

	A1B1 = (__int128) LOW(A->hi[8]) * -109723346650584;
	A1B0 = (__int128) LOW(A->hi[8]) * 3172079863358853931u;
	A0B1 = (__int128) (A->lo[8]) * -109723346650584;
	A0B0 = (__int128) (A->lo[8]) * 3172079863358853931u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[8] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[8], tmplo, Rlo + 8);

}


static inline void m_mns128_mod_mult_ext_red_pre_one_line(__int128* restrict Rhi, 
	unsigned __int128* restrict Rlo, const restrict poly128 A)
{
	Rhi[0] = (__int128) __builtin_add_overflow(((__int128) A->lo[1] * 612045544183893618u), ((unsigned __int128) ((__int128) A->lo[1] * -313812113198488) << 64), Rlo + 0)
		+ __builtin_add_overflow(Rlo[0], ((unsigned __int128) ((__int128) A->hi[1] * 612045544183893618u) << 64), Rlo + 0)
		+ HIGH((__int128) A->lo[1] * -313812113198488) + HI((unsigned __int128) A->hi[1] * 612045544183893618u) + ((__int128) A->hi[1] * -313812113198488)
		+ __builtin_add_overflow(((__int128) A->lo[2] * 415127366214307844u), Rlo[0], Rlo + 0)
		+ __builtin_add_overflow(Rlo[0], ((unsigned __int128) ((__int128) A->lo[2] * -885289777392482) << 64), Rlo + 0)
		+ __builtin_add_overflow(Rlo[0], ((unsigned __int128) ((__int128) A->hi[2] * 415127366214307844u) << 64), Rlo + 0)
		+ HIGH((__int128) A->lo[2] * -885289777392482) + HI((unsigned __int128) A->hi[2] * 415127366214307844u) + ((__int128) A->hi[2] * -885289777392482)
		+ __builtin_add_overflow(((__int128) A->lo[3] * 3526680946142954750u), Rlo[0], Rlo + 0)
		+ __builtin_add_overflow(Rlo[0], ((unsigned __int128) ((__int128) A->lo[3] * -789141535705794) << 64), Rlo + 0)
		+ __builtin_add_overflow(Rlo[0], ((unsigned __int128) ((__int128) A->hi[3] * 3526680946142954750u) << 64), Rlo + 0)
		+ HIGH((__int128) A->lo[3] * -789141535705794) + HI((unsigned __int128) A->hi[3] * 3526680946142954750u) + ((__int128) A->hi[3] * -789141535705794)
		+ __builtin_add_overflow(((__int128) A->lo[4] * 11747119917909636504u), Rlo[0], Rlo + 0)
		+ __builtin_add_overflow(Rlo[0], ((unsigned __int128) ((__int128) A->lo[4] * 804290293987654) << 64), Rlo + 0)
		+ __builtin_add_overflow(Rlo[0], ((unsigned __int128) ((__int128) A->hi[4] * 11747119917909636504u) << 64), Rlo + 0)
		+ HIGH((__int128) A->lo[4] * 804290293987654) + HI((unsigned __int128) A->hi[4] * 11747119917909636504u) + ((__int128) A->hi[4] * 804290293987654)
		+ __builtin_add_overflow(((__int128) A->lo[5] * 2186863252145676954u), Rlo[0], Rlo + 0)
		+ __builtin_add_overflow(Rlo[0], ((unsigned __int128) ((__int128) A->lo[5] * -737962507460388) << 64), Rlo + 0)
		+ __builtin_add_overflow(Rlo[0], ((unsigned __int128) ((__int128) A->hi[5] * 2186863252145676954u) << 64), Rlo + 0)
		+ HIGH((__int128) A->lo[5] * -737962507460388) + HI((unsigned __int128) A->hi[5] * 2186863252145676954u) + ((__int128) A->hi[5] * -737962507460388)
		+ __builtin_add_overflow(((__int128) A->lo[6] * 1113829386659060842u), Rlo[0], Rlo + 0)
		+ __builtin_add_overflow(Rlo[0], ((unsigned __int128) ((__int128) A->lo[6] * 271035716806352) << 64), Rlo + 0)
		+ __builtin_add_overflow(Rlo[0], ((unsigned __int128) ((__int128) A->hi[6] * 1113829386659060842u) << 64), Rlo + 0)
		+ HIGH((__int128) A->lo[6] * 271035716806352) + HI((unsigned __int128) A->hi[6] * 1113829386659060842u) + ((__int128) A->hi[6] * 271035716806352)
		+ __builtin_add_overflow(((__int128) A->lo[7] * 18205127288637979866u), Rlo[0], Rlo + 0)
		+ __builtin_add_overflow(Rlo[0], ((unsigned __int128) ((__int128) A->lo[7] * 23052328202174) << 64), Rlo + 0)
		+ __builtin_add_overflow(Rlo[0], ((unsigned __int128) ((__int128) A->hi[7] * 18205127288637979866u) << 64), Rlo + 0)
		+ HIGH((__int128) A->lo[7] * 23052328202174) + HI((unsigned __int128) A->hi[7] * 18205127288637979866u) + ((__int128) A->hi[7] * 23052328202174)
		+ __builtin_add_overflow(((__int128) A->lo[8] * 16826900362586959376u), Rlo[0], Rlo + 0)
		+ __builtin_add_overflow(Rlo[0], ((unsigned __int128) ((__int128) A->lo[8] * -190124665553501) << 64), Rlo + 0)
		+ __builtin_add_overflow(Rlo[0], ((unsigned __int128) ((__int128) A->hi[8] * 16826900362586959376u) << 64), Rlo + 0)
		+ HIGH((__int128) A->lo[8] * -190124665553501) + HI((unsigned __int128) A->hi[8] * 16826900362586959376u) + ((__int128) A->hi[8] * -190124665553501)
		+ __builtin_add_overflow(((__int128) A->lo[0] * 3172079863358853931u), Rlo[0], Rlo + 0)
		+ __builtin_add_overflow(Rlo[0], ((unsigned __int128) ((__int128) A->lo[0] * -109723346650584) << 64), Rlo + 0)
		+ __builtin_add_overflow(Rlo[0], ((unsigned __int128) ((__int128) A->hi[0] * 3172079863358853931u) << 64), Rlo + 0)
		+ HIGH((__int128) A->lo[0] * -109723346650584) + HI((unsigned __int128) A->hi[0] * 3172079863358853931u) + ((__int128) A->hi[0] * -109723346650584);
	Rhi[1] = (__int128) __builtin_add_overflow(((__int128) A->lo[2] * 612045544183893618u), ((unsigned __int128) ((__int128) A->lo[2] * -313812113198488) << 64), Rlo + 1)
		+ __builtin_add_overflow(((__int128) A->lo[2] * 612045544183893618u), Rlo[1], Rlo + 1)
		+ __builtin_add_overflow(Rlo[1], ((unsigned __int128) ((__int128) A->lo[2] * -313812113198488) << 64), Rlo + 1)
		+ __builtin_add_overflow(Rlo[1], ((unsigned __int128) ((__int128) A->hi[2] * 612045544183893618u) << 64), Rlo + 1)
		+ HIGH((__int128) A->lo[2] * -313812113198488) + HI((unsigned __int128) A->hi[2] * 612045544183893618u) + ((__int128) A->hi[2] * -313812113198488)
		+ __builtin_add_overflow(((__int128) A->lo[3] * 415127366214307844u), Rlo[1], Rlo + 1)
		+ __builtin_add_overflow(Rlo[1], ((unsigned __int128) ((__int128) A->lo[3] * -885289777392482) << 64), Rlo + 1)
		+ __builtin_add_overflow(Rlo[1], ((unsigned __int128) ((__int128) A->hi[3] * 415127366214307844u) << 64), Rlo + 1)
		+ HIGH((__int128) A->lo[3] * -885289777392482) + HI((unsigned __int128) A->hi[3] * 415127366214307844u) + ((__int128) A->hi[3] * -885289777392482)
		+ __builtin_add_overflow(((__int128) A->lo[4] * 3526680946142954750u), Rlo[1], Rlo + 1)
		+ __builtin_add_overflow(Rlo[1], ((unsigned __int128) ((__int128) A->lo[4] * -789141535705794) << 64), Rlo + 1)
		+ __builtin_add_overflow(Rlo[1], ((unsigned __int128) ((__int128) A->hi[4] * 3526680946142954750u) << 64), Rlo + 1)
		+ HIGH((__int128) A->lo[4] * -789141535705794) + HI((unsigned __int128) A->hi[4] * 3526680946142954750u) + ((__int128) A->hi[4] * -789141535705794)
		+ __builtin_add_overflow(((__int128) A->lo[5] * 11747119917909636504u), Rlo[1], Rlo + 1)
		+ __builtin_add_overflow(Rlo[1], ((unsigned __int128) ((__int128) A->lo[5] * 804290293987654) << 64), Rlo + 1)
		+ __builtin_add_overflow(Rlo[1], ((unsigned __int128) ((__int128) A->hi[5] * 11747119917909636504u) << 64), Rlo + 1)
		+ HIGH((__int128) A->lo[5] * 804290293987654) + HI((unsigned __int128) A->hi[5] * 11747119917909636504u) + ((__int128) A->hi[5] * 804290293987654)
		+ __builtin_add_overflow(((__int128) A->lo[6] * 2186863252145676954u), Rlo[1], Rlo + 1)
		+ __builtin_add_overflow(Rlo[1], ((unsigned __int128) ((__int128) A->lo[6] * -737962507460388) << 64), Rlo + 1)
		+ __builtin_add_overflow(Rlo[1], ((unsigned __int128) ((__int128) A->hi[6] * 2186863252145676954u) << 64), Rlo + 1)
		+ HIGH((__int128) A->lo[6] * -737962507460388) + HI((unsigned __int128) A->hi[6] * 2186863252145676954u) + ((__int128) A->hi[6] * -737962507460388)
		+ __builtin_add_overflow(((__int128) A->lo[7] * 1113829386659060842u), Rlo[1], Rlo + 1)
		+ __builtin_add_overflow(Rlo[1], ((unsigned __int128) ((__int128) A->lo[7] * 271035716806352) << 64), Rlo + 1)
		+ __builtin_add_overflow(Rlo[1], ((unsigned __int128) ((__int128) A->hi[7] * 1113829386659060842u) << 64), Rlo + 1)
		+ HIGH((__int128) A->lo[7] * 271035716806352) + HI((unsigned __int128) A->hi[7] * 1113829386659060842u) + ((__int128) A->hi[7] * 271035716806352)
		+ __builtin_add_overflow(((__int128) A->lo[8] * 18205127288637979866u), Rlo[1], Rlo + 1)
		+ __builtin_add_overflow(Rlo[1], ((unsigned __int128) ((__int128) A->lo[8] * 23052328202174) << 64), Rlo + 1)
		+ __builtin_add_overflow(Rlo[1], ((unsigned __int128) ((__int128) A->hi[8] * 18205127288637979866u) << 64), Rlo + 1)
		+ HIGH((__int128) A->lo[8] * 23052328202174) + HI((unsigned __int128) A->hi[8] * 18205127288637979866u) + ((__int128) A->hi[8] * 23052328202174)
		+ __builtin_add_overflow(((__int128) A->lo[0] * 17636822218148255496u), Rlo[1], Rlo + 1)
		+ __builtin_add_overflow(Rlo[1], ((unsigned __int128) ((__int128) A->lo[0] * -95062332776751) << 64), Rlo + 1)
		+ __builtin_add_overflow(Rlo[1], ((unsigned __int128) ((__int128) A->hi[0] * 17636822218148255496u) << 64), Rlo + 1)
		+ HIGH((__int128) A->lo[0] * -95062332776751) + HI((unsigned __int128) A->hi[0] * 17636822218148255496u) + ((__int128) A->hi[0] * -95062332776751)
		+ __builtin_add_overflow(((__int128) A->lo[1] * 3172079863358853931u), Rlo[1], Rlo + 1)
		+ __builtin_add_overflow(Rlo[1], ((unsigned __int128) ((__int128) A->lo[1] * -109723346650584) << 64), Rlo + 1)
		+ __builtin_add_overflow(Rlo[1], ((unsigned __int128) ((__int128) A->hi[1] * 3172079863358853931u) << 64), Rlo + 1)
		+ HIGH((__int128) A->lo[1] * -109723346650584) + HI((unsigned __int128) A->hi[1] * 3172079863358853931u) + ((__int128) A->hi[1] * -109723346650584);
	Rhi[2] = (__int128) __builtin_add_overflow(((__int128) A->lo[3] * 612045544183893618u), ((unsigned __int128) ((__int128) A->lo[3] * -313812113198488) << 64), Rlo + 2)
		+ __builtin_add_overflow(((__int128) A->lo[3] * 612045544183893618u), Rlo[2], Rlo + 2)
		+ __builtin_add_overflow(Rlo[2], ((unsigned __int128) ((__int128) A->lo[3] * -313812113198488) << 64), Rlo + 2)
		+ __builtin_add_overflow(Rlo[2], ((unsigned __int128) ((__int128) A->hi[3] * 612045544183893618u) << 64), Rlo + 2)
		+ HIGH((__int128) A->lo[3] * -313812113198488) + HI((unsigned __int128) A->hi[3] * 612045544183893618u) + ((__int128) A->hi[3] * -313812113198488)
		+ __builtin_add_overflow(((__int128) A->lo[4] * 415127366214307844u), Rlo[2], Rlo + 2)
		+ __builtin_add_overflow(Rlo[2], ((unsigned __int128) ((__int128) A->lo[4] * -885289777392482) << 64), Rlo + 2)
		+ __builtin_add_overflow(Rlo[2], ((unsigned __int128) ((__int128) A->hi[4] * 415127366214307844u) << 64), Rlo + 2)
		+ HIGH((__int128) A->lo[4] * -885289777392482) + HI((unsigned __int128) A->hi[4] * 415127366214307844u) + ((__int128) A->hi[4] * -885289777392482)
		+ __builtin_add_overflow(((__int128) A->lo[5] * 3526680946142954750u), Rlo[2], Rlo + 2)
		+ __builtin_add_overflow(Rlo[2], ((unsigned __int128) ((__int128) A->lo[5] * -789141535705794) << 64), Rlo + 2)
		+ __builtin_add_overflow(Rlo[2], ((unsigned __int128) ((__int128) A->hi[5] * 3526680946142954750u) << 64), Rlo + 2)
		+ HIGH((__int128) A->lo[5] * -789141535705794) + HI((unsigned __int128) A->hi[5] * 3526680946142954750u) + ((__int128) A->hi[5] * -789141535705794)
		+ __builtin_add_overflow(((__int128) A->lo[6] * 11747119917909636504u), Rlo[2], Rlo + 2)
		+ __builtin_add_overflow(Rlo[2], ((unsigned __int128) ((__int128) A->lo[6] * 804290293987654) << 64), Rlo + 2)
		+ __builtin_add_overflow(Rlo[2], ((unsigned __int128) ((__int128) A->hi[6] * 11747119917909636504u) << 64), Rlo + 2)
		+ HIGH((__int128) A->lo[6] * 804290293987654) + HI((unsigned __int128) A->hi[6] * 11747119917909636504u) + ((__int128) A->hi[6] * 804290293987654)
		+ __builtin_add_overflow(((__int128) A->lo[7] * 2186863252145676954u), Rlo[2], Rlo + 2)
		+ __builtin_add_overflow(Rlo[2], ((unsigned __int128) ((__int128) A->lo[7] * -737962507460388) << 64), Rlo + 2)
		+ __builtin_add_overflow(Rlo[2], ((unsigned __int128) ((__int128) A->hi[7] * 2186863252145676954u) << 64), Rlo + 2)
		+ HIGH((__int128) A->lo[7] * -737962507460388) + HI((unsigned __int128) A->hi[7] * 2186863252145676954u) + ((__int128) A->hi[7] * -737962507460388)
		+ __builtin_add_overflow(((__int128) A->lo[8] * 1113829386659060842u), Rlo[2], Rlo + 2)
		+ __builtin_add_overflow(Rlo[2], ((unsigned __int128) ((__int128) A->lo[8] * 271035716806352) << 64), Rlo + 2)
		+ __builtin_add_overflow(Rlo[2], ((unsigned __int128) ((__int128) A->hi[8] * 1113829386659060842u) << 64), Rlo + 2)
		+ HIGH((__int128) A->lo[8] * 271035716806352) + HI((unsigned __int128) A->hi[8] * 1113829386659060842u) + ((__int128) A->hi[8] * 271035716806352)
		+ __builtin_add_overflow(((__int128) A->lo[0] * 9102563644318989933u), Rlo[2], Rlo + 2)
		+ __builtin_add_overflow(Rlo[2], ((unsigned __int128) ((__int128) A->lo[0] * 11526164101087) << 64), Rlo + 2)
		+ __builtin_add_overflow(Rlo[2], ((unsigned __int128) ((__int128) A->hi[0] * 9102563644318989933u) << 64), Rlo + 2)
		+ HIGH((__int128) A->lo[0] * 11526164101087) + HI((unsigned __int128) A->hi[0] * 9102563644318989933u) + ((__int128) A->hi[0] * 11526164101087)
		+ __builtin_add_overflow(((__int128) A->lo[1] * 17636822218148255496u), Rlo[2], Rlo + 2)
		+ __builtin_add_overflow(Rlo[2], ((unsigned __int128) ((__int128) A->lo[1] * -95062332776751) << 64), Rlo + 2)
		+ __builtin_add_overflow(Rlo[2], ((unsigned __int128) ((__int128) A->hi[1] * 17636822218148255496u) << 64), Rlo + 2)
		+ HIGH((__int128) A->lo[1] * -95062332776751) + HI((unsigned __int128) A->hi[1] * 17636822218148255496u) + ((__int128) A->hi[1] * -95062332776751)
		+ __builtin_add_overflow(((__int128) A->lo[2] * 3172079863358853931u), Rlo[2], Rlo + 2)
		+ __builtin_add_overflow(Rlo[2], ((unsigned __int128) ((__int128) A->lo[2] * -109723346650584) << 64), Rlo + 2)
		+ __builtin_add_overflow(Rlo[2], ((unsigned __int128) ((__int128) A->hi[2] * 3172079863358853931u) << 64), Rlo + 2)
		+ HIGH((__int128) A->lo[2] * -109723346650584) + HI((unsigned __int128) A->hi[2] * 3172079863358853931u) + ((__int128) A->hi[2] * -109723346650584);
	Rhi[3] = (__int128) __builtin_add_overflow(((__int128) A->lo[4] * 612045544183893618u), ((unsigned __int128) ((__int128) A->lo[4] * -313812113198488) << 64), Rlo + 3)
		+ __builtin_add_overflow(((__int128) A->lo[4] * 612045544183893618u), Rlo[3], Rlo + 3)
		+ __builtin_add_overflow(Rlo[3], ((unsigned __int128) ((__int128) A->lo[4] * -313812113198488) << 64), Rlo + 3)
		+ __builtin_add_overflow(Rlo[3], ((unsigned __int128) ((__int128) A->hi[4] * 612045544183893618u) << 64), Rlo + 3)
		+ HIGH((__int128) A->lo[4] * -313812113198488) + HI((unsigned __int128) A->hi[4] * 612045544183893618u) + ((__int128) A->hi[4] * -313812113198488)
		+ __builtin_add_overflow(((__int128) A->lo[5] * 415127366214307844u), Rlo[3], Rlo + 3)
		+ __builtin_add_overflow(Rlo[3], ((unsigned __int128) ((__int128) A->lo[5] * -885289777392482) << 64), Rlo + 3)
		+ __builtin_add_overflow(Rlo[3], ((unsigned __int128) ((__int128) A->hi[5] * 415127366214307844u) << 64), Rlo + 3)
		+ HIGH((__int128) A->lo[5] * -885289777392482) + HI((unsigned __int128) A->hi[5] * 415127366214307844u) + ((__int128) A->hi[5] * -885289777392482)
		+ __builtin_add_overflow(((__int128) A->lo[6] * 3526680946142954750u), Rlo[3], Rlo + 3)
		+ __builtin_add_overflow(Rlo[3], ((unsigned __int128) ((__int128) A->lo[6] * -789141535705794) << 64), Rlo + 3)
		+ __builtin_add_overflow(Rlo[3], ((unsigned __int128) ((__int128) A->hi[6] * 3526680946142954750u) << 64), Rlo + 3)
		+ HIGH((__int128) A->lo[6] * -789141535705794) + HI((unsigned __int128) A->hi[6] * 3526680946142954750u) + ((__int128) A->hi[6] * -789141535705794)
		+ __builtin_add_overflow(((__int128) A->lo[7] * 11747119917909636504u), Rlo[3], Rlo + 3)
		+ __builtin_add_overflow(Rlo[3], ((unsigned __int128) ((__int128) A->lo[7] * 804290293987654) << 64), Rlo + 3)
		+ __builtin_add_overflow(Rlo[3], ((unsigned __int128) ((__int128) A->hi[7] * 11747119917909636504u) << 64), Rlo + 3)
		+ HIGH((__int128) A->lo[7] * 804290293987654) + HI((unsigned __int128) A->hi[7] * 11747119917909636504u) + ((__int128) A->hi[7] * 804290293987654)
		+ __builtin_add_overflow(((__int128) A->lo[8] * 2186863252145676954u), Rlo[3], Rlo + 3)
		+ __builtin_add_overflow(Rlo[3], ((unsigned __int128) ((__int128) A->lo[8] * -737962507460388) << 64), Rlo + 3)
		+ __builtin_add_overflow(Rlo[3], ((unsigned __int128) ((__int128) A->hi[8] * 2186863252145676954u) << 64), Rlo + 3)
		+ HIGH((__int128) A->lo[8] * -737962507460388) + HI((unsigned __int128) A->hi[8] * 2186863252145676954u) + ((__int128) A->hi[8] * -737962507460388)
		+ __builtin_add_overflow(((__int128) A->lo[0] * 556914693329530421u), Rlo[3], Rlo + 3)
		+ __builtin_add_overflow(Rlo[3], ((unsigned __int128) ((__int128) A->lo[0] * 135517858403176) << 64), Rlo + 3)
		+ __builtin_add_overflow(Rlo[3], ((unsigned __int128) ((__int128) A->hi[0] * 556914693329530421u) << 64), Rlo + 3)
		+ HIGH((__int128) A->lo[0] * 135517858403176) + HI((unsigned __int128) A->hi[0] * 556914693329530421u) + ((__int128) A->hi[0] * 135517858403176)
		+ __builtin_add_overflow(((__int128) A->lo[1] * 9102563644318989933u), Rlo[3], Rlo + 3)
		+ __builtin_add_overflow(Rlo[3], ((unsigned __int128) ((__int128) A->lo[1] * 11526164101087) << 64), Rlo + 3)
		+ __builtin_add_overflow(Rlo[3], ((unsigned __int128) ((__int128) A->hi[1] * 9102563644318989933u) << 64), Rlo + 3)
		+ HIGH((__int128) A->lo[1] * 11526164101087) + HI((unsigned __int128) A->hi[1] * 9102563644318989933u) + ((__int128) A->hi[1] * 11526164101087)
		+ __builtin_add_overflow(((__int128) A->lo[2] * 17636822218148255496u), Rlo[3], Rlo + 3)
		+ __builtin_add_overflow(Rlo[3], ((unsigned __int128) ((__int128) A->lo[2] * -95062332776751) << 64), Rlo + 3)
		+ __builtin_add_overflow(Rlo[3], ((unsigned __int128) ((__int128) A->hi[2] * 17636822218148255496u) << 64), Rlo + 3)
		+ HIGH((__int128) A->lo[2] * -95062332776751) + HI((unsigned __int128) A->hi[2] * 17636822218148255496u) + ((__int128) A->hi[2] * -95062332776751)
		+ __builtin_add_overflow(((__int128) A->lo[3] * 3172079863358853931u), Rlo[3], Rlo + 3)
		+ __builtin_add_overflow(Rlo[3], ((unsigned __int128) ((__int128) A->lo[3] * -109723346650584) << 64), Rlo + 3)
		+ __builtin_add_overflow(Rlo[3], ((unsigned __int128) ((__int128) A->hi[3] * 3172079863358853931u) << 64), Rlo + 3)
		+ HIGH((__int128) A->lo[3] * -109723346650584) + HI((unsigned __int128) A->hi[3] * 3172079863358853931u) + ((__int128) A->hi[3] * -109723346650584);
	Rhi[4] = (__int128) __builtin_add_overflow(((__int128) A->lo[5] * 612045544183893618u), ((unsigned __int128) ((__int128) A->lo[5] * -313812113198488) << 64), Rlo + 4)
		+ __builtin_add_overflow(((__int128) A->lo[5] * 612045544183893618u), Rlo[4], Rlo + 4)
		+ __builtin_add_overflow(Rlo[4], ((unsigned __int128) ((__int128) A->lo[5] * -313812113198488) << 64), Rlo + 4)
		+ __builtin_add_overflow(Rlo[4], ((unsigned __int128) ((__int128) A->hi[5] * 612045544183893618u) << 64), Rlo + 4)
		+ HIGH((__int128) A->lo[5] * -313812113198488) + HI((unsigned __int128) A->hi[5] * 612045544183893618u) + ((__int128) A->hi[5] * -313812113198488)
		+ __builtin_add_overflow(((__int128) A->lo[6] * 415127366214307844u), Rlo[4], Rlo + 4)
		+ __builtin_add_overflow(Rlo[4], ((unsigned __int128) ((__int128) A->lo[6] * -885289777392482) << 64), Rlo + 4)
		+ __builtin_add_overflow(Rlo[4], ((unsigned __int128) ((__int128) A->hi[6] * 415127366214307844u) << 64), Rlo + 4)
		+ HIGH((__int128) A->lo[6] * -885289777392482) + HI((unsigned __int128) A->hi[6] * 415127366214307844u) + ((__int128) A->hi[6] * -885289777392482)
		+ __builtin_add_overflow(((__int128) A->lo[7] * 3526680946142954750u), Rlo[4], Rlo + 4)
		+ __builtin_add_overflow(Rlo[4], ((unsigned __int128) ((__int128) A->lo[7] * -789141535705794) << 64), Rlo + 4)
		+ __builtin_add_overflow(Rlo[4], ((unsigned __int128) ((__int128) A->hi[7] * 3526680946142954750u) << 64), Rlo + 4)
		+ HIGH((__int128) A->lo[7] * -789141535705794) + HI((unsigned __int128) A->hi[7] * 3526680946142954750u) + ((__int128) A->hi[7] * -789141535705794)
		+ __builtin_add_overflow(((__int128) A->lo[8] * 11747119917909636504u), Rlo[4], Rlo + 4)
		+ __builtin_add_overflow(Rlo[4], ((unsigned __int128) ((__int128) A->lo[8] * 804290293987654) << 64), Rlo + 4)
		+ __builtin_add_overflow(Rlo[4], ((unsigned __int128) ((__int128) A->hi[8] * 11747119917909636504u) << 64), Rlo + 4)
		+ HIGH((__int128) A->lo[8] * 804290293987654) + HI((unsigned __int128) A->hi[8] * 11747119917909636504u) + ((__int128) A->hi[8] * 804290293987654)
		+ __builtin_add_overflow(((__int128) A->lo[0] * 1093431626072838477u), Rlo[4], Rlo + 4)
		+ __builtin_add_overflow(Rlo[4], ((unsigned __int128) ((__int128) A->lo[0] * -368981253730194) << 64), Rlo + 4)
		+ __builtin_add_overflow(Rlo[4], ((unsigned __int128) ((__int128) A->hi[0] * 1093431626072838477u) << 64), Rlo + 4)
		+ HIGH((__int128) A->lo[0] * -368981253730194) + HI((unsigned __int128) A->hi[0] * 1093431626072838477u) + ((__int128) A->hi[0] * -368981253730194)
		+ __builtin_add_overflow(((__int128) A->lo[1] * 556914693329530421u), Rlo[4], Rlo + 4)
		+ __builtin_add_overflow(Rlo[4], ((unsigned __int128) ((__int128) A->lo[1] * 135517858403176) << 64), Rlo + 4)
		+ __builtin_add_overflow(Rlo[4], ((unsigned __int128) ((__int128) A->hi[1] * 556914693329530421u) << 64), Rlo + 4)
		+ HIGH((__int128) A->lo[1] * 135517858403176) + HI((unsigned __int128) A->hi[1] * 556914693329530421u) + ((__int128) A->hi[1] * 135517858403176)
		+ __builtin_add_overflow(((__int128) A->lo[2] * 9102563644318989933u), Rlo[4], Rlo + 4)
		+ __builtin_add_overflow(Rlo[4], ((unsigned __int128) ((__int128) A->lo[2] * 11526164101087) << 64), Rlo + 4)
		+ __builtin_add_overflow(Rlo[4], ((unsigned __int128) ((__int128) A->hi[2] * 9102563644318989933u) << 64), Rlo + 4)
		+ HIGH((__int128) A->lo[2] * 11526164101087) + HI((unsigned __int128) A->hi[2] * 9102563644318989933u) + ((__int128) A->hi[2] * 11526164101087)
		+ __builtin_add_overflow(((__int128) A->lo[3] * 17636822218148255496u), Rlo[4], Rlo + 4)
		+ __builtin_add_overflow(Rlo[4], ((unsigned __int128) ((__int128) A->lo[3] * -95062332776751) << 64), Rlo + 4)
		+ __builtin_add_overflow(Rlo[4], ((unsigned __int128) ((__int128) A->hi[3] * 17636822218148255496u) << 64), Rlo + 4)
		+ HIGH((__int128) A->lo[3] * -95062332776751) + HI((unsigned __int128) A->hi[3] * 17636822218148255496u) + ((__int128) A->hi[3] * -95062332776751)
		+ __builtin_add_overflow(((__int128) A->lo[4] * 3172079863358853931u), Rlo[4], Rlo + 4)
		+ __builtin_add_overflow(Rlo[4], ((unsigned __int128) ((__int128) A->lo[4] * -109723346650584) << 64), Rlo + 4)
		+ __builtin_add_overflow(Rlo[4], ((unsigned __int128) ((__int128) A->hi[4] * 3172079863358853931u) << 64), Rlo + 4)
		+ HIGH((__int128) A->lo[4] * -109723346650584) + HI((unsigned __int128) A->hi[4] * 3172079863358853931u) + ((__int128) A->hi[4] * -109723346650584);
	Rhi[5] = (__int128) __builtin_add_overflow(((__int128) A->lo[6] * 612045544183893618u), ((unsigned __int128) ((__int128) A->lo[6] * -313812113198488) << 64), Rlo + 5)
		+ __builtin_add_overflow(((__int128) A->lo[6] * 612045544183893618u), Rlo[5], Rlo + 5)
		+ __builtin_add_overflow(Rlo[5], ((unsigned __int128) ((__int128) A->lo[6] * -313812113198488) << 64), Rlo + 5)
		+ __builtin_add_overflow(Rlo[5], ((unsigned __int128) ((__int128) A->hi[6] * 612045544183893618u) << 64), Rlo + 5)
		+ HIGH((__int128) A->lo[6] * -313812113198488) + HI((unsigned __int128) A->hi[6] * 612045544183893618u) + ((__int128) A->hi[6] * -313812113198488)
		+ __builtin_add_overflow(((__int128) A->lo[7] * 415127366214307844u), Rlo[5], Rlo + 5)
		+ __builtin_add_overflow(Rlo[5], ((unsigned __int128) ((__int128) A->lo[7] * -885289777392482) << 64), Rlo + 5)
		+ __builtin_add_overflow(Rlo[5], ((unsigned __int128) ((__int128) A->hi[7] * 415127366214307844u) << 64), Rlo + 5)
		+ HIGH((__int128) A->lo[7] * -885289777392482) + HI((unsigned __int128) A->hi[7] * 415127366214307844u) + ((__int128) A->hi[7] * -885289777392482)
		+ __builtin_add_overflow(((__int128) A->lo[8] * 3526680946142954750u), Rlo[5], Rlo + 5)
		+ __builtin_add_overflow(Rlo[5], ((unsigned __int128) ((__int128) A->lo[8] * -789141535705794) << 64), Rlo + 5)
		+ __builtin_add_overflow(Rlo[5], ((unsigned __int128) ((__int128) A->hi[8] * 3526680946142954750u) << 64), Rlo + 5)
		+ HIGH((__int128) A->lo[8] * -789141535705794) + HI((unsigned __int128) A->hi[8] * 3526680946142954750u) + ((__int128) A->hi[8] * -789141535705794)
		+ __builtin_add_overflow(((__int128) A->lo[0] * 5873559958954818252u), Rlo[5], Rlo + 5)
		+ __builtin_add_overflow(Rlo[5], ((unsigned __int128) ((__int128) A->lo[0] * 402145146993827) << 64), Rlo + 5)
		+ __builtin_add_overflow(Rlo[5], ((unsigned __int128) ((__int128) A->hi[0] * 5873559958954818252u) << 64), Rlo + 5)
		+ HIGH((__int128) A->lo[0] * 402145146993827) + HI((unsigned __int128) A->hi[0] * 5873559958954818252u) + ((__int128) A->hi[0] * 402145146993827)
		+ __builtin_add_overflow(((__int128) A->lo[1] * 1093431626072838477u), Rlo[5], Rlo + 5)
		+ __builtin_add_overflow(Rlo[5], ((unsigned __int128) ((__int128) A->lo[1] * -368981253730194) << 64), Rlo + 5)
		+ __builtin_add_overflow(Rlo[5], ((unsigned __int128) ((__int128) A->hi[1] * 1093431626072838477u) << 64), Rlo + 5)
		+ HIGH((__int128) A->lo[1] * -368981253730194) + HI((unsigned __int128) A->hi[1] * 1093431626072838477u) + ((__int128) A->hi[1] * -368981253730194)
		+ __builtin_add_overflow(((__int128) A->lo[2] * 556914693329530421u), Rlo[5], Rlo + 5)
		+ __builtin_add_overflow(Rlo[5], ((unsigned __int128) ((__int128) A->lo[2] * 135517858403176) << 64), Rlo + 5)
		+ __builtin_add_overflow(Rlo[5], ((unsigned __int128) ((__int128) A->hi[2] * 556914693329530421u) << 64), Rlo + 5)
		+ HIGH((__int128) A->lo[2] * 135517858403176) + HI((unsigned __int128) A->hi[2] * 556914693329530421u) + ((__int128) A->hi[2] * 135517858403176)
		+ __builtin_add_overflow(((__int128) A->lo[3] * 9102563644318989933u), Rlo[5], Rlo + 5)
		+ __builtin_add_overflow(Rlo[5], ((unsigned __int128) ((__int128) A->lo[3] * 11526164101087) << 64), Rlo + 5)
		+ __builtin_add_overflow(Rlo[5], ((unsigned __int128) ((__int128) A->hi[3] * 9102563644318989933u) << 64), Rlo + 5)
		+ HIGH((__int128) A->lo[3] * 11526164101087) + HI((unsigned __int128) A->hi[3] * 9102563644318989933u) + ((__int128) A->hi[3] * 11526164101087)
		+ __builtin_add_overflow(((__int128) A->lo[4] * 17636822218148255496u), Rlo[5], Rlo + 5)
		+ __builtin_add_overflow(Rlo[5], ((unsigned __int128) ((__int128) A->lo[4] * -95062332776751) << 64), Rlo + 5)
		+ __builtin_add_overflow(Rlo[5], ((unsigned __int128) ((__int128) A->hi[4] * 17636822218148255496u) << 64), Rlo + 5)
		+ HIGH((__int128) A->lo[4] * -95062332776751) + HI((unsigned __int128) A->hi[4] * 17636822218148255496u) + ((__int128) A->hi[4] * -95062332776751)
		+ __builtin_add_overflow(((__int128) A->lo[5] * 3172079863358853931u), Rlo[5], Rlo + 5)
		+ __builtin_add_overflow(Rlo[5], ((unsigned __int128) ((__int128) A->lo[5] * -109723346650584) << 64), Rlo + 5)
		+ __builtin_add_overflow(Rlo[5], ((unsigned __int128) ((__int128) A->hi[5] * 3172079863358853931u) << 64), Rlo + 5)
		+ HIGH((__int128) A->lo[5] * -109723346650584) + HI((unsigned __int128) A->hi[5] * 3172079863358853931u) + ((__int128) A->hi[5] * -109723346650584);
	Rhi[6] = (__int128) __builtin_add_overflow(((__int128) A->lo[7] * 612045544183893618u), ((unsigned __int128) ((__int128) A->lo[7] * -313812113198488) << 64), Rlo + 6)
		+ __builtin_add_overflow(((__int128) A->lo[7] * 612045544183893618u), Rlo[6], Rlo + 6)
		+ __builtin_add_overflow(Rlo[6], ((unsigned __int128) ((__int128) A->lo[7] * -313812113198488) << 64), Rlo + 6)
		+ __builtin_add_overflow(Rlo[6], ((unsigned __int128) ((__int128) A->hi[7] * 612045544183893618u) << 64), Rlo + 6)
		+ HIGH((__int128) A->lo[7] * -313812113198488) + HI((unsigned __int128) A->hi[7] * 612045544183893618u) + ((__int128) A->hi[7] * -313812113198488)
		+ __builtin_add_overflow(((__int128) A->lo[8] * 415127366214307844u), Rlo[6], Rlo + 6)
		+ __builtin_add_overflow(Rlo[6], ((unsigned __int128) ((__int128) A->lo[8] * -885289777392482) << 64), Rlo + 6)
		+ __builtin_add_overflow(Rlo[6], ((unsigned __int128) ((__int128) A->hi[8] * 415127366214307844u) << 64), Rlo + 6)
		+ HIGH((__int128) A->lo[8] * -885289777392482) + HI((unsigned __int128) A->hi[8] * 415127366214307844u) + ((__int128) A->hi[8] * -885289777392482)
		+ __builtin_add_overflow(((__int128) A->lo[0] * 1763340473071477375u), Rlo[6], Rlo + 6)
		+ __builtin_add_overflow(Rlo[6], ((unsigned __int128) ((__int128) A->lo[0] * -394570767852897) << 64), Rlo + 6)
		+ __builtin_add_overflow(Rlo[6], ((unsigned __int128) ((__int128) A->hi[0] * 1763340473071477375u) << 64), Rlo + 6)
		+ HIGH((__int128) A->lo[0] * -394570767852897) + HI((unsigned __int128) A->hi[0] * 1763340473071477375u) + ((__int128) A->hi[0] * -394570767852897)
		+ __builtin_add_overflow(((__int128) A->lo[1] * 5873559958954818252u), Rlo[6], Rlo + 6)
		+ __builtin_add_overflow(Rlo[6], ((unsigned __int128) ((__int128) A->lo[1] * 402145146993827) << 64), Rlo + 6)
		+ __builtin_add_overflow(Rlo[6], ((unsigned __int128) ((__int128) A->hi[1] * 5873559958954818252u) << 64), Rlo + 6)
		+ HIGH((__int128) A->lo[1] * 402145146993827) + HI((unsigned __int128) A->hi[1] * 5873559958954818252u) + ((__int128) A->hi[1] * 402145146993827)
		+ __builtin_add_overflow(((__int128) A->lo[2] * 1093431626072838477u), Rlo[6], Rlo + 6)
		+ __builtin_add_overflow(Rlo[6], ((unsigned __int128) ((__int128) A->lo[2] * -368981253730194) << 64), Rlo + 6)
		+ __builtin_add_overflow(Rlo[6], ((unsigned __int128) ((__int128) A->hi[2] * 1093431626072838477u) << 64), Rlo + 6)
		+ HIGH((__int128) A->lo[2] * -368981253730194) + HI((unsigned __int128) A->hi[2] * 1093431626072838477u) + ((__int128) A->hi[2] * -368981253730194)
		+ __builtin_add_overflow(((__int128) A->lo[3] * 556914693329530421u), Rlo[6], Rlo + 6)
		+ __builtin_add_overflow(Rlo[6], ((unsigned __int128) ((__int128) A->lo[3] * 135517858403176) << 64), Rlo + 6)
		+ __builtin_add_overflow(Rlo[6], ((unsigned __int128) ((__int128) A->hi[3] * 556914693329530421u) << 64), Rlo + 6)
		+ HIGH((__int128) A->lo[3] * 135517858403176) + HI((unsigned __int128) A->hi[3] * 556914693329530421u) + ((__int128) A->hi[3] * 135517858403176)
		+ __builtin_add_overflow(((__int128) A->lo[4] * 9102563644318989933u), Rlo[6], Rlo + 6)
		+ __builtin_add_overflow(Rlo[6], ((unsigned __int128) ((__int128) A->lo[4] * 11526164101087) << 64), Rlo + 6)
		+ __builtin_add_overflow(Rlo[6], ((unsigned __int128) ((__int128) A->hi[4] * 9102563644318989933u) << 64), Rlo + 6)
		+ HIGH((__int128) A->lo[4] * 11526164101087) + HI((unsigned __int128) A->hi[4] * 9102563644318989933u) + ((__int128) A->hi[4] * 11526164101087)
		+ __builtin_add_overflow(((__int128) A->lo[5] * 17636822218148255496u), Rlo[6], Rlo + 6)
		+ __builtin_add_overflow(Rlo[6], ((unsigned __int128) ((__int128) A->lo[5] * -95062332776751) << 64), Rlo + 6)
		+ __builtin_add_overflow(Rlo[6], ((unsigned __int128) ((__int128) A->hi[5] * 17636822218148255496u) << 64), Rlo + 6)
		+ HIGH((__int128) A->lo[5] * -95062332776751) + HI((unsigned __int128) A->hi[5] * 17636822218148255496u) + ((__int128) A->hi[5] * -95062332776751)
		+ __builtin_add_overflow(((__int128) A->lo[6] * 3172079863358853931u), Rlo[6], Rlo + 6)
		+ __builtin_add_overflow(Rlo[6], ((unsigned __int128) ((__int128) A->lo[6] * -109723346650584) << 64), Rlo + 6)
		+ __builtin_add_overflow(Rlo[6], ((unsigned __int128) ((__int128) A->hi[6] * 3172079863358853931u) << 64), Rlo + 6)
		+ HIGH((__int128) A->lo[6] * -109723346650584) + HI((unsigned __int128) A->hi[6] * 3172079863358853931u) + ((__int128) A->hi[6] * -109723346650584);
	Rhi[7] = (__int128) __builtin_add_overflow(((__int128) A->lo[8] * 612045544183893618u), ((unsigned __int128) ((__int128) A->lo[8] * -313812113198488) << 64), Rlo + 7)
		+ __builtin_add_overflow(((__int128) A->lo[8] * 612045544183893618u), Rlo[7], Rlo + 7)
		+ __builtin_add_overflow(Rlo[7], ((unsigned __int128) ((__int128) A->lo[8] * -313812113198488) << 64), Rlo + 7)
		+ __builtin_add_overflow(Rlo[7], ((unsigned __int128) ((__int128) A->hi[8] * 612045544183893618u) << 64), Rlo + 7)
		+ HIGH((__int128) A->lo[8] * -313812113198488) + HI((unsigned __int128) A->hi[8] * 612045544183893618u) + ((__int128) A->hi[8] * -313812113198488)
		+ __builtin_add_overflow(((__int128) A->lo[0] * 207563683107153922u), Rlo[7], Rlo + 7)
		+ __builtin_add_overflow(Rlo[7], ((unsigned __int128) ((__int128) A->lo[0] * -442644888696241) << 64), Rlo + 7)
		+ __builtin_add_overflow(Rlo[7], ((unsigned __int128) ((__int128) A->hi[0] * 207563683107153922u) << 64), Rlo + 7)
		+ HIGH((__int128) A->lo[0] * -442644888696241) + HI((unsigned __int128) A->hi[0] * 207563683107153922u) + ((__int128) A->hi[0] * -442644888696241)
		+ __builtin_add_overflow(((__int128) A->lo[1] * 1763340473071477375u), Rlo[7], Rlo + 7)
		+ __builtin_add_overflow(Rlo[7], ((unsigned __int128) ((__int128) A->lo[1] * -394570767852897) << 64), Rlo + 7)
		+ __builtin_add_overflow(Rlo[7], ((unsigned __int128) ((__int128) A->hi[1] * 1763340473071477375u) << 64), Rlo + 7)
		+ HIGH((__int128) A->lo[1] * -394570767852897) + HI((unsigned __int128) A->hi[1] * 1763340473071477375u) + ((__int128) A->hi[1] * -394570767852897)
		+ __builtin_add_overflow(((__int128) A->lo[2] * 5873559958954818252u), Rlo[7], Rlo + 7)
		+ __builtin_add_overflow(Rlo[7], ((unsigned __int128) ((__int128) A->lo[2] * 402145146993827) << 64), Rlo + 7)
		+ __builtin_add_overflow(Rlo[7], ((unsigned __int128) ((__int128) A->hi[2] * 5873559958954818252u) << 64), Rlo + 7)
		+ HIGH((__int128) A->lo[2] * 402145146993827) + HI((unsigned __int128) A->hi[2] * 5873559958954818252u) + ((__int128) A->hi[2] * 402145146993827)
		+ __builtin_add_overflow(((__int128) A->lo[3] * 1093431626072838477u), Rlo[7], Rlo + 7)
		+ __builtin_add_overflow(Rlo[7], ((unsigned __int128) ((__int128) A->lo[3] * -368981253730194) << 64), Rlo + 7)
		+ __builtin_add_overflow(Rlo[7], ((unsigned __int128) ((__int128) A->hi[3] * 1093431626072838477u) << 64), Rlo + 7)
		+ HIGH((__int128) A->lo[3] * -368981253730194) + HI((unsigned __int128) A->hi[3] * 1093431626072838477u) + ((__int128) A->hi[3] * -368981253730194)
		+ __builtin_add_overflow(((__int128) A->lo[4] * 556914693329530421u), Rlo[7], Rlo + 7)
		+ __builtin_add_overflow(Rlo[7], ((unsigned __int128) ((__int128) A->lo[4] * 135517858403176) << 64), Rlo + 7)
		+ __builtin_add_overflow(Rlo[7], ((unsigned __int128) ((__int128) A->hi[4] * 556914693329530421u) << 64), Rlo + 7)
		+ HIGH((__int128) A->lo[4] * 135517858403176) + HI((unsigned __int128) A->hi[4] * 556914693329530421u) + ((__int128) A->hi[4] * 135517858403176)
		+ __builtin_add_overflow(((__int128) A->lo[5] * 9102563644318989933u), Rlo[7], Rlo + 7)
		+ __builtin_add_overflow(Rlo[7], ((unsigned __int128) ((__int128) A->lo[5] * 11526164101087) << 64), Rlo + 7)
		+ __builtin_add_overflow(Rlo[7], ((unsigned __int128) ((__int128) A->hi[5] * 9102563644318989933u) << 64), Rlo + 7)
		+ HIGH((__int128) A->lo[5] * 11526164101087) + HI((unsigned __int128) A->hi[5] * 9102563644318989933u) + ((__int128) A->hi[5] * 11526164101087)
		+ __builtin_add_overflow(((__int128) A->lo[6] * 17636822218148255496u), Rlo[7], Rlo + 7)
		+ __builtin_add_overflow(Rlo[7], ((unsigned __int128) ((__int128) A->lo[6] * -95062332776751) << 64), Rlo + 7)
		+ __builtin_add_overflow(Rlo[7], ((unsigned __int128) ((__int128) A->hi[6] * 17636822218148255496u) << 64), Rlo + 7)
		+ HIGH((__int128) A->lo[6] * -95062332776751) + HI((unsigned __int128) A->hi[6] * 17636822218148255496u) + ((__int128) A->hi[6] * -95062332776751)
		+ __builtin_add_overflow(((__int128) A->lo[7] * 3172079863358853931u), Rlo[7], Rlo + 7)
		+ __builtin_add_overflow(Rlo[7], ((unsigned __int128) ((__int128) A->lo[7] * -109723346650584) << 64), Rlo + 7)
		+ __builtin_add_overflow(Rlo[7], ((unsigned __int128) ((__int128) A->hi[7] * 3172079863358853931u) << 64), Rlo + 7)
		+ HIGH((__int128) A->lo[7] * -109723346650584) + HI((unsigned __int128) A->hi[7] * 3172079863358853931u) + ((__int128) A->hi[7] * -109723346650584);
	Rhi[8] = (__int128) __builtin_add_overflow(((__int128) A->lo[9] * 306022772091946809u), ((unsigned __int128) ((__int128) A->lo[9] * -156906056599244) << 64), Rlo + 8)
		+ __builtin_add_overflow(Rlo[8], ((unsigned __int128) ((__int128) A->hi[0] * 306022772091946809u) << 64), Rlo + 8)
		+ HIGH((__int128) A->lo[0] * -156906056599244) + HI((unsigned __int128) A->hi[0] * 306022772091946809u) + ((__int128) A->hi[0] * -156906056599244)
		+ __builtin_add_overflow(((__int128) A->lo[1] * 207563683107153922u), Rlo[8], Rlo + 8)
		+ __builtin_add_overflow(Rlo[8], ((unsigned __int128) ((__int128) A->lo[1] * -442644888696241) << 64), Rlo + 8)
		+ __builtin_add_overflow(Rlo[8], ((unsigned __int128) ((__int128) A->hi[1] * 207563683107153922u) << 64), Rlo + 8)
		+ HIGH((__int128) A->lo[1] * -442644888696241) + HI((unsigned __int128) A->hi[1] * 207563683107153922u) + ((__int128) A->hi[1] * -442644888696241)
		+ __builtin_add_overflow(((__int128) A->lo[2] * 1763340473071477375u), Rlo[8], Rlo + 8)
		+ __builtin_add_overflow(Rlo[8], ((unsigned __int128) ((__int128) A->lo[2] * -394570767852897) << 64), Rlo + 8)
		+ __builtin_add_overflow(Rlo[8], ((unsigned __int128) ((__int128) A->hi[2] * 1763340473071477375u) << 64), Rlo + 8)
		+ HIGH((__int128) A->lo[2] * -394570767852897) + HI((unsigned __int128) A->hi[2] * 1763340473071477375u) + ((__int128) A->hi[2] * -394570767852897)
		+ __builtin_add_overflow(((__int128) A->lo[3] * 5873559958954818252u), Rlo[8], Rlo + 8)
		+ __builtin_add_overflow(Rlo[8], ((unsigned __int128) ((__int128) A->lo[3] * 402145146993827) << 64), Rlo + 8)
		+ __builtin_add_overflow(Rlo[8], ((unsigned __int128) ((__int128) A->hi[3] * 5873559958954818252u) << 64), Rlo + 8)
		+ HIGH((__int128) A->lo[3] * 402145146993827) + HI((unsigned __int128) A->hi[3] * 5873559958954818252u) + ((__int128) A->hi[3] * 402145146993827)
		+ __builtin_add_overflow(((__int128) A->lo[4] * 1093431626072838477u), Rlo[8], Rlo + 8)
		+ __builtin_add_overflow(Rlo[8], ((unsigned __int128) ((__int128) A->lo[4] * -368981253730194) << 64), Rlo + 8)
		+ __builtin_add_overflow(Rlo[8], ((unsigned __int128) ((__int128) A->hi[4] * 1093431626072838477u) << 64), Rlo + 8)
		+ HIGH((__int128) A->lo[4] * -368981253730194) + HI((unsigned __int128) A->hi[4] * 1093431626072838477u) + ((__int128) A->hi[4] * -368981253730194)
		+ __builtin_add_overflow(((__int128) A->lo[5] * 556914693329530421u), Rlo[8], Rlo + 8)
		+ __builtin_add_overflow(Rlo[8], ((unsigned __int128) ((__int128) A->lo[5] * 135517858403176) << 64), Rlo + 8)
		+ __builtin_add_overflow(Rlo[8], ((unsigned __int128) ((__int128) A->hi[5] * 556914693329530421u) << 64), Rlo + 8)
		+ HIGH((__int128) A->lo[5] * 135517858403176) + HI((unsigned __int128) A->hi[5] * 556914693329530421u) + ((__int128) A->hi[5] * 135517858403176)
		+ __builtin_add_overflow(((__int128) A->lo[6] * 9102563644318989933u), Rlo[8], Rlo + 8)
		+ __builtin_add_overflow(Rlo[8], ((unsigned __int128) ((__int128) A->lo[6] * 11526164101087) << 64), Rlo + 8)
		+ __builtin_add_overflow(Rlo[8], ((unsigned __int128) ((__int128) A->hi[6] * 9102563644318989933u) << 64), Rlo + 8)
		+ HIGH((__int128) A->lo[6] * 11526164101087) + HI((unsigned __int128) A->hi[6] * 9102563644318989933u) + ((__int128) A->hi[6] * 11526164101087)
		+ __builtin_add_overflow(((__int128) A->lo[7] * 17636822218148255496u), Rlo[8], Rlo + 8)
		+ __builtin_add_overflow(Rlo[8], ((unsigned __int128) ((__int128) A->lo[7] * -95062332776751) << 64), Rlo + 8)
		+ __builtin_add_overflow(Rlo[8], ((unsigned __int128) ((__int128) A->hi[7] * 17636822218148255496u) << 64), Rlo + 8)
		+ HIGH((__int128) A->lo[7] * -95062332776751) + HI((unsigned __int128) A->hi[7] * 17636822218148255496u) + ((__int128) A->hi[7] * -95062332776751)
		+ __builtin_add_overflow(((__int128) A->lo[8] * 3172079863358853931u), Rlo[8], Rlo + 8)
		+ __builtin_add_overflow(Rlo[8], ((unsigned __int128) ((__int128) A->lo[8] * -109723346650584) << 64), Rlo + 8)
		+ __builtin_add_overflow(Rlo[8], ((unsigned __int128) ((__int128) A->hi[8] * 3172079863358853931u) << 64), Rlo + 8)
		+ HIGH((__int128) A->lo[8] * -109723346650584) + HI((unsigned __int128) A->hi[8] * 3172079863358853931u) + ((__int128) A->hi[8] * -109723346650584);
}


static inline void mns128_mod_mult_ext_red_pre(__int128* restrict Rhi,
	unsigned __int128* restrict Rlo, const restrict poly128 A,
	const restrict poly128 B)
{
	unsigned __int128 A0B0, tmplo;
	__int128 A1B1, A1B0, A0B1, aux2, aux3;

	A1B1 = (__int128) A->hi[1] * B->hi[8] * LAMBDA;
	A1B0 = (__int128) A->hi[1] * B->lo[8] * LAMBDA;
	A0B1 = (__int128) A->lo[1] * B->hi[8] * LAMBDA;
	A0B0 = (__int128) A->lo[1] * B->lo[8] * LAMBDA;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[0] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[0], tmplo, Rlo + 0);

	A1B1 = (__int128) A->hi[2] * B->hi[7] * LAMBDA;
	A1B0 = (__int128) A->hi[2] * B->lo[7] * LAMBDA;
	A0B1 = (__int128) A->lo[2] * B->hi[7] * LAMBDA;
	A0B0 = (__int128) A->lo[2] * B->lo[7] * LAMBDA;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[0] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[0], tmplo, Rlo + 0);

	A1B1 = (__int128) A->hi[3] * B->hi[6] * LAMBDA;
	A1B0 = (__int128) A->hi[3] * B->lo[6] * LAMBDA;
	A0B1 = (__int128) A->lo[3] * B->hi[6] * LAMBDA;
	A0B0 = (__int128) A->lo[3] * B->lo[6] * LAMBDA;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[0] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[0], tmplo, Rlo + 0);

	A1B1 = (__int128) A->hi[4] * B->hi[5] * LAMBDA;
	A1B0 = (__int128) A->hi[4] * B->lo[5] * LAMBDA;
	A0B1 = (__int128) A->lo[4] * B->hi[5] * LAMBDA;
	A0B0 = (__int128) A->lo[4] * B->lo[5] * LAMBDA;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[0] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[0], tmplo, Rlo + 0);

	A1B1 = (__int128) A->hi[5] * B->hi[4] * LAMBDA;
	A1B0 = (__int128) A->hi[5] * B->lo[4] * LAMBDA;
	A0B1 = (__int128) A->lo[5] * B->hi[4] * LAMBDA;
	A0B0 = (__int128) A->lo[5] * B->lo[4] * LAMBDA;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[0] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[0], tmplo, Rlo + 0);

	A1B1 = (__int128) A->hi[6] * B->hi[3] * LAMBDA;
	A1B0 = (__int128) A->hi[6] * B->lo[3] * LAMBDA;
	A0B1 = (__int128) A->lo[6] * B->hi[3] * LAMBDA;
	A0B0 = (__int128) A->lo[6] * B->lo[3] * LAMBDA;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[0] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[0], tmplo, Rlo + 0);

	A1B1 = (__int128) A->hi[7] * B->hi[2] * LAMBDA;
	A1B0 = (__int128) A->hi[7] * B->lo[2] * LAMBDA;
	A0B1 = (__int128) A->lo[7] * B->hi[2] * LAMBDA;
	A0B0 = (__int128) A->lo[7] * B->lo[2] * LAMBDA;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[0] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[0], tmplo, Rlo + 0);

	A1B1 = (__int128) A->hi[8] * B->hi[1] * LAMBDA;
	A1B0 = (__int128) A->hi[8] * B->lo[1] * LAMBDA;
	A0B1 = (__int128) A->lo[8] * B->hi[1] * LAMBDA;
	A0B0 = (__int128) A->lo[8] * B->lo[1] * LAMBDA;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[0] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[0], tmplo, Rlo + 0);

	A1B1 = (__int128) A->hi[0] * B->hi[0];
	A1B0 = (__int128) A->hi[0] * B->lo[0];
	A0B1 = (__int128) A->lo[0] * B->hi[0];
	A0B0 = (__int128) A->lo[0] * B->lo[0];
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[0] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[0], tmplo, Rlo + 0);

	A1B1 = (__int128) A->hi[2] * B->hi[8] * LAMBDA;
	A1B0 = (__int128) A->hi[2] * B->lo[8] * LAMBDA;
	A0B1 = (__int128) A->lo[2] * B->hi[8] * LAMBDA;
	A0B0 = (__int128) A->lo[2] * B->lo[8] * LAMBDA;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[1] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[1], tmplo, Rlo + 1);

	A1B1 = (__int128) A->hi[3] * B->hi[7] * LAMBDA;
	A1B0 = (__int128) A->hi[3] * B->lo[7] * LAMBDA;
	A0B1 = (__int128) A->lo[3] * B->hi[7] * LAMBDA;
	A0B0 = (__int128) A->lo[3] * B->lo[7] * LAMBDA;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[1] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[1], tmplo, Rlo + 1);

	A1B1 = (__int128) A->hi[4] * B->hi[6] * LAMBDA;
	A1B0 = (__int128) A->hi[4] * B->lo[6] * LAMBDA;
	A0B1 = (__int128) A->lo[4] * B->hi[6] * LAMBDA;
	A0B0 = (__int128) A->lo[4] * B->lo[6] * LAMBDA;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[1] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[1], tmplo, Rlo + 1);

	A1B1 = (__int128) A->hi[5] * B->hi[5] * LAMBDA;
	A1B0 = (__int128) A->hi[5] * B->lo[5] * LAMBDA;
	A0B1 = (__int128) A->lo[5] * B->hi[5] * LAMBDA;
	A0B0 = (__int128) A->lo[5] * B->lo[5] * LAMBDA;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[1] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[1], tmplo, Rlo + 1);

	A1B1 = (__int128) A->hi[6] * B->hi[4] * LAMBDA;
	A1B0 = (__int128) A->hi[6] * B->lo[4] * LAMBDA;
	A0B1 = (__int128) A->lo[6] * B->hi[4] * LAMBDA;
	A0B0 = (__int128) A->lo[6] * B->lo[4] * LAMBDA;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[1] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[1], tmplo, Rlo + 1);

	A1B1 = (__int128) A->hi[7] * B->hi[3] * LAMBDA;
	A1B0 = (__int128) A->hi[7] * B->lo[3] * LAMBDA;
	A0B1 = (__int128) A->lo[7] * B->hi[3] * LAMBDA;
	A0B0 = (__int128) A->lo[7] * B->lo[3] * LAMBDA;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[1] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[1], tmplo, Rlo + 1);

	A1B1 = (__int128) A->hi[8] * B->hi[2] * LAMBDA;
	A1B0 = (__int128) A->hi[8] * B->lo[2] * LAMBDA;
	A0B1 = (__int128) A->lo[8] * B->hi[2] * LAMBDA;
	A0B0 = (__int128) A->lo[8] * B->lo[2] * LAMBDA;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[1] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[1], tmplo, Rlo + 1);

	A1B1 = (__int128) A->hi[0] * B->hi[1];
	A1B0 = (__int128) A->hi[0] * B->lo[1];
	A0B1 = (__int128) A->lo[0] * B->hi[1];
	A0B0 = (__int128) A->lo[0] * B->lo[1];
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[1] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[1], tmplo, Rlo + 1);

	A1B1 = (__int128) A->hi[1] * B->hi[0];
	A1B0 = (__int128) A->hi[1] * B->lo[0];
	A0B1 = (__int128) A->lo[1] * B->hi[0];
	A0B0 = (__int128) A->lo[1] * B->lo[0];
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[1] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[1], tmplo, Rlo + 1);

	A1B1 = (__int128) A->hi[3] * B->hi[8] * LAMBDA;
	A1B0 = (__int128) A->hi[3] * B->lo[8] * LAMBDA;
	A0B1 = (__int128) A->lo[3] * B->hi[8] * LAMBDA;
	A0B0 = (__int128) A->lo[3] * B->lo[8] * LAMBDA;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[2] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[2], tmplo, Rlo + 2);

	A1B1 = (__int128) A->hi[4] * B->hi[7] * LAMBDA;
	A1B0 = (__int128) A->hi[4] * B->lo[7] * LAMBDA;
	A0B1 = (__int128) A->lo[4] * B->hi[7] * LAMBDA;
	A0B0 = (__int128) A->lo[4] * B->lo[7] * LAMBDA;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[2] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[2], tmplo, Rlo + 2);

	A1B1 = (__int128) A->hi[5] * B->hi[6] * LAMBDA;
	A1B0 = (__int128) A->hi[5] * B->lo[6] * LAMBDA;
	A0B1 = (__int128) A->lo[5] * B->hi[6] * LAMBDA;
	A0B0 = (__int128) A->lo[5] * B->lo[6] * LAMBDA;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[2] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[2], tmplo, Rlo + 2);

	A1B1 = (__int128) A->hi[6] * B->hi[5] * LAMBDA;
	A1B0 = (__int128) A->hi[6] * B->lo[5] * LAMBDA;
	A0B1 = (__int128) A->lo[6] * B->hi[5] * LAMBDA;
	A0B0 = (__int128) A->lo[6] * B->lo[5] * LAMBDA;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[2] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[2], tmplo, Rlo + 2);

	A1B1 = (__int128) A->hi[7] * B->hi[4] * LAMBDA;
	A1B0 = (__int128) A->hi[7] * B->lo[4] * LAMBDA;
	A0B1 = (__int128) A->lo[7] * B->hi[4] * LAMBDA;
	A0B0 = (__int128) A->lo[7] * B->lo[4] * LAMBDA;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[2] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[2], tmplo, Rlo + 2);

	A1B1 = (__int128) A->hi[8] * B->hi[3] * LAMBDA;
	A1B0 = (__int128) A->hi[8] * B->lo[3] * LAMBDA;
	A0B1 = (__int128) A->lo[8] * B->hi[3] * LAMBDA;
	A0B0 = (__int128) A->lo[8] * B->lo[3] * LAMBDA;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[2] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[2], tmplo, Rlo + 2);

	A1B1 = (__int128) A->hi[0] * B->hi[2];
	A1B0 = (__int128) A->hi[0] * B->lo[2];
	A0B1 = (__int128) A->lo[0] * B->hi[2];
	A0B0 = (__int128) A->lo[0] * B->lo[2];
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[2] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[2], tmplo, Rlo + 2);

	A1B1 = (__int128) A->hi[1] * B->hi[1];
	A1B0 = (__int128) A->hi[1] * B->lo[1];
	A0B1 = (__int128) A->lo[1] * B->hi[1];
	A0B0 = (__int128) A->lo[1] * B->lo[1];
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[2] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[2], tmplo, Rlo + 2);

	A1B1 = (__int128) A->hi[2] * B->hi[0];
	A1B0 = (__int128) A->hi[2] * B->lo[0];
	A0B1 = (__int128) A->lo[2] * B->hi[0];
	A0B0 = (__int128) A->lo[2] * B->lo[0];
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[2] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[2], tmplo, Rlo + 2);

	A1B1 = (__int128) A->hi[4] * B->hi[8] * LAMBDA;
	A1B0 = (__int128) A->hi[4] * B->lo[8] * LAMBDA;
	A0B1 = (__int128) A->lo[4] * B->hi[8] * LAMBDA;
	A0B0 = (__int128) A->lo[4] * B->lo[8] * LAMBDA;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[3] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[3], tmplo, Rlo + 3);

	A1B1 = (__int128) A->hi[5] * B->hi[7] * LAMBDA;
	A1B0 = (__int128) A->hi[5] * B->lo[7] * LAMBDA;
	A0B1 = (__int128) A->lo[5] * B->hi[7] * LAMBDA;
	A0B0 = (__int128) A->lo[5] * B->lo[7] * LAMBDA;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[3] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[3], tmplo, Rlo + 3);

	A1B1 = (__int128) A->hi[6] * B->hi[6] * LAMBDA;
	A1B0 = (__int128) A->hi[6] * B->lo[6] * LAMBDA;
	A0B1 = (__int128) A->lo[6] * B->hi[6] * LAMBDA;
	A0B0 = (__int128) A->lo[6] * B->lo[6] * LAMBDA;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[3] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[3], tmplo, Rlo + 3);

	A1B1 = (__int128) A->hi[7] * B->hi[5] * LAMBDA;
	A1B0 = (__int128) A->hi[7] * B->lo[5] * LAMBDA;
	A0B1 = (__int128) A->lo[7] * B->hi[5] * LAMBDA;
	A0B0 = (__int128) A->lo[7] * B->lo[5] * LAMBDA;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[3] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[3], tmplo, Rlo + 3);

	A1B1 = (__int128) A->hi[8] * B->hi[4] * LAMBDA;
	A1B0 = (__int128) A->hi[8] * B->lo[4] * LAMBDA;
	A0B1 = (__int128) A->lo[8] * B->hi[4] * LAMBDA;
	A0B0 = (__int128) A->lo[8] * B->lo[4] * LAMBDA;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[3] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[3], tmplo, Rlo + 3);

	A1B1 = (__int128) A->hi[0] * B->hi[3];
	A1B0 = (__int128) A->hi[0] * B->lo[3];
	A0B1 = (__int128) A->lo[0] * B->hi[3];
	A0B0 = (__int128) A->lo[0] * B->lo[3];
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[3] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[3], tmplo, Rlo + 3);

	A1B1 = (__int128) A->hi[1] * B->hi[2];
	A1B0 = (__int128) A->hi[1] * B->lo[2];
	A0B1 = (__int128) A->lo[1] * B->hi[2];
	A0B0 = (__int128) A->lo[1] * B->lo[2];
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[3] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[3], tmplo, Rlo + 3);

	A1B1 = (__int128) A->hi[2] * B->hi[1];
	A1B0 = (__int128) A->hi[2] * B->lo[1];
	A0B1 = (__int128) A->lo[2] * B->hi[1];
	A0B0 = (__int128) A->lo[2] * B->lo[1];
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[3] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[3], tmplo, Rlo + 3);

	A1B1 = (__int128) A->hi[3] * B->hi[0];
	A1B0 = (__int128) A->hi[3] * B->lo[0];
	A0B1 = (__int128) A->lo[3] * B->hi[0];
	A0B0 = (__int128) A->lo[3] * B->lo[0];
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[3] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[3], tmplo, Rlo + 3);

	A1B1 = (__int128) A->hi[5] * B->hi[8] * LAMBDA;
	A1B0 = (__int128) A->hi[5] * B->lo[8] * LAMBDA;
	A0B1 = (__int128) A->lo[5] * B->hi[8] * LAMBDA;
	A0B0 = (__int128) A->lo[5] * B->lo[8] * LAMBDA;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[4] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[4], tmplo, Rlo + 4);

	A1B1 = (__int128) A->hi[6] * B->hi[7] * LAMBDA;
	A1B0 = (__int128) A->hi[6] * B->lo[7] * LAMBDA;
	A0B1 = (__int128) A->lo[6] * B->hi[7] * LAMBDA;
	A0B0 = (__int128) A->lo[6] * B->lo[7] * LAMBDA;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[4] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[4], tmplo, Rlo + 4);

	A1B1 = (__int128) A->hi[7] * B->hi[6] * LAMBDA;
	A1B0 = (__int128) A->hi[7] * B->lo[6] * LAMBDA;
	A0B1 = (__int128) A->lo[7] * B->hi[6] * LAMBDA;
	A0B0 = (__int128) A->lo[7] * B->lo[6] * LAMBDA;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[4] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[4], tmplo, Rlo + 4);

	A1B1 = (__int128) A->hi[8] * B->hi[5] * LAMBDA;
	A1B0 = (__int128) A->hi[8] * B->lo[5] * LAMBDA;
	A0B1 = (__int128) A->lo[8] * B->hi[5] * LAMBDA;
	A0B0 = (__int128) A->lo[8] * B->lo[5] * LAMBDA;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[4] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[4], tmplo, Rlo + 4);

	A1B1 = (__int128) A->hi[0] * B->hi[4];
	A1B0 = (__int128) A->hi[0] * B->lo[4];
	A0B1 = (__int128) A->lo[0] * B->hi[4];
	A0B0 = (__int128) A->lo[0] * B->lo[4];
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[4] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[4], tmplo, Rlo + 4);

	A1B1 = (__int128) A->hi[1] * B->hi[3];
	A1B0 = (__int128) A->hi[1] * B->lo[3];
	A0B1 = (__int128) A->lo[1] * B->hi[3];
	A0B0 = (__int128) A->lo[1] * B->lo[3];
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[4] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[4], tmplo, Rlo + 4);

	A1B1 = (__int128) A->hi[2] * B->hi[2];
	A1B0 = (__int128) A->hi[2] * B->lo[2];
	A0B1 = (__int128) A->lo[2] * B->hi[2];
	A0B0 = (__int128) A->lo[2] * B->lo[2];
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[4] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[4], tmplo, Rlo + 4);

	A1B1 = (__int128) A->hi[3] * B->hi[1];
	A1B0 = (__int128) A->hi[3] * B->lo[1];
	A0B1 = (__int128) A->lo[3] * B->hi[1];
	A0B0 = (__int128) A->lo[3] * B->lo[1];
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[4] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[4], tmplo, Rlo + 4);

	A1B1 = (__int128) A->hi[4] * B->hi[0];
	A1B0 = (__int128) A->hi[4] * B->lo[0];
	A0B1 = (__int128) A->lo[4] * B->hi[0];
	A0B0 = (__int128) A->lo[4] * B->lo[0];
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[4] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[4], tmplo, Rlo + 4);

	A1B1 = (__int128) A->hi[6] * B->hi[8] * LAMBDA;
	A1B0 = (__int128) A->hi[6] * B->lo[8] * LAMBDA;
	A0B1 = (__int128) A->lo[6] * B->hi[8] * LAMBDA;
	A0B0 = (__int128) A->lo[6] * B->lo[8] * LAMBDA;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[5] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[5], tmplo, Rlo + 5);

	A1B1 = (__int128) A->hi[7] * B->hi[7] * LAMBDA;
	A1B0 = (__int128) A->hi[7] * B->lo[7] * LAMBDA;
	A0B1 = (__int128) A->lo[7] * B->hi[7] * LAMBDA;
	A0B0 = (__int128) A->lo[7] * B->lo[7] * LAMBDA;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[5] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[5], tmplo, Rlo + 5);

	A1B1 = (__int128) A->hi[8] * B->hi[6] * LAMBDA;
	A1B0 = (__int128) A->hi[8] * B->lo[6] * LAMBDA;
	A0B1 = (__int128) A->lo[8] * B->hi[6] * LAMBDA;
	A0B0 = (__int128) A->lo[8] * B->lo[6] * LAMBDA;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[5] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[5], tmplo, Rlo + 5);

	A1B1 = (__int128) A->hi[0] * B->hi[5];
	A1B0 = (__int128) A->hi[0] * B->lo[5];
	A0B1 = (__int128) A->lo[0] * B->hi[5];
	A0B0 = (__int128) A->lo[0] * B->lo[5];
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[5] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[5], tmplo, Rlo + 5);

	A1B1 = (__int128) A->hi[1] * B->hi[4];
	A1B0 = (__int128) A->hi[1] * B->lo[4];
	A0B1 = (__int128) A->lo[1] * B->hi[4];
	A0B0 = (__int128) A->lo[1] * B->lo[4];
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[5] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[5], tmplo, Rlo + 5);

	A1B1 = (__int128) A->hi[2] * B->hi[3];
	A1B0 = (__int128) A->hi[2] * B->lo[3];
	A0B1 = (__int128) A->lo[2] * B->hi[3];
	A0B0 = (__int128) A->lo[2] * B->lo[3];
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[5] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[5], tmplo, Rlo + 5);

	A1B1 = (__int128) A->hi[3] * B->hi[2];
	A1B0 = (__int128) A->hi[3] * B->lo[2];
	A0B1 = (__int128) A->lo[3] * B->hi[2];
	A0B0 = (__int128) A->lo[3] * B->lo[2];
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[5] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[5], tmplo, Rlo + 5);

	A1B1 = (__int128) A->hi[4] * B->hi[1];
	A1B0 = (__int128) A->hi[4] * B->lo[1];
	A0B1 = (__int128) A->lo[4] * B->hi[1];
	A0B0 = (__int128) A->lo[4] * B->lo[1];
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[5] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[5], tmplo, Rlo + 5);

	A1B1 = (__int128) A->hi[5] * B->hi[0];
	A1B0 = (__int128) A->hi[5] * B->lo[0];
	A0B1 = (__int128) A->lo[5] * B->hi[0];
	A0B0 = (__int128) A->lo[5] * B->lo[0];
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[5] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[5], tmplo, Rlo + 5);

	A1B1 = (__int128) A->hi[7] * B->hi[8] * LAMBDA;
	A1B0 = (__int128) A->hi[7] * B->lo[8] * LAMBDA;
	A0B1 = (__int128) A->lo[7] * B->hi[8] * LAMBDA;
	A0B0 = (__int128) A->lo[7] * B->lo[8] * LAMBDA;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[6] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[6], tmplo, Rlo + 6);

	A1B1 = (__int128) A->hi[8] * B->hi[7] * LAMBDA;
	A1B0 = (__int128) A->hi[8] * B->lo[7] * LAMBDA;
	A0B1 = (__int128) A->lo[8] * B->hi[7] * LAMBDA;
	A0B0 = (__int128) A->lo[8] * B->lo[7] * LAMBDA;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[6] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[6], tmplo, Rlo + 6);

	A1B1 = (__int128) A->hi[0] * B->hi[6];
	A1B0 = (__int128) A->hi[0] * B->lo[6];
	A0B1 = (__int128) A->lo[0] * B->hi[6];
	A0B0 = (__int128) A->lo[0] * B->lo[6];
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[6] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[6], tmplo, Rlo + 6);

	A1B1 = (__int128) A->hi[1] * B->hi[5];
	A1B0 = (__int128) A->hi[1] * B->lo[5];
	A0B1 = (__int128) A->lo[1] * B->hi[5];
	A0B0 = (__int128) A->lo[1] * B->lo[5];
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[6] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[6], tmplo, Rlo + 6);

	A1B1 = (__int128) A->hi[2] * B->hi[4];
	A1B0 = (__int128) A->hi[2] * B->lo[4];
	A0B1 = (__int128) A->lo[2] * B->hi[4];
	A0B0 = (__int128) A->lo[2] * B->lo[4];
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[6] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[6], tmplo, Rlo + 6);

	A1B1 = (__int128) A->hi[3] * B->hi[3];
	A1B0 = (__int128) A->hi[3] * B->lo[3];
	A0B1 = (__int128) A->lo[3] * B->hi[3];
	A0B0 = (__int128) A->lo[3] * B->lo[3];
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[6] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[6], tmplo, Rlo + 6);

	A1B1 = (__int128) A->hi[4] * B->hi[2];
	A1B0 = (__int128) A->hi[4] * B->lo[2];
	A0B1 = (__int128) A->lo[4] * B->hi[2];
	A0B0 = (__int128) A->lo[4] * B->lo[2];
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[6] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[6], tmplo, Rlo + 6);

	A1B1 = (__int128) A->hi[5] * B->hi[1];
	A1B0 = (__int128) A->hi[5] * B->lo[1];
	A0B1 = (__int128) A->lo[5] * B->hi[1];
	A0B0 = (__int128) A->lo[5] * B->lo[1];
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[6] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[6], tmplo, Rlo + 6);

	A1B1 = (__int128) A->hi[6] * B->hi[0];
	A1B0 = (__int128) A->hi[6] * B->lo[0];
	A0B1 = (__int128) A->lo[6] * B->hi[0];
	A0B0 = (__int128) A->lo[6] * B->lo[0];
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[6] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[6], tmplo, Rlo + 6);

	A1B1 = (__int128) A->hi[8] * B->hi[8] * LAMBDA;
	A1B0 = (__int128) A->hi[8] * B->lo[8] * LAMBDA;
	A0B1 = (__int128) A->lo[8] * B->hi[8] * LAMBDA;
	A0B0 = (__int128) A->lo[8] * B->lo[8] * LAMBDA;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[7] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[7], tmplo, Rlo + 7);

	A1B1 = (__int128) A->hi[0] * B->hi[7];
	A1B0 = (__int128) A->hi[0] * B->lo[7];
	A0B1 = (__int128) A->lo[0] * B->hi[7];
	A0B0 = (__int128) A->lo[0] * B->lo[7];
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[7] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[7], tmplo, Rlo + 7);

	A1B1 = (__int128) A->hi[1] * B->hi[6];
	A1B0 = (__int128) A->hi[1] * B->lo[6];
	A0B1 = (__int128) A->lo[1] * B->hi[6];
	A0B0 = (__int128) A->lo[1] * B->lo[6];
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[7] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[7], tmplo, Rlo + 7);

	A1B1 = (__int128) A->hi[2] * B->hi[5];
	A1B0 = (__int128) A->hi[2] * B->lo[5];
	A0B1 = (__int128) A->lo[2] * B->hi[5];
	A0B0 = (__int128) A->lo[2] * B->lo[5];
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[7] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[7], tmplo, Rlo + 7);

	A1B1 = (__int128) A->hi[3] * B->hi[4];
	A1B0 = (__int128) A->hi[3] * B->lo[4];
	A0B1 = (__int128) A->lo[3] * B->hi[4];
	A0B0 = (__int128) A->lo[3] * B->lo[4];
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[7] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[7], tmplo, Rlo + 7);

	A1B1 = (__int128) A->hi[4] * B->hi[3];
	A1B0 = (__int128) A->hi[4] * B->lo[3];
	A0B1 = (__int128) A->lo[4] * B->hi[3];
	A0B0 = (__int128) A->lo[4] * B->lo[3];
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[7] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[7], tmplo, Rlo + 7);

	A1B1 = (__int128) A->hi[5] * B->hi[2];
	A1B0 = (__int128) A->hi[5] * B->lo[2];
	A0B1 = (__int128) A->lo[5] * B->hi[2];
	A0B0 = (__int128) A->lo[5] * B->lo[2];
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[7] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[7], tmplo, Rlo + 7);

	A1B1 = (__int128) A->hi[6] * B->hi[1];
	A1B0 = (__int128) A->hi[6] * B->lo[1];
	A0B1 = (__int128) A->lo[6] * B->hi[1];
	A0B0 = (__int128) A->lo[6] * B->lo[1];
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[7] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[7], tmplo, Rlo + 7);

	A1B1 = (__int128) A->hi[7] * B->hi[0];
	A1B0 = (__int128) A->hi[7] * B->lo[0];
	A0B1 = (__int128) A->lo[7] * B->hi[0];
	A0B0 = (__int128) A->lo[7] * B->lo[0];
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[7] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[7], tmplo, Rlo + 7);

	A1B1 = (__int128) A->hi[0] * B->hi[8];
	A1B0 = (__int128) A->hi[0] * B->lo[8];
	A0B1 = (__int128) A->lo[0] * B->hi[8];
	A0B0 = (__int128) A->lo[0] * B->lo[8];
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[8] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[8], tmplo, Rlo + 8);

	A1B1 = (__int128) A->hi[1] * B->hi[7];
	A1B0 = (__int128) A->hi[1] * B->lo[7];
	A0B1 = (__int128) A->lo[1] * B->hi[7];
	A0B0 = (__int128) A->lo[1] * B->lo[7];
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[8] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[8], tmplo, Rlo + 8);

	A1B1 = (__int128) A->hi[2] * B->hi[6];
	A1B0 = (__int128) A->hi[2] * B->lo[6];
	A0B1 = (__int128) A->lo[2] * B->hi[6];
	A0B0 = (__int128) A->lo[2] * B->lo[6];
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[8] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[8], tmplo, Rlo + 8);

	A1B1 = (__int128) A->hi[3] * B->hi[5];
	A1B0 = (__int128) A->hi[3] * B->lo[5];
	A0B1 = (__int128) A->lo[3] * B->hi[5];
	A0B0 = (__int128) A->lo[3] * B->lo[5];
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[8] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[8], tmplo, Rlo + 8);

	A1B1 = (__int128) A->hi[4] * B->hi[4];
	A1B0 = (__int128) A->hi[4] * B->lo[4];
	A0B1 = (__int128) A->lo[4] * B->hi[4];
	A0B0 = (__int128) A->lo[4] * B->lo[4];
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[8] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[8], tmplo, Rlo + 8);

	A1B1 = (__int128) A->hi[5] * B->hi[3];
	A1B0 = (__int128) A->hi[5] * B->lo[3];
	A0B1 = (__int128) A->lo[5] * B->hi[3];
	A0B0 = (__int128) A->lo[5] * B->lo[3];
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[8] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[8], tmplo, Rlo + 8);

	A1B1 = (__int128) A->hi[6] * B->hi[2];
	A1B0 = (__int128) A->hi[6] * B->lo[2];
	A0B1 = (__int128) A->lo[6] * B->hi[2];
	A0B0 = (__int128) A->lo[6] * B->lo[2];
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[8] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[8], tmplo, Rlo + 8);

	A1B1 = (__int128) A->hi[7] * B->hi[1];
	A1B0 = (__int128) A->hi[7] * B->lo[1];
	A0B1 = (__int128) A->lo[7] * B->hi[1];
	A0B0 = (__int128) A->lo[7] * B->lo[1];
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[8] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[8], tmplo, Rlo + 8);

	A1B1 = (__int128) A->hi[8] * B->hi[0];
	A1B0 = (__int128) A->hi[8] * B->lo[0];
	A0B1 = (__int128) A->lo[8] * B->hi[0];
	A0B0 = (__int128) A->lo[8] * B->lo[0];
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[8] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[8], tmplo, Rlo + 8);

}


static inline void mns128_mod_mult_ext_red_pre_wmat(__int128* restrict Rhi,
	unsigned __int128* restrict Rlo, const restrict poly128 A,
	const restrict poly128 B)
{
	unsigned __int128 A0B0, tmplo;
	__int128 A1B1, A1B0, A0B1, aux2, aux3, hihi[9][9], hilo[9][9],
		lohi[9][9], lolo[9][9];

hihi[0][0] = (__int128) A->hi[0] * B->hi[0];
hilo[0][0] = (__int128) A->hi[0] * B->lo[0];
lohi[0][0] = (__int128) A->lo[0] * B->hi[0];
lolo[0][0] = (__int128) A->lo[0] * B->lo[0];
hihi[0][1] = (__int128) A->hi[0] * B->hi[1];
hilo[0][1] = (__int128) A->hi[0] * B->lo[1];
lohi[0][1] = (__int128) A->lo[0] * B->hi[1];
lolo[0][1] = (__int128) A->lo[0] * B->lo[1];
hihi[0][2] = (__int128) A->hi[0] * B->hi[2];
hilo[0][2] = (__int128) A->hi[0] * B->lo[2];
lohi[0][2] = (__int128) A->lo[0] * B->hi[2];
lolo[0][2] = (__int128) A->lo[0] * B->lo[2];
hihi[0][3] = (__int128) A->hi[0] * B->hi[3];
hilo[0][3] = (__int128) A->hi[0] * B->lo[3];
lohi[0][3] = (__int128) A->lo[0] * B->hi[3];
lolo[0][3] = (__int128) A->lo[0] * B->lo[3];
hihi[0][4] = (__int128) A->hi[0] * B->hi[4];
hilo[0][4] = (__int128) A->hi[0] * B->lo[4];
lohi[0][4] = (__int128) A->lo[0] * B->hi[4];
lolo[0][4] = (__int128) A->lo[0] * B->lo[4];
hihi[0][5] = (__int128) A->hi[0] * B->hi[5];
hilo[0][5] = (__int128) A->hi[0] * B->lo[5];
lohi[0][5] = (__int128) A->lo[0] * B->hi[5];
lolo[0][5] = (__int128) A->lo[0] * B->lo[5];
hihi[0][6] = (__int128) A->hi[0] * B->hi[6];
hilo[0][6] = (__int128) A->hi[0] * B->lo[6];
lohi[0][6] = (__int128) A->lo[0] * B->hi[6];
lolo[0][6] = (__int128) A->lo[0] * B->lo[6];
hihi[0][7] = (__int128) A->hi[0] * B->hi[7];
hilo[0][7] = (__int128) A->hi[0] * B->lo[7];
lohi[0][7] = (__int128) A->lo[0] * B->hi[7];
lolo[0][7] = (__int128) A->lo[0] * B->lo[7];
hihi[0][8] = (__int128) A->hi[0] * B->hi[8];
hilo[0][8] = (__int128) A->hi[0] * B->lo[8];
lohi[0][8] = (__int128) A->lo[0] * B->hi[8];
lolo[0][8] = (__int128) A->lo[0] * B->lo[8];
hihi[1][0] = (__int128) A->hi[1] * B->hi[0];
hilo[1][0] = (__int128) A->hi[1] * B->lo[0];
lohi[1][0] = (__int128) A->lo[1] * B->hi[0];
lolo[1][0] = (__int128) A->lo[1] * B->lo[0];
hihi[1][1] = (__int128) A->hi[1] * B->hi[1];
hilo[1][1] = (__int128) A->hi[1] * B->lo[1];
lohi[1][1] = (__int128) A->lo[1] * B->hi[1];
lolo[1][1] = (__int128) A->lo[1] * B->lo[1];
hihi[1][2] = (__int128) A->hi[1] * B->hi[2];
hilo[1][2] = (__int128) A->hi[1] * B->lo[2];
lohi[1][2] = (__int128) A->lo[1] * B->hi[2];
lolo[1][2] = (__int128) A->lo[1] * B->lo[2];
hihi[1][3] = (__int128) A->hi[1] * B->hi[3];
hilo[1][3] = (__int128) A->hi[1] * B->lo[3];
lohi[1][3] = (__int128) A->lo[1] * B->hi[3];
lolo[1][3] = (__int128) A->lo[1] * B->lo[3];
hihi[1][4] = (__int128) A->hi[1] * B->hi[4];
hilo[1][4] = (__int128) A->hi[1] * B->lo[4];
lohi[1][4] = (__int128) A->lo[1] * B->hi[4];
lolo[1][4] = (__int128) A->lo[1] * B->lo[4];
hihi[1][5] = (__int128) A->hi[1] * B->hi[5];
hilo[1][5] = (__int128) A->hi[1] * B->lo[5];
lohi[1][5] = (__int128) A->lo[1] * B->hi[5];
lolo[1][5] = (__int128) A->lo[1] * B->lo[5];
hihi[1][6] = (__int128) A->hi[1] * B->hi[6];
hilo[1][6] = (__int128) A->hi[1] * B->lo[6];
lohi[1][6] = (__int128) A->lo[1] * B->hi[6];
lolo[1][6] = (__int128) A->lo[1] * B->lo[6];
hihi[1][7] = (__int128) A->hi[1] * B->hi[7];
hilo[1][7] = (__int128) A->hi[1] * B->lo[7];
lohi[1][7] = (__int128) A->lo[1] * B->hi[7];
lolo[1][7] = (__int128) A->lo[1] * B->lo[7];
hihi[1][8] = (__int128) A->hi[1] * B->hi[8];
hilo[1][8] = (__int128) A->hi[1] * B->lo[8];
lohi[1][8] = (__int128) A->lo[1] * B->hi[8];
lolo[1][8] = (__int128) A->lo[1] * B->lo[8];
hihi[2][0] = (__int128) A->hi[2] * B->hi[0];
hilo[2][0] = (__int128) A->hi[2] * B->lo[0];
lohi[2][0] = (__int128) A->lo[2] * B->hi[0];
lolo[2][0] = (__int128) A->lo[2] * B->lo[0];
hihi[2][1] = (__int128) A->hi[2] * B->hi[1];
hilo[2][1] = (__int128) A->hi[2] * B->lo[1];
lohi[2][1] = (__int128) A->lo[2] * B->hi[1];
lolo[2][1] = (__int128) A->lo[2] * B->lo[1];
hihi[2][2] = (__int128) A->hi[2] * B->hi[2];
hilo[2][2] = (__int128) A->hi[2] * B->lo[2];
lohi[2][2] = (__int128) A->lo[2] * B->hi[2];
lolo[2][2] = (__int128) A->lo[2] * B->lo[2];
hihi[2][3] = (__int128) A->hi[2] * B->hi[3];
hilo[2][3] = (__int128) A->hi[2] * B->lo[3];
lohi[2][3] = (__int128) A->lo[2] * B->hi[3];
lolo[2][3] = (__int128) A->lo[2] * B->lo[3];
hihi[2][4] = (__int128) A->hi[2] * B->hi[4];
hilo[2][4] = (__int128) A->hi[2] * B->lo[4];
lohi[2][4] = (__int128) A->lo[2] * B->hi[4];
lolo[2][4] = (__int128) A->lo[2] * B->lo[4];
hihi[2][5] = (__int128) A->hi[2] * B->hi[5];
hilo[2][5] = (__int128) A->hi[2] * B->lo[5];
lohi[2][5] = (__int128) A->lo[2] * B->hi[5];
lolo[2][5] = (__int128) A->lo[2] * B->lo[5];
hihi[2][6] = (__int128) A->hi[2] * B->hi[6];
hilo[2][6] = (__int128) A->hi[2] * B->lo[6];
lohi[2][6] = (__int128) A->lo[2] * B->hi[6];
lolo[2][6] = (__int128) A->lo[2] * B->lo[6];
hihi[2][7] = (__int128) A->hi[2] * B->hi[7];
hilo[2][7] = (__int128) A->hi[2] * B->lo[7];
lohi[2][7] = (__int128) A->lo[2] * B->hi[7];
lolo[2][7] = (__int128) A->lo[2] * B->lo[7];
hihi[2][8] = (__int128) A->hi[2] * B->hi[8];
hilo[2][8] = (__int128) A->hi[2] * B->lo[8];
lohi[2][8] = (__int128) A->lo[2] * B->hi[8];
lolo[2][8] = (__int128) A->lo[2] * B->lo[8];
hihi[3][0] = (__int128) A->hi[3] * B->hi[0];
hilo[3][0] = (__int128) A->hi[3] * B->lo[0];
lohi[3][0] = (__int128) A->lo[3] * B->hi[0];
lolo[3][0] = (__int128) A->lo[3] * B->lo[0];
hihi[3][1] = (__int128) A->hi[3] * B->hi[1];
hilo[3][1] = (__int128) A->hi[3] * B->lo[1];
lohi[3][1] = (__int128) A->lo[3] * B->hi[1];
lolo[3][1] = (__int128) A->lo[3] * B->lo[1];
hihi[3][2] = (__int128) A->hi[3] * B->hi[2];
hilo[3][2] = (__int128) A->hi[3] * B->lo[2];
lohi[3][2] = (__int128) A->lo[3] * B->hi[2];
lolo[3][2] = (__int128) A->lo[3] * B->lo[2];
hihi[3][3] = (__int128) A->hi[3] * B->hi[3];
hilo[3][3] = (__int128) A->hi[3] * B->lo[3];
lohi[3][3] = (__int128) A->lo[3] * B->hi[3];
lolo[3][3] = (__int128) A->lo[3] * B->lo[3];
hihi[3][4] = (__int128) A->hi[3] * B->hi[4];
hilo[3][4] = (__int128) A->hi[3] * B->lo[4];
lohi[3][4] = (__int128) A->lo[3] * B->hi[4];
lolo[3][4] = (__int128) A->lo[3] * B->lo[4];
hihi[3][5] = (__int128) A->hi[3] * B->hi[5];
hilo[3][5] = (__int128) A->hi[3] * B->lo[5];
lohi[3][5] = (__int128) A->lo[3] * B->hi[5];
lolo[3][5] = (__int128) A->lo[3] * B->lo[5];
hihi[3][6] = (__int128) A->hi[3] * B->hi[6];
hilo[3][6] = (__int128) A->hi[3] * B->lo[6];
lohi[3][6] = (__int128) A->lo[3] * B->hi[6];
lolo[3][6] = (__int128) A->lo[3] * B->lo[6];
hihi[3][7] = (__int128) A->hi[3] * B->hi[7];
hilo[3][7] = (__int128) A->hi[3] * B->lo[7];
lohi[3][7] = (__int128) A->lo[3] * B->hi[7];
lolo[3][7] = (__int128) A->lo[3] * B->lo[7];
hihi[3][8] = (__int128) A->hi[3] * B->hi[8];
hilo[3][8] = (__int128) A->hi[3] * B->lo[8];
lohi[3][8] = (__int128) A->lo[3] * B->hi[8];
lolo[3][8] = (__int128) A->lo[3] * B->lo[8];
hihi[4][0] = (__int128) A->hi[4] * B->hi[0];
hilo[4][0] = (__int128) A->hi[4] * B->lo[0];
lohi[4][0] = (__int128) A->lo[4] * B->hi[0];
lolo[4][0] = (__int128) A->lo[4] * B->lo[0];
hihi[4][1] = (__int128) A->hi[4] * B->hi[1];
hilo[4][1] = (__int128) A->hi[4] * B->lo[1];
lohi[4][1] = (__int128) A->lo[4] * B->hi[1];
lolo[4][1] = (__int128) A->lo[4] * B->lo[1];
hihi[4][2] = (__int128) A->hi[4] * B->hi[2];
hilo[4][2] = (__int128) A->hi[4] * B->lo[2];
lohi[4][2] = (__int128) A->lo[4] * B->hi[2];
lolo[4][2] = (__int128) A->lo[4] * B->lo[2];
hihi[4][3] = (__int128) A->hi[4] * B->hi[3];
hilo[4][3] = (__int128) A->hi[4] * B->lo[3];
lohi[4][3] = (__int128) A->lo[4] * B->hi[3];
lolo[4][3] = (__int128) A->lo[4] * B->lo[3];
hihi[4][4] = (__int128) A->hi[4] * B->hi[4];
hilo[4][4] = (__int128) A->hi[4] * B->lo[4];
lohi[4][4] = (__int128) A->lo[4] * B->hi[4];
lolo[4][4] = (__int128) A->lo[4] * B->lo[4];
hihi[4][5] = (__int128) A->hi[4] * B->hi[5];
hilo[4][5] = (__int128) A->hi[4] * B->lo[5];
lohi[4][5] = (__int128) A->lo[4] * B->hi[5];
lolo[4][5] = (__int128) A->lo[4] * B->lo[5];
hihi[4][6] = (__int128) A->hi[4] * B->hi[6];
hilo[4][6] = (__int128) A->hi[4] * B->lo[6];
lohi[4][6] = (__int128) A->lo[4] * B->hi[6];
lolo[4][6] = (__int128) A->lo[4] * B->lo[6];
hihi[4][7] = (__int128) A->hi[4] * B->hi[7];
hilo[4][7] = (__int128) A->hi[4] * B->lo[7];
lohi[4][7] = (__int128) A->lo[4] * B->hi[7];
lolo[4][7] = (__int128) A->lo[4] * B->lo[7];
hihi[4][8] = (__int128) A->hi[4] * B->hi[8];
hilo[4][8] = (__int128) A->hi[4] * B->lo[8];
lohi[4][8] = (__int128) A->lo[4] * B->hi[8];
lolo[4][8] = (__int128) A->lo[4] * B->lo[8];
hihi[5][0] = (__int128) A->hi[5] * B->hi[0];
hilo[5][0] = (__int128) A->hi[5] * B->lo[0];
lohi[5][0] = (__int128) A->lo[5] * B->hi[0];
lolo[5][0] = (__int128) A->lo[5] * B->lo[0];
hihi[5][1] = (__int128) A->hi[5] * B->hi[1];
hilo[5][1] = (__int128) A->hi[5] * B->lo[1];
lohi[5][1] = (__int128) A->lo[5] * B->hi[1];
lolo[5][1] = (__int128) A->lo[5] * B->lo[1];
hihi[5][2] = (__int128) A->hi[5] * B->hi[2];
hilo[5][2] = (__int128) A->hi[5] * B->lo[2];
lohi[5][2] = (__int128) A->lo[5] * B->hi[2];
lolo[5][2] = (__int128) A->lo[5] * B->lo[2];
hihi[5][3] = (__int128) A->hi[5] * B->hi[3];
hilo[5][3] = (__int128) A->hi[5] * B->lo[3];
lohi[5][3] = (__int128) A->lo[5] * B->hi[3];
lolo[5][3] = (__int128) A->lo[5] * B->lo[3];
hihi[5][4] = (__int128) A->hi[5] * B->hi[4];
hilo[5][4] = (__int128) A->hi[5] * B->lo[4];
lohi[5][4] = (__int128) A->lo[5] * B->hi[4];
lolo[5][4] = (__int128) A->lo[5] * B->lo[4];
hihi[5][5] = (__int128) A->hi[5] * B->hi[5];
hilo[5][5] = (__int128) A->hi[5] * B->lo[5];
lohi[5][5] = (__int128) A->lo[5] * B->hi[5];
lolo[5][5] = (__int128) A->lo[5] * B->lo[5];
hihi[5][6] = (__int128) A->hi[5] * B->hi[6];
hilo[5][6] = (__int128) A->hi[5] * B->lo[6];
lohi[5][6] = (__int128) A->lo[5] * B->hi[6];
lolo[5][6] = (__int128) A->lo[5] * B->lo[6];
hihi[5][7] = (__int128) A->hi[5] * B->hi[7];
hilo[5][7] = (__int128) A->hi[5] * B->lo[7];
lohi[5][7] = (__int128) A->lo[5] * B->hi[7];
lolo[5][7] = (__int128) A->lo[5] * B->lo[7];
hihi[5][8] = (__int128) A->hi[5] * B->hi[8];
hilo[5][8] = (__int128) A->hi[5] * B->lo[8];
lohi[5][8] = (__int128) A->lo[5] * B->hi[8];
lolo[5][8] = (__int128) A->lo[5] * B->lo[8];
hihi[6][0] = (__int128) A->hi[6] * B->hi[0];
hilo[6][0] = (__int128) A->hi[6] * B->lo[0];
lohi[6][0] = (__int128) A->lo[6] * B->hi[0];
lolo[6][0] = (__int128) A->lo[6] * B->lo[0];
hihi[6][1] = (__int128) A->hi[6] * B->hi[1];
hilo[6][1] = (__int128) A->hi[6] * B->lo[1];
lohi[6][1] = (__int128) A->lo[6] * B->hi[1];
lolo[6][1] = (__int128) A->lo[6] * B->lo[1];
hihi[6][2] = (__int128) A->hi[6] * B->hi[2];
hilo[6][2] = (__int128) A->hi[6] * B->lo[2];
lohi[6][2] = (__int128) A->lo[6] * B->hi[2];
lolo[6][2] = (__int128) A->lo[6] * B->lo[2];
hihi[6][3] = (__int128) A->hi[6] * B->hi[3];
hilo[6][3] = (__int128) A->hi[6] * B->lo[3];
lohi[6][3] = (__int128) A->lo[6] * B->hi[3];
lolo[6][3] = (__int128) A->lo[6] * B->lo[3];
hihi[6][4] = (__int128) A->hi[6] * B->hi[4];
hilo[6][4] = (__int128) A->hi[6] * B->lo[4];
lohi[6][4] = (__int128) A->lo[6] * B->hi[4];
lolo[6][4] = (__int128) A->lo[6] * B->lo[4];
hihi[6][5] = (__int128) A->hi[6] * B->hi[5];
hilo[6][5] = (__int128) A->hi[6] * B->lo[5];
lohi[6][5] = (__int128) A->lo[6] * B->hi[5];
lolo[6][5] = (__int128) A->lo[6] * B->lo[5];
hihi[6][6] = (__int128) A->hi[6] * B->hi[6];
hilo[6][6] = (__int128) A->hi[6] * B->lo[6];
lohi[6][6] = (__int128) A->lo[6] * B->hi[6];
lolo[6][6] = (__int128) A->lo[6] * B->lo[6];
hihi[6][7] = (__int128) A->hi[6] * B->hi[7];
hilo[6][7] = (__int128) A->hi[6] * B->lo[7];
lohi[6][7] = (__int128) A->lo[6] * B->hi[7];
lolo[6][7] = (__int128) A->lo[6] * B->lo[7];
hihi[6][8] = (__int128) A->hi[6] * B->hi[8];
hilo[6][8] = (__int128) A->hi[6] * B->lo[8];
lohi[6][8] = (__int128) A->lo[6] * B->hi[8];
lolo[6][8] = (__int128) A->lo[6] * B->lo[8];
hihi[7][0] = (__int128) A->hi[7] * B->hi[0];
hilo[7][0] = (__int128) A->hi[7] * B->lo[0];
lohi[7][0] = (__int128) A->lo[7] * B->hi[0];
lolo[7][0] = (__int128) A->lo[7] * B->lo[0];
hihi[7][1] = (__int128) A->hi[7] * B->hi[1];
hilo[7][1] = (__int128) A->hi[7] * B->lo[1];
lohi[7][1] = (__int128) A->lo[7] * B->hi[1];
lolo[7][1] = (__int128) A->lo[7] * B->lo[1];
hihi[7][2] = (__int128) A->hi[7] * B->hi[2];
hilo[7][2] = (__int128) A->hi[7] * B->lo[2];
lohi[7][2] = (__int128) A->lo[7] * B->hi[2];
lolo[7][2] = (__int128) A->lo[7] * B->lo[2];
hihi[7][3] = (__int128) A->hi[7] * B->hi[3];
hilo[7][3] = (__int128) A->hi[7] * B->lo[3];
lohi[7][3] = (__int128) A->lo[7] * B->hi[3];
lolo[7][3] = (__int128) A->lo[7] * B->lo[3];
hihi[7][4] = (__int128) A->hi[7] * B->hi[4];
hilo[7][4] = (__int128) A->hi[7] * B->lo[4];
lohi[7][4] = (__int128) A->lo[7] * B->hi[4];
lolo[7][4] = (__int128) A->lo[7] * B->lo[4];
hihi[7][5] = (__int128) A->hi[7] * B->hi[5];
hilo[7][5] = (__int128) A->hi[7] * B->lo[5];
lohi[7][5] = (__int128) A->lo[7] * B->hi[5];
lolo[7][5] = (__int128) A->lo[7] * B->lo[5];
hihi[7][6] = (__int128) A->hi[7] * B->hi[6];
hilo[7][6] = (__int128) A->hi[7] * B->lo[6];
lohi[7][6] = (__int128) A->lo[7] * B->hi[6];
lolo[7][6] = (__int128) A->lo[7] * B->lo[6];
hihi[7][7] = (__int128) A->hi[7] * B->hi[7];
hilo[7][7] = (__int128) A->hi[7] * B->lo[7];
lohi[7][7] = (__int128) A->lo[7] * B->hi[7];
lolo[7][7] = (__int128) A->lo[7] * B->lo[7];
hihi[7][8] = (__int128) A->hi[7] * B->hi[8];
hilo[7][8] = (__int128) A->hi[7] * B->lo[8];
lohi[7][8] = (__int128) A->lo[7] * B->hi[8];
lolo[7][8] = (__int128) A->lo[7] * B->lo[8];
hihi[8][0] = (__int128) A->hi[8] * B->hi[0];
hilo[8][0] = (__int128) A->hi[8] * B->lo[0];
lohi[8][0] = (__int128) A->lo[8] * B->hi[0];
lolo[8][0] = (__int128) A->lo[8] * B->lo[0];
hihi[8][1] = (__int128) A->hi[8] * B->hi[1];
hilo[8][1] = (__int128) A->hi[8] * B->lo[1];
lohi[8][1] = (__int128) A->lo[8] * B->hi[1];
lolo[8][1] = (__int128) A->lo[8] * B->lo[1];
hihi[8][2] = (__int128) A->hi[8] * B->hi[2];
hilo[8][2] = (__int128) A->hi[8] * B->lo[2];
lohi[8][2] = (__int128) A->lo[8] * B->hi[2];
lolo[8][2] = (__int128) A->lo[8] * B->lo[2];
hihi[8][3] = (__int128) A->hi[8] * B->hi[3];
hilo[8][3] = (__int128) A->hi[8] * B->lo[3];
lohi[8][3] = (__int128) A->lo[8] * B->hi[3];
lolo[8][3] = (__int128) A->lo[8] * B->lo[3];
hihi[8][4] = (__int128) A->hi[8] * B->hi[4];
hilo[8][4] = (__int128) A->hi[8] * B->lo[4];
lohi[8][4] = (__int128) A->lo[8] * B->hi[4];
lolo[8][4] = (__int128) A->lo[8] * B->lo[4];
hihi[8][5] = (__int128) A->hi[8] * B->hi[5];
hilo[8][5] = (__int128) A->hi[8] * B->lo[5];
lohi[8][5] = (__int128) A->lo[8] * B->hi[5];
lolo[8][5] = (__int128) A->lo[8] * B->lo[5];
hihi[8][6] = (__int128) A->hi[8] * B->hi[6];
hilo[8][6] = (__int128) A->hi[8] * B->lo[6];
lohi[8][6] = (__int128) A->lo[8] * B->hi[6];
lolo[8][6] = (__int128) A->lo[8] * B->lo[6];
hihi[8][7] = (__int128) A->hi[8] * B->hi[7];
hilo[8][7] = (__int128) A->hi[8] * B->lo[7];
lohi[8][7] = (__int128) A->lo[8] * B->hi[7];
lolo[8][7] = (__int128) A->lo[8] * B->lo[7];
hihi[8][8] = (__int128) A->hi[8] * B->hi[8];
hilo[8][8] = (__int128) A->hi[8] * B->lo[8];
lohi[8][8] = (__int128) A->lo[8] * B->hi[8];
lolo[8][8] = (__int128) A->lo[8] * B->lo[8];
	A1B1 = hihi[1][8] * LAMBDA;
	A1B0 = hilo[1][8] * LAMBDA;
	A0B1 = lohi[1][8] * LAMBDA;
	A0B0 = lolo[1][8] * LAMBDA;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[0] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[0], tmplo, Rlo + 0);

	A1B1 = hihi[2][7] * LAMBDA;
	A1B0 = hilo[2][7] * LAMBDA;
	A0B1 = lohi[2][7] * LAMBDA;
	A0B0 = lolo[2][7] * LAMBDA;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[0] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[0], tmplo, Rlo + 0);

	A1B1 = hihi[3][6] * LAMBDA;
	A1B0 = hilo[3][6] * LAMBDA;
	A0B1 = lohi[3][6] * LAMBDA;
	A0B0 = lolo[3][6] * LAMBDA;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[0] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[0], tmplo, Rlo + 0);

	A1B1 = hihi[4][5] * LAMBDA;
	A1B0 = hilo[4][5] * LAMBDA;
	A0B1 = lohi[4][5] * LAMBDA;
	A0B0 = lolo[4][5] * LAMBDA;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[0] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[0], tmplo, Rlo + 0);

	A1B1 = hihi[5][4] * LAMBDA;
	A1B0 = hilo[5][4] * LAMBDA;
	A0B1 = lohi[5][4] * LAMBDA;
	A0B0 = lolo[5][4] * LAMBDA;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[0] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[0], tmplo, Rlo + 0);

	A1B1 = hihi[6][3] * LAMBDA;
	A1B0 = hilo[6][3] * LAMBDA;
	A0B1 = lohi[6][3] * LAMBDA;
	A0B0 = lolo[6][3] * LAMBDA;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[0] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[0], tmplo, Rlo + 0);

	A1B1 = hihi[7][2] * LAMBDA;
	A1B0 = hilo[7][2] * LAMBDA;
	A0B1 = lohi[7][2] * LAMBDA;
	A0B0 = lolo[7][2] * LAMBDA;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[0] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[0], tmplo, Rlo + 0);

	A1B1 = hihi[8][1] * LAMBDA;
	A1B0 = hilo[8][1] * LAMBDA;
	A0B1 = lohi[8][1] * LAMBDA;
	A0B0 = lolo[8][1] * LAMBDA;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[0] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[0], tmplo, Rlo + 0);

	A1B1 = hihi[0][0];
	A1B0 = hilo[0][0];
	A0B1 = lohi[0][0];
	A0B0 = lolo[0][0];
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[0] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[0], tmplo, Rlo + 0);

	A1B1 = hihi[2][8] * LAMBDA;
	A1B0 = hilo[2][8] * LAMBDA;
	A0B1 = lohi[2][8] * LAMBDA;
	A0B0 = lolo[2][8] * LAMBDA;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[1] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[1], tmplo, Rlo + 1);

	A1B1 = hihi[3][7] * LAMBDA;
	A1B0 = hilo[3][7] * LAMBDA;
	A0B1 = lohi[3][7] * LAMBDA;
	A0B0 = lolo[3][7] * LAMBDA;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[1] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[1], tmplo, Rlo + 1);

	A1B1 = hihi[4][6] * LAMBDA;
	A1B0 = hilo[4][6] * LAMBDA;
	A0B1 = lohi[4][6] * LAMBDA;
	A0B0 = lolo[4][6] * LAMBDA;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[1] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[1], tmplo, Rlo + 1);

	A1B1 = hihi[5][5] * LAMBDA;
	A1B0 = hilo[5][5] * LAMBDA;
	A0B1 = lohi[5][5] * LAMBDA;
	A0B0 = lolo[5][5] * LAMBDA;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[1] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[1], tmplo, Rlo + 1);

	A1B1 = hihi[6][4] * LAMBDA;
	A1B0 = hilo[6][4] * LAMBDA;
	A0B1 = lohi[6][4] * LAMBDA;
	A0B0 = lolo[6][4] * LAMBDA;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[1] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[1], tmplo, Rlo + 1);

	A1B1 = hihi[7][3] * LAMBDA;
	A1B0 = hilo[7][3] * LAMBDA;
	A0B1 = lohi[7][3] * LAMBDA;
	A0B0 = lolo[7][3] * LAMBDA;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[1] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[1], tmplo, Rlo + 1);

	A1B1 = hihi[8][2] * LAMBDA;
	A1B0 = hilo[8][2] * LAMBDA;
	A0B1 = lohi[8][2] * LAMBDA;
	A0B0 = lolo[8][2] * LAMBDA;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[1] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[1], tmplo, Rlo + 1);

	A1B1 = hihi[0][1];
	A1B0 = hilo[0][1];
	A0B1 = lohi[0][1];
	A0B0 = lolo[0][1];
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[1] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[1], tmplo, Rlo + 1);

	A1B1 = hihi[1][0];
	A1B0 = hilo[1][0];
	A0B1 = lohi[1][0];
	A0B0 = lolo[1][0];
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[1] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[1], tmplo, Rlo + 1);

	A1B1 = hihi[3][8] * LAMBDA;
	A1B0 = hilo[3][8] * LAMBDA;
	A0B1 = lohi[3][8] * LAMBDA;
	A0B0 = lolo[3][8] * LAMBDA;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[2] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[2], tmplo, Rlo + 2);

	A1B1 = hihi[4][7] * LAMBDA;
	A1B0 = hilo[4][7] * LAMBDA;
	A0B1 = lohi[4][7] * LAMBDA;
	A0B0 = lolo[4][7] * LAMBDA;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[2] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[2], tmplo, Rlo + 2);

	A1B1 = hihi[5][6] * LAMBDA;
	A1B0 = hilo[5][6] * LAMBDA;
	A0B1 = lohi[5][6] * LAMBDA;
	A0B0 = lolo[5][6] * LAMBDA;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[2] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[2], tmplo, Rlo + 2);

	A1B1 = hihi[6][5] * LAMBDA;
	A1B0 = hilo[6][5] * LAMBDA;
	A0B1 = lohi[6][5] * LAMBDA;
	A0B0 = lolo[6][5] * LAMBDA;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[2] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[2], tmplo, Rlo + 2);

	A1B1 = hihi[7][4] * LAMBDA;
	A1B0 = hilo[7][4] * LAMBDA;
	A0B1 = lohi[7][4] * LAMBDA;
	A0B0 = lolo[7][4] * LAMBDA;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[2] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[2], tmplo, Rlo + 2);

	A1B1 = hihi[8][3] * LAMBDA;
	A1B0 = hilo[8][3] * LAMBDA;
	A0B1 = lohi[8][3] * LAMBDA;
	A0B0 = lolo[8][3] * LAMBDA;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[2] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[2], tmplo, Rlo + 2);

	A1B1 = hihi[0][2];
	A1B0 = hilo[0][2];
	A0B1 = lohi[0][2];
	A0B0 = lolo[0][2];
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[2] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[2], tmplo, Rlo + 2);

	A1B1 = hihi[1][1];
	A1B0 = hilo[1][1];
	A0B1 = lohi[1][1];
	A0B0 = lolo[1][1];
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[2] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[2], tmplo, Rlo + 2);

	A1B1 = hihi[2][0];
	A1B0 = hilo[2][0];
	A0B1 = lohi[2][0];
	A0B0 = lolo[2][0];
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[2] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[2], tmplo, Rlo + 2);

	A1B1 = hihi[4][8] * LAMBDA;
	A1B0 = hilo[4][8] * LAMBDA;
	A0B1 = lohi[4][8] * LAMBDA;
	A0B0 = lolo[4][8] * LAMBDA;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[3] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[3], tmplo, Rlo + 3);

	A1B1 = hihi[5][7] * LAMBDA;
	A1B0 = hilo[5][7] * LAMBDA;
	A0B1 = lohi[5][7] * LAMBDA;
	A0B0 = lolo[5][7] * LAMBDA;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[3] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[3], tmplo, Rlo + 3);

	A1B1 = hihi[6][6] * LAMBDA;
	A1B0 = hilo[6][6] * LAMBDA;
	A0B1 = lohi[6][6] * LAMBDA;
	A0B0 = lolo[6][6] * LAMBDA;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[3] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[3], tmplo, Rlo + 3);

	A1B1 = hihi[7][5] * LAMBDA;
	A1B0 = hilo[7][5] * LAMBDA;
	A0B1 = lohi[7][5] * LAMBDA;
	A0B0 = lolo[7][5] * LAMBDA;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[3] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[3], tmplo, Rlo + 3);

	A1B1 = hihi[8][4] * LAMBDA;
	A1B0 = hilo[8][4] * LAMBDA;
	A0B1 = lohi[8][4] * LAMBDA;
	A0B0 = lolo[8][4] * LAMBDA;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[3] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[3], tmplo, Rlo + 3);

	A1B1 = hihi[0][3];
	A1B0 = hilo[0][3];
	A0B1 = lohi[0][3];
	A0B0 = lolo[0][3];
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[3] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[3], tmplo, Rlo + 3);

	A1B1 = hihi[1][2];
	A1B0 = hilo[1][2];
	A0B1 = lohi[1][2];
	A0B0 = lolo[1][2];
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[3] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[3], tmplo, Rlo + 3);

	A1B1 = hihi[2][1];
	A1B0 = hilo[2][1];
	A0B1 = lohi[2][1];
	A0B0 = lolo[2][1];
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[3] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[3], tmplo, Rlo + 3);

	A1B1 = hihi[3][0];
	A1B0 = hilo[3][0];
	A0B1 = lohi[3][0];
	A0B0 = lolo[3][0];
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[3] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[3], tmplo, Rlo + 3);

	A1B1 = hihi[5][8] * LAMBDA;
	A1B0 = hilo[5][8] * LAMBDA;
	A0B1 = lohi[5][8] * LAMBDA;
	A0B0 = lolo[5][8] * LAMBDA;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[4] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[4], tmplo, Rlo + 4);

	A1B1 = hihi[6][7] * LAMBDA;
	A1B0 = hilo[6][7] * LAMBDA;
	A0B1 = lohi[6][7] * LAMBDA;
	A0B0 = lolo[6][7] * LAMBDA;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[4] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[4], tmplo, Rlo + 4);

	A1B1 = hihi[7][6] * LAMBDA;
	A1B0 = hilo[7][6] * LAMBDA;
	A0B1 = lohi[7][6] * LAMBDA;
	A0B0 = lolo[7][6] * LAMBDA;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[4] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[4], tmplo, Rlo + 4);

	A1B1 = hihi[8][5] * LAMBDA;
	A1B0 = hilo[8][5] * LAMBDA;
	A0B1 = lohi[8][5] * LAMBDA;
	A0B0 = lolo[8][5] * LAMBDA;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[4] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[4], tmplo, Rlo + 4);

	A1B1 = hihi[0][4];
	A1B0 = hilo[0][4];
	A0B1 = lohi[0][4];
	A0B0 = lolo[0][4];
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[4] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[4], tmplo, Rlo + 4);

	A1B1 = hihi[1][3];
	A1B0 = hilo[1][3];
	A0B1 = lohi[1][3];
	A0B0 = lolo[1][3];
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[4] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[4], tmplo, Rlo + 4);

	A1B1 = hihi[2][2];
	A1B0 = hilo[2][2];
	A0B1 = lohi[2][2];
	A0B0 = lolo[2][2];
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[4] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[4], tmplo, Rlo + 4);

	A1B1 = hihi[3][1];
	A1B0 = hilo[3][1];
	A0B1 = lohi[3][1];
	A0B0 = lolo[3][1];
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[4] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[4], tmplo, Rlo + 4);

	A1B1 = hihi[4][0];
	A1B0 = hilo[4][0];
	A0B1 = lohi[4][0];
	A0B0 = lolo[4][0];
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[4] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[4], tmplo, Rlo + 4);

	A1B1 = hihi[6][8] * LAMBDA;
	A1B0 = hilo[6][8] * LAMBDA;
	A0B1 = lohi[6][8] * LAMBDA;
	A0B0 = lolo[6][8] * LAMBDA;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[5] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[5], tmplo, Rlo + 5);

	A1B1 = hihi[7][7] * LAMBDA;
	A1B0 = hilo[7][7] * LAMBDA;
	A0B1 = lohi[7][7] * LAMBDA;
	A0B0 = lolo[7][7] * LAMBDA;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[5] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[5], tmplo, Rlo + 5);

	A1B1 = hihi[8][6] * LAMBDA;
	A1B0 = hilo[8][6] * LAMBDA;
	A0B1 = lohi[8][6] * LAMBDA;
	A0B0 = lolo[8][6] * LAMBDA;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[5] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[5], tmplo, Rlo + 5);

	A1B1 = hihi[0][5];
	A1B0 = hilo[0][5];
	A0B1 = lohi[0][5];
	A0B0 = lolo[0][5];
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[5] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[5], tmplo, Rlo + 5);

	A1B1 = hihi[1][4];
	A1B0 = hilo[1][4];
	A0B1 = lohi[1][4];
	A0B0 = lolo[1][4];
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[5] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[5], tmplo, Rlo + 5);

	A1B1 = hihi[2][3];
	A1B0 = hilo[2][3];
	A0B1 = lohi[2][3];
	A0B0 = lolo[2][3];
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[5] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[5], tmplo, Rlo + 5);

	A1B1 = hihi[3][2];
	A1B0 = hilo[3][2];
	A0B1 = lohi[3][2];
	A0B0 = lolo[3][2];
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[5] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[5], tmplo, Rlo + 5);

	A1B1 = hihi[4][1];
	A1B0 = hilo[4][1];
	A0B1 = lohi[4][1];
	A0B0 = lolo[4][1];
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[5] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[5], tmplo, Rlo + 5);

	A1B1 = hihi[5][0];
	A1B0 = hilo[5][0];
	A0B1 = lohi[5][0];
	A0B0 = lolo[5][0];
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[5] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[5], tmplo, Rlo + 5);

	A1B1 = hihi[7][8] * LAMBDA;
	A1B0 = hilo[7][8] * LAMBDA;
	A0B1 = lohi[7][8] * LAMBDA;
	A0B0 = lolo[7][8] * LAMBDA;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[6] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[6], tmplo, Rlo + 6);

	A1B1 = hihi[8][7] * LAMBDA;
	A1B0 = hilo[8][7] * LAMBDA;
	A0B1 = lohi[8][7] * LAMBDA;
	A0B0 = lolo[8][7] * LAMBDA;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[6] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[6], tmplo, Rlo + 6);

	A1B1 = hihi[0][6];
	A1B0 = hilo[0][6];
	A0B1 = lohi[0][6];
	A0B0 = lolo[0][6];
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[6] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[6], tmplo, Rlo + 6);

	A1B1 = hihi[1][5];
	A1B0 = hilo[1][5];
	A0B1 = lohi[1][5];
	A0B0 = lolo[1][5];
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[6] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[6], tmplo, Rlo + 6);

	A1B1 = hihi[2][4];
	A1B0 = hilo[2][4];
	A0B1 = lohi[2][4];
	A0B0 = lolo[2][4];
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[6] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[6], tmplo, Rlo + 6);

	A1B1 = hihi[3][3];
	A1B0 = hilo[3][3];
	A0B1 = lohi[3][3];
	A0B0 = lolo[3][3];
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[6] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[6], tmplo, Rlo + 6);

	A1B1 = hihi[4][2];
	A1B0 = hilo[4][2];
	A0B1 = lohi[4][2];
	A0B0 = lolo[4][2];
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[6] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[6], tmplo, Rlo + 6);

	A1B1 = hihi[5][1];
	A1B0 = hilo[5][1];
	A0B1 = lohi[5][1];
	A0B0 = lolo[5][1];
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[6] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[6], tmplo, Rlo + 6);

	A1B1 = hihi[6][0];
	A1B0 = hilo[6][0];
	A0B1 = lohi[6][0];
	A0B0 = lolo[6][0];
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[6] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[6], tmplo, Rlo + 6);

	A1B1 = hihi[8][8] * LAMBDA;
	A1B0 = hilo[8][8] * LAMBDA;
	A0B1 = lohi[8][8] * LAMBDA;
	A0B0 = lolo[8][8] * LAMBDA;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[7] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[7], tmplo, Rlo + 7);

	A1B1 = hihi[0][7];
	A1B0 = hilo[0][7];
	A0B1 = lohi[0][7];
	A0B0 = lolo[0][7];
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[7] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[7], tmplo, Rlo + 7);

	A1B1 = hihi[1][6];
	A1B0 = hilo[1][6];
	A0B1 = lohi[1][6];
	A0B0 = lolo[1][6];
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[7] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[7], tmplo, Rlo + 7);

	A1B1 = hihi[2][5];
	A1B0 = hilo[2][5];
	A0B1 = lohi[2][5];
	A0B0 = lolo[2][5];
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[7] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[7], tmplo, Rlo + 7);

	A1B1 = hihi[3][4];
	A1B0 = hilo[3][4];
	A0B1 = lohi[3][4];
	A0B0 = lolo[3][4];
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[7] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[7], tmplo, Rlo + 7);

	A1B1 = hihi[4][3];
	A1B0 = hilo[4][3];
	A0B1 = lohi[4][3];
	A0B0 = lolo[4][3];
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[7] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[7], tmplo, Rlo + 7);

	A1B1 = hihi[5][2];
	A1B0 = hilo[5][2];
	A0B1 = lohi[5][2];
	A0B0 = lolo[5][2];
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[7] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[7], tmplo, Rlo + 7);

	A1B1 = hihi[6][1];
	A1B0 = hilo[6][1];
	A0B1 = lohi[6][1];
	A0B0 = lolo[6][1];
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[7] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[7], tmplo, Rlo + 7);

	A1B1 = hihi[7][0];
	A1B0 = hilo[7][0];
	A0B1 = lohi[7][0];
	A0B0 = lolo[7][0];
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[7] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[7], tmplo, Rlo + 7);

	A1B1 = hihi[0][8];
	A1B0 = hilo[0][8];
	A0B1 = lohi[0][8];
	A0B0 = lolo[0][8];
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[8] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[8], tmplo, Rlo + 8);

	A1B1 = hihi[1][7];
	A1B0 = hilo[1][7];
	A0B1 = lohi[1][7];
	A0B0 = lolo[1][7];
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[8] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[8], tmplo, Rlo + 8);

	A1B1 = hihi[2][6];
	A1B0 = hilo[2][6];
	A0B1 = lohi[2][6];
	A0B0 = lolo[2][6];
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[8] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[8], tmplo, Rlo + 8);

	A1B1 = hihi[3][5];
	A1B0 = hilo[3][5];
	A0B1 = lohi[3][5];
	A0B0 = lolo[3][5];
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[8] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[8], tmplo, Rlo + 8);

	A1B1 = hihi[4][4];
	A1B0 = hilo[4][4];
	A0B1 = lohi[4][4];
	A0B0 = lolo[4][4];
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[8] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[8], tmplo, Rlo + 8);

	A1B1 = hihi[5][3];
	A1B0 = hilo[5][3];
	A0B1 = lohi[5][3];
	A0B0 = lolo[5][3];
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[8] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[8], tmplo, Rlo + 8);

	A1B1 = hihi[6][2];
	A1B0 = hilo[6][2];
	A0B1 = lohi[6][2];
	A0B0 = lolo[6][2];
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[8] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[8], tmplo, Rlo + 8);

	A1B1 = hihi[7][1];
	A1B0 = hilo[7][1];
	A0B1 = lohi[7][1];
	A0B0 = lolo[7][1];
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[8] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[8], tmplo, Rlo + 8);

	A1B1 = hihi[8][0];
	A1B0 = hilo[8][0];
	A0B1 = lohi[8][0];
	A0B0 = lolo[8][0];
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[8] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[8], tmplo, Rlo + 8);

}

#endif
