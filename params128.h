#ifndef PMNS_PARAMS128_H_INCLUDED
#define PMNS_PARAMS128_H_INCLUDED

#define RHO 119
#define N 9
#define LAMBDA 2

// Various values you can get from precalc
static const uint64_t Mlo[] = {7208710283951223821u, 16470900848815575625u, 12094338623667909333u, 7105755307053303794u, 4718488279913713768u, 15638703076346184814u, 3436003758609590581u, 7457739546006752748u, 10861162536523552327u},
	M1lo[] = {10624667757354428881u, 12831421836146225949u, 16605785116151146848u, 6293085397168886947u, 17064132055918088649u, 7157288741630911238u, 10001649156227634806u, 4173273978350557481u, 11199722977370077424u},
	MLambdalo[] = {14417420567902447642u, 14495057623921599634u, 5741933173626267050u, 14211510614106607588u, 9436976559827427536u, 12830662078982818012u, 6872007517219181162u, 14915479092013505496u, 3275580999337553038u},
	M1Lambdalo[] = {2802591440999306146u, 7216099598582900282u, 14764826158592742080u, 12586170794337773894u, 15681520038126625682u, 14314577483261822476u, 1556554238745717996u, 8346547956701114962u, 3952701881030603232u},
	__Pilo__[N][N] = {
		{16971263135169101280u, 216752969935003416u, 13367575703674183170u, 10639737135598214317u, 6693948733104527458u, 6597173422678185364u, 12482761297973799987u, 375964525456638535u, 9694243781900293299u},
		{7212569710931733755u, 5492059458483702675u, 13347503281932494162u, 5333889136327945533u, 3685422188295101983u, 15826987104329778319u, 18167175726161373010u, 8738104174430682971u, 13675840750123742951u},
		{17883422669517925765u, 4720702961051992907u, 2573031298752344925u, 2392369823582578061u, 8051164923005574676u, 4223239335144853583u, 12235167332517351810u, 10501671260213263087u, 6147358180440605017u},
		{13953992132805893424u, 10222428771097770063u, 16531351327738951341u, 14847680355764122866u, 12786983912374892522u, 3613611361570446138u, 11222101068224087892u, 3434076107252308379u, 8354245367131349237u},
		{8402281584977881562u, 1466398002376157224u, 11346921286251814788u, 16651256159918801242u, 13842136596772653433u, 8558607679270369673u, 13618764747711003458u, 14210846336068560331u, 175041932080917200u},
		{14108563580234579380u, 14551125524813985903u, 2922891792914079409u, 17211574519597547972u, 3824050324212256104u, 11425104780343712995u, 17575034312221720570u, 3966833700838619813u, 9670310901101829851u},
		{4899384291030011583u, 8523752462347743202u, 4774940807376650413u, 8118250322437597373u, 9655638558765726461u, 16832824206917551516u, 8512843255350108423u, 4149695049399128051u, 17239572299152625576u},
		{5521180760511379109u, 10972713672240434569u, 8763722149923151817u, 16289304835305345564u, 2859234803567846964u, 5874143558155447818u, 17412379339981254271u, 15404633322366944011u, 12023653166816293753u},
		{17409595219885312408u, 4344769836552646766u, 1421085701772221362u, 1623425183621985836u, 721246139060423531u, 3921056079127679970u, 1275286444775053381u, 6625051169904130985u, 6323255706314529715u}
	};

static const int64_t Mhi[] = {-287932041058164, -14457312270234, -139797510947255, 390970083347788, 218605112839726, 166531022238992, 548332397778135, 3232925015296, -215432724507006},
	M1hi[] = {6683901370390835320, -365530285974738973, -2377806232247641805, 1152556206696996488, 7479067804196803527, 73118327074095253, -6546078019808442823, -8082044489980670167, 2424501033011046686},
	MLambdahi[] = {-575864082116328, -28914624540467, -279595021894509, 781940166695576, 437210225679452, 333062044477985, 1096664795556270, 6465850030592, -430865449014011},
	M1Lambdahi[] = {-5078941332927880975, -731060571949477945, -4755612464495283609, 2305112413393992976, -3488608465315944561, 146236654148190506, 5354588034092665971, 2282655093748211282, 4849002066022093373},
	__Pihi__[N][N] = {
		{503392830187893, 443080957540924, 751189813030566, 698751360853786, 84199077881836, 1113565726446828, 81159984503903, -27771720180005, 115621428384591},
		{-150616587235063, 109152075498204, 457386760975810, 495599305395664, 980557047225157, 813054235020869, 406141141264858, 115011590034615, 54255334258796},
		{1004311851783622, 826915668476117, 627760272778415, 1286850949059824, 808094144602909, 213813313278113, 388072007077928, 387981841638298, -96073729097490},
		{1217281340864174, 727688094254506, 163176709745776, -52390880693022, -167944339991896, 263611348485620, 359710353961428, 495599849515294, 869356744983264},
		{1319964744198259, 607275447619291, -98702695572553, 504422491605619, 282969902773376, 387774817382708, 353039843833366, 538807873645929, 548223818814423},
		{-133686424147389, 43531028435656, 497295345872363, 611237216041020, 443419661358048, 691404436492443, 559648846722180, 142151780059992, 270885855380720},
		{261264680170669, 1327907829996624, 518447350442244, 590949451623495, 747260232009013, 78719696239022, 237548939965777, 308693585293556, 237546581625253},
		{564872313509228, 531046668886412, 408884840293829, 586811022491428, 783491135897136, 757738447974519, 500376968749564, -150143925885674, -189429583708460},
		{888428567686705, 1422833685094392, 938016002148773, 1033632283766632, 448348480485566, -169386010462110, -483839435557457, 101988233769700, 669031537371765}
	};

static const _poly G1 = { .deg = 16,
		.t = (int64_t[]) {0x8368535df0a25dc7, 0x976d896a96c40997, 0x413b6bcf84d8d985, 0xcaaed7b2b771236b, 0x64816e4e0dcd0714, 0xf677fbd2c4dd5564, 0xfec613a55f729094, 0xa2aedd610c5038fa, 0xfde8a89d120c42ea, 0xf16ba119ebfdae9b, 0xfdf724f0ba8a21ea, 0x389b6240a18cbcb6, 0x9207386be38a2896, 0x949d672b3b0bdad8, 0xc2c430c05039016d, 0x4c1d4a93fcba8523} },
	G2 = { .deg = 16,
		.t = (int64_t[]) {0xf963bde9a3dc00e1, 0x27851d1e34fee22e, 0x73358d3fe0e63a5c, 0x94c5fc2eb4507b04, 0xf6fb2776159d1606, 0x4d278668c0f85784, 0x46b5774daaa44e2f, 0x53f89ef2ce058353, 0x29fd05a3a149bfc9, 0x4ee5026fe85a7235, 0x3a22b63827df96da, 0x3231ce84b194fb0d, 0xdaa28854f7613800, 0xd18e117ca4c8e3af, 0x74391bfb64bb1d6c, 0x8611d9c22bae66a6} },
	G3 = { .deg = 16,
		.t = (int64_t[]) {0xff3e0cf31ec25185, 0xa6ec4065dece0a0e, 0xb2a2552c2c72199e, 0xec77b9894cbe646e, 0x5b074f7f180bf4af, 0x4b677a3a60999e5c, 0xe12c7eb9f969f23, 0x3044e71fe87f52d, 0x411ab1cdaf805541, 0xe14a09477c24427, 0x9238a3346cb62356, 0xaa8c5ff77f53439a, 0x1d81839f27ae49d1, 0x55e9180132b97e91, 0x29a6d9689d882144, 0xccde6b13e3bdbd94} },
	G4 = { .deg = 16,
		.t = (int64_t[]) {0x781904639eec10bb, 0x89d66e375f57e439, 0x397413ba6e960813, 0x8f913a7f9ec2cd5, 0xea5bf18e5402d578, 0x945dc870882ffe9, 0x6fe23337b57813c1, 0x81a9dd0121f3108, 0x2b4130fd7d10976d, 0x25f747a11bcd77cc, 0x9592e663701fd5c3, 0xade3c5083e8e1bfe, 0xf984f44aeda499d4, 0xb8142fd13772d767, 0xb37547889d0c300e, 0xfc2cd2176a0e6b98} },
	G5 = { .deg = 16,
		.t = (int64_t[]) {0xd689936a6625f365, 0x1695d6178ecbe213, 0xb37c43c6f9ca7416, 0xccd4313524f9d4d8, 0x525115c88532bdce, 0x11b54f74d6d21061, 0x378abeb0acd01627, 0xad3419ee51efd3c2, 0xd607c354dc1f7cac, 0x8490fbfd8bbf5c7d, 0x97396235df87e361, 0xa87f1d28729ee332, 0xcc0339e0c802ed95, 0xec66ce6c06fd9a9a, 0x408e463fcd3f6b7e, 0xd14327347edc2ede} },
	G6 = { .deg = 16,
		.t = (int64_t[]) {0x8c3c486df4dd38a8, 0x42d4d52d00a067d0, 0xc872c0ceb843ccf, 0xfa487d07f568d32c, 0x697cebaaa4404c60, 0x61e4d73a7f3b3074, 0x7c865fd034c673e0, 0x522aa287d45f587, 0x181b0fa31895a89e, 0x1e06d2b95e5380fd, 0x3d7e2e610864cfe6, 0x35eb9b8c30e018e3, 0xd42fd375e06db69e, 0x1ff91b4fb046aad4, 0x7efc5002797a7d32, 0x3c9541fe9dfd0fad} },
	G7 = { .deg = 16,
		.t = (int64_t[]) {0xa3a821e550e14131, 0x87007deb8b80a576, 0xaaf2a6e20d238e0a, 0x865ee84519d4280, 0x5f64da60f2836599, 0xa2e8ad22674765d2, 0x894b1345ab4b0564, 0xdf12c4e92bb2e3eb, 0x1adfad9f0bd5c44b, 0xb5321b20f0958eaf, 0xd61ee940ce191eff, 0x6175f554e7697ab2, 0x18ca11a3762cab38, 0x4da7f47e4a431d71, 0x3ecaf4902e7f670, 0x1ccd6f7cf540cf2} },
	G8 = { .deg = 16,
		.t = (int64_t[]) {0x520d9668e6c7d838, 0x99e203ae57afe58a, 0x833b7a98f4092abe, 0xdd520fb5f95d8a8, 0x9d5b8744c96f44e4, 0x2b2a50c31906f394, 0xfd8fba3fc33ad773, 0x74c8c54431686be2, 0x47a26431fc5d2bf6, 0x6771b7c7fcab5f04, 0x9a4b982f97a974d, 0x3a7541a1f2e42c2b, 0x81934b8b35b13ae, 0x4f4b7164b8745d89, 0x55dd63d9622429a2, 0xa8bfde1d5fcdce7f} };
static _poly __P__ = { .deg = 9,
		.t = (int64_t[]) {0xffffffffffffff4d, 0xffffffffffffffff, 0xffffffffffffffff, 0xffffffffffffffff, 0xffffffffffffffff, 0xffffffffffffffff, 0xffffffffffffffff, 0xffffffffffffffff, 0xffffffffffffffff, 0xffffffffffffffff, 0xffffffffffffffff, 0xffffffffffffffff, 0xffffffffffffffff, 0xffffffffffffffff, 0xffffffffffffffff, 0xffffffffffffffff} },
	Gi[] = {G1, G2, G3, G4, G5, G6, G7, G8};


static inline void m1_mns128_mod_mult_ext_red_pre(unsigned __int128* restrict Rlo,
	const restrict poly128 A)
{

Rlo[0] = (__int128) ((__int128)A->lo[1] * 3952701881030603232u) + ((__int128) (LOW(A->lo[1] * 4849002066022093373) + LOW(A->hi[1] * 3952701881030603232u)) << 64) + ((__int128)A->lo[2] * 8346547956701114962u) + ((__int128) (LOW(A->lo[2] * 2282655093748211282) + LOW(A->hi[2] * 8346547956701114962u)) << 64) + ((__int128)A->lo[3] * 1556554238745717996u) + ((__int128) (LOW(A->lo[3] * 5354588034092665971) + LOW(A->hi[3] * 1556554238745717996u)) << 64) + ((__int128)A->lo[4] * 14314577483261822476u) + ((__int128) (LOW(A->lo[4] * 146236654148190506) + LOW(A->hi[4] * 14314577483261822476u)) << 64) + ((__int128)A->lo[5] * 15681520038126625682u) + ((__int128) (LOW(A->lo[5] * -3488608465315944561) + LOW(A->hi[5] * 15681520038126625682u)) << 64) + ((__int128)A->lo[6] * 12586170794337773894u) + ((__int128) (LOW(A->lo[6] * 2305112413393992976) + LOW(A->hi[6] * 12586170794337773894u)) << 64) + ((__int128)A->lo[7] * 14764826158592742080u) + ((__int128) (LOW(A->lo[7] * -4755612464495283609) + LOW(A->hi[7] * 14764826158592742080u)) << 64) + ((__int128)A->lo[8] * 7216099598582900282u) + ((__int128) (LOW(A->lo[8] * -731060571949477945) + LOW(A->hi[8] * 7216099598582900282u)) << 64)+ ((__int128) A->lo[0] * 10624667757354428881u) + ((__int128) (LOW(A->lo[0] * 6683901370390835320) + LOW(A->hi[0] * 10624667757354428881u)) << 64);
Rlo[1] = (__int128) ((__int128)A->lo[2] * 3952701881030603232u) + ((__int128) (LOW(A->lo[2] * 4849002066022093373) + LOW(A->hi[2] * 3952701881030603232u)) << 64) + ((__int128)A->lo[3] * 8346547956701114962u) + ((__int128) (LOW(A->lo[3] * 2282655093748211282) + LOW(A->hi[3] * 8346547956701114962u)) << 64) + ((__int128)A->lo[4] * 1556554238745717996u) + ((__int128) (LOW(A->lo[4] * 5354588034092665971) + LOW(A->hi[4] * 1556554238745717996u)) << 64) + ((__int128)A->lo[5] * 14314577483261822476u) + ((__int128) (LOW(A->lo[5] * 146236654148190506) + LOW(A->hi[5] * 14314577483261822476u)) << 64) + ((__int128)A->lo[6] * 15681520038126625682u) + ((__int128) (LOW(A->lo[6] * -3488608465315944561) + LOW(A->hi[6] * 15681520038126625682u)) << 64) + ((__int128)A->lo[7] * 12586170794337773894u) + ((__int128) (LOW(A->lo[7] * 2305112413393992976) + LOW(A->hi[7] * 12586170794337773894u)) << 64) + ((__int128)A->lo[8] * 14764826158592742080u) + ((__int128) (LOW(A->lo[8] * -4755612464495283609) + LOW(A->hi[8] * 14764826158592742080u)) << 64)+ ((__int128) A->lo[0] * 12831421836146225949u) + ((__int128) (LOW(A->lo[0] * -365530285974738973) + LOW(A->hi[0] * 12831421836146225949u)) << 64) + ((__int128) A->lo[1] * 10624667757354428881u) + ((__int128) (LOW(A->lo[1] * 6683901370390835320) + LOW(A->hi[1] * 10624667757354428881u)) << 64);
Rlo[2] = (__int128) ((__int128)A->lo[3] * 3952701881030603232u) + ((__int128) (LOW(A->lo[3] * 4849002066022093373) + LOW(A->hi[3] * 3952701881030603232u)) << 64) + ((__int128)A->lo[4] * 8346547956701114962u) + ((__int128) (LOW(A->lo[4] * 2282655093748211282) + LOW(A->hi[4] * 8346547956701114962u)) << 64) + ((__int128)A->lo[5] * 1556554238745717996u) + ((__int128) (LOW(A->lo[5] * 5354588034092665971) + LOW(A->hi[5] * 1556554238745717996u)) << 64) + ((__int128)A->lo[6] * 14314577483261822476u) + ((__int128) (LOW(A->lo[6] * 146236654148190506) + LOW(A->hi[6] * 14314577483261822476u)) << 64) + ((__int128)A->lo[7] * 15681520038126625682u) + ((__int128) (LOW(A->lo[7] * -3488608465315944561) + LOW(A->hi[7] * 15681520038126625682u)) << 64) + ((__int128)A->lo[8] * 12586170794337773894u) + ((__int128) (LOW(A->lo[8] * 2305112413393992976) + LOW(A->hi[8] * 12586170794337773894u)) << 64)+ ((__int128) A->lo[0] * 16605785116151146848u) + ((__int128) (LOW(A->lo[0] * -2377806232247641805) + LOW(A->hi[0] * 16605785116151146848u)) << 64) + ((__int128) A->lo[1] * 12831421836146225949u) + ((__int128) (LOW(A->lo[1] * -365530285974738973) + LOW(A->hi[1] * 12831421836146225949u)) << 64) + ((__int128) A->lo[2] * 10624667757354428881u) + ((__int128) (LOW(A->lo[2] * 6683901370390835320) + LOW(A->hi[2] * 10624667757354428881u)) << 64);
Rlo[3] = (__int128) ((__int128)A->lo[4] * 3952701881030603232u) + ((__int128) (LOW(A->lo[4] * 4849002066022093373) + LOW(A->hi[4] * 3952701881030603232u)) << 64) + ((__int128)A->lo[5] * 8346547956701114962u) + ((__int128) (LOW(A->lo[5] * 2282655093748211282) + LOW(A->hi[5] * 8346547956701114962u)) << 64) + ((__int128)A->lo[6] * 1556554238745717996u) + ((__int128) (LOW(A->lo[6] * 5354588034092665971) + LOW(A->hi[6] * 1556554238745717996u)) << 64) + ((__int128)A->lo[7] * 14314577483261822476u) + ((__int128) (LOW(A->lo[7] * 146236654148190506) + LOW(A->hi[7] * 14314577483261822476u)) << 64) + ((__int128)A->lo[8] * 15681520038126625682u) + ((__int128) (LOW(A->lo[8] * -3488608465315944561) + LOW(A->hi[8] * 15681520038126625682u)) << 64)+ ((__int128) A->lo[0] * 6293085397168886947u) + ((__int128) (LOW(A->lo[0] * 1152556206696996488) + LOW(A->hi[0] * 6293085397168886947u)) << 64) + ((__int128) A->lo[1] * 16605785116151146848u) + ((__int128) (LOW(A->lo[1] * -2377806232247641805) + LOW(A->hi[1] * 16605785116151146848u)) << 64) + ((__int128) A->lo[2] * 12831421836146225949u) + ((__int128) (LOW(A->lo[2] * -365530285974738973) + LOW(A->hi[2] * 12831421836146225949u)) << 64) + ((__int128) A->lo[3] * 10624667757354428881u) + ((__int128) (LOW(A->lo[3] * 6683901370390835320) + LOW(A->hi[3] * 10624667757354428881u)) << 64);
Rlo[4] = (__int128) ((__int128)A->lo[5] * 3952701881030603232u) + ((__int128) (LOW(A->lo[5] * 4849002066022093373) + LOW(A->hi[5] * 3952701881030603232u)) << 64) + ((__int128)A->lo[6] * 8346547956701114962u) + ((__int128) (LOW(A->lo[6] * 2282655093748211282) + LOW(A->hi[6] * 8346547956701114962u)) << 64) + ((__int128)A->lo[7] * 1556554238745717996u) + ((__int128) (LOW(A->lo[7] * 5354588034092665971) + LOW(A->hi[7] * 1556554238745717996u)) << 64) + ((__int128)A->lo[8] * 14314577483261822476u) + ((__int128) (LOW(A->lo[8] * 146236654148190506) + LOW(A->hi[8] * 14314577483261822476u)) << 64)+ ((__int128) A->lo[0] * 17064132055918088649u) + ((__int128) (LOW(A->lo[0] * 7479067804196803527) + LOW(A->hi[0] * 17064132055918088649u)) << 64) + ((__int128) A->lo[1] * 6293085397168886947u) + ((__int128) (LOW(A->lo[1] * 1152556206696996488) + LOW(A->hi[1] * 6293085397168886947u)) << 64) + ((__int128) A->lo[2] * 16605785116151146848u) + ((__int128) (LOW(A->lo[2] * -2377806232247641805) + LOW(A->hi[2] * 16605785116151146848u)) << 64) + ((__int128) A->lo[3] * 12831421836146225949u) + ((__int128) (LOW(A->lo[3] * -365530285974738973) + LOW(A->hi[3] * 12831421836146225949u)) << 64) + ((__int128) A->lo[4] * 10624667757354428881u) + ((__int128) (LOW(A->lo[4] * 6683901370390835320) + LOW(A->hi[4] * 10624667757354428881u)) << 64);
Rlo[5] = (__int128) ((__int128)A->lo[6] * 3952701881030603232u) + ((__int128) (LOW(A->lo[6] * 4849002066022093373) + LOW(A->hi[6] * 3952701881030603232u)) << 64) + ((__int128)A->lo[7] * 8346547956701114962u) + ((__int128) (LOW(A->lo[7] * 2282655093748211282) + LOW(A->hi[7] * 8346547956701114962u)) << 64) + ((__int128)A->lo[8] * 1556554238745717996u) + ((__int128) (LOW(A->lo[8] * 5354588034092665971) + LOW(A->hi[8] * 1556554238745717996u)) << 64)+ ((__int128) A->lo[0] * 7157288741630911238u) + ((__int128) (LOW(A->lo[0] * 73118327074095253) + LOW(A->hi[0] * 7157288741630911238u)) << 64) + ((__int128) A->lo[1] * 17064132055918088649u) + ((__int128) (LOW(A->lo[1] * 7479067804196803527) + LOW(A->hi[1] * 17064132055918088649u)) << 64) + ((__int128) A->lo[2] * 6293085397168886947u) + ((__int128) (LOW(A->lo[2] * 1152556206696996488) + LOW(A->hi[2] * 6293085397168886947u)) << 64) + ((__int128) A->lo[3] * 16605785116151146848u) + ((__int128) (LOW(A->lo[3] * -2377806232247641805) + LOW(A->hi[3] * 16605785116151146848u)) << 64) + ((__int128) A->lo[4] * 12831421836146225949u) + ((__int128) (LOW(A->lo[4] * -365530285974738973) + LOW(A->hi[4] * 12831421836146225949u)) << 64) + ((__int128) A->lo[5] * 10624667757354428881u) + ((__int128) (LOW(A->lo[5] * 6683901370390835320) + LOW(A->hi[5] * 10624667757354428881u)) << 64);
Rlo[6] = (__int128) ((__int128)A->lo[7] * 3952701881030603232u) + ((__int128) (LOW(A->lo[7] * 4849002066022093373) + LOW(A->hi[7] * 3952701881030603232u)) << 64) + ((__int128)A->lo[8] * 8346547956701114962u) + ((__int128) (LOW(A->lo[8] * 2282655093748211282) + LOW(A->hi[8] * 8346547956701114962u)) << 64)+ ((__int128) A->lo[0] * 10001649156227634806u) + ((__int128) (LOW(A->lo[0] * -6546078019808442823) + LOW(A->hi[0] * 10001649156227634806u)) << 64) + ((__int128) A->lo[1] * 7157288741630911238u) + ((__int128) (LOW(A->lo[1] * 73118327074095253) + LOW(A->hi[1] * 7157288741630911238u)) << 64) + ((__int128) A->lo[2] * 17064132055918088649u) + ((__int128) (LOW(A->lo[2] * 7479067804196803527) + LOW(A->hi[2] * 17064132055918088649u)) << 64) + ((__int128) A->lo[3] * 6293085397168886947u) + ((__int128) (LOW(A->lo[3] * 1152556206696996488) + LOW(A->hi[3] * 6293085397168886947u)) << 64) + ((__int128) A->lo[4] * 16605785116151146848u) + ((__int128) (LOW(A->lo[4] * -2377806232247641805) + LOW(A->hi[4] * 16605785116151146848u)) << 64) + ((__int128) A->lo[5] * 12831421836146225949u) + ((__int128) (LOW(A->lo[5] * -365530285974738973) + LOW(A->hi[5] * 12831421836146225949u)) << 64) + ((__int128) A->lo[6] * 10624667757354428881u) + ((__int128) (LOW(A->lo[6] * 6683901370390835320) + LOW(A->hi[6] * 10624667757354428881u)) << 64);
Rlo[7] = (__int128) ((__int128)A->lo[8] * 3952701881030603232u) + ((__int128) (LOW(A->lo[8] * 4849002066022093373) + LOW(A->hi[8] * 3952701881030603232u)) << 64)+ ((__int128) A->lo[0] * 4173273978350557481u) + ((__int128) (LOW(A->lo[0] * -8082044489980670167) + LOW(A->hi[0] * 4173273978350557481u)) << 64) + ((__int128) A->lo[1] * 10001649156227634806u) + ((__int128) (LOW(A->lo[1] * -6546078019808442823) + LOW(A->hi[1] * 10001649156227634806u)) << 64) + ((__int128) A->lo[2] * 7157288741630911238u) + ((__int128) (LOW(A->lo[2] * 73118327074095253) + LOW(A->hi[2] * 7157288741630911238u)) << 64) + ((__int128) A->lo[3] * 17064132055918088649u) + ((__int128) (LOW(A->lo[3] * 7479067804196803527) + LOW(A->hi[3] * 17064132055918088649u)) << 64) + ((__int128) A->lo[4] * 6293085397168886947u) + ((__int128) (LOW(A->lo[4] * 1152556206696996488) + LOW(A->hi[4] * 6293085397168886947u)) << 64) + ((__int128) A->lo[5] * 16605785116151146848u) + ((__int128) (LOW(A->lo[5] * -2377806232247641805) + LOW(A->hi[5] * 16605785116151146848u)) << 64) + ((__int128) A->lo[6] * 12831421836146225949u) + ((__int128) (LOW(A->lo[6] * -365530285974738973) + LOW(A->hi[6] * 12831421836146225949u)) << 64) + ((__int128) A->lo[7] * 10624667757354428881u) + ((__int128) (LOW(A->lo[7] * 6683901370390835320) + LOW(A->hi[7] * 10624667757354428881u)) << 64);
Rlo[8] = (__int128) ((__int128) A->lo[0] * 11199722977370077424u) + ((__int128) (LOW(A->lo[0] * 2424501033011046686) + LOW(A->hi[0] * 11199722977370077424u)) << 64) + ((__int128) A->lo[1] * 4173273978350557481u) + ((__int128) (LOW(A->lo[1] * -8082044489980670167) + LOW(A->hi[1] * 4173273978350557481u)) << 64) + ((__int128) A->lo[2] * 10001649156227634806u) + ((__int128) (LOW(A->lo[2] * -6546078019808442823) + LOW(A->hi[2] * 10001649156227634806u)) << 64) + ((__int128) A->lo[3] * 7157288741630911238u) + ((__int128) (LOW(A->lo[3] * 73118327074095253) + LOW(A->hi[3] * 7157288741630911238u)) << 64) + ((__int128) A->lo[4] * 17064132055918088649u) + ((__int128) (LOW(A->lo[4] * 7479067804196803527) + LOW(A->hi[4] * 17064132055918088649u)) << 64) + ((__int128) A->lo[5] * 6293085397168886947u) + ((__int128) (LOW(A->lo[5] * 1152556206696996488) + LOW(A->hi[5] * 6293085397168886947u)) << 64) + ((__int128) A->lo[6] * 16605785116151146848u) + ((__int128) (LOW(A->lo[6] * -2377806232247641805) + LOW(A->hi[6] * 16605785116151146848u)) << 64) + ((__int128) A->lo[7] * 12831421836146225949u) + ((__int128) (LOW(A->lo[7] * -365530285974738973) + LOW(A->hi[7] * 12831421836146225949u)) << 64) + ((__int128) A->lo[8] * 10624667757354428881u) + ((__int128) (LOW(A->lo[8] * 6683901370390835320) + LOW(A->hi[8] * 10624667757354428881u)) << 64);
}


static inline void m_mns128_mod_mult_ext_red_pre(__int128* restrict Rhi, 
	unsigned __int128* restrict Rlo, const restrict poly128 A)
{
	unsigned __int128 A0B0, A1B0, A0B1, tmplo;
	__int128 A1B1, aux2, aux3;

	A1B1 = (__int128) LOW(A->hi[1]) * -430865449014011;
	A1B0 = (__int128) LOW(A->hi[1]) * 3275580999337553038u;
	A0B1 = (__int128) (A->lo[1]) * -430865449014011;
	A0B0 = (__int128) (A->lo[1]) * 3275580999337553038u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[0] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[0], tmplo, Rlo + 0);

	A1B1 = (__int128) LOW(A->hi[2]) * 6465850030592;
	A1B0 = (__int128) LOW(A->hi[2]) * 14915479092013505496u;
	A0B1 = (__int128) (A->lo[2]) * 6465850030592;
	A0B0 = (__int128) (A->lo[2]) * 14915479092013505496u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[0] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[0], tmplo, Rlo + 0);

	A1B1 = (__int128) LOW(A->hi[3]) * 1096664795556270;
	A1B0 = (__int128) LOW(A->hi[3]) * 6872007517219181162u;
	A0B1 = (__int128) (A->lo[3]) * 1096664795556270;
	A0B0 = (__int128) (A->lo[3]) * 6872007517219181162u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[0] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[0], tmplo, Rlo + 0);

	A1B1 = (__int128) LOW(A->hi[4]) * 333062044477985;
	A1B0 = (__int128) LOW(A->hi[4]) * 12830662078982818012u;
	A0B1 = (__int128) (A->lo[4]) * 333062044477985;
	A0B0 = (__int128) (A->lo[4]) * 12830662078982818012u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[0] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[0], tmplo, Rlo + 0);

	A1B1 = (__int128) LOW(A->hi[5]) * 437210225679452;
	A1B0 = (__int128) LOW(A->hi[5]) * 9436976559827427536u;
	A0B1 = (__int128) (A->lo[5]) * 437210225679452;
	A0B0 = (__int128) (A->lo[5]) * 9436976559827427536u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[0] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[0], tmplo, Rlo + 0);

	A1B1 = (__int128) LOW(A->hi[6]) * 781940166695576;
	A1B0 = (__int128) LOW(A->hi[6]) * 14211510614106607588u;
	A0B1 = (__int128) (A->lo[6]) * 781940166695576;
	A0B0 = (__int128) (A->lo[6]) * 14211510614106607588u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[0] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[0], tmplo, Rlo + 0);

	A1B1 = (__int128) LOW(A->hi[7]) * -279595021894509;
	A1B0 = (__int128) LOW(A->hi[7]) * 5741933173626267050u;
	A0B1 = (__int128) (A->lo[7]) * -279595021894509;
	A0B0 = (__int128) (A->lo[7]) * 5741933173626267050u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[0] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[0], tmplo, Rlo + 0);

	A1B1 = (__int128) LOW(A->hi[8]) * -28914624540467;
	A1B0 = (__int128) LOW(A->hi[8]) * 14495057623921599634u;
	A0B1 = (__int128) (A->lo[8]) * -28914624540467;
	A0B0 = (__int128) (A->lo[8]) * 14495057623921599634u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[0] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[0], tmplo, Rlo + 0);

	A1B1 = (__int128) LOW(A->hi[0]) * -287932041058164;
	A1B0 = (__int128) LOW(A->hi[0]) * 7208710283951223821u;
	A0B1 = (__int128) (A->lo[0]) * -287932041058164;
	A0B0 = (__int128) (A->lo[0]) * 7208710283951223821u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[0] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[0], tmplo, Rlo + 0);

	A1B1 = (__int128) LOW(A->hi[2]) * -430865449014011;
	A1B0 = (__int128) LOW(A->hi[2]) * 3275580999337553038u;
	A0B1 = (__int128) (A->lo[2]) * -430865449014011;
	A0B0 = (__int128) (A->lo[2]) * 3275580999337553038u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[1] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[1], tmplo, Rlo + 1);

	A1B1 = (__int128) LOW(A->hi[3]) * 6465850030592;
	A1B0 = (__int128) LOW(A->hi[3]) * 14915479092013505496u;
	A0B1 = (__int128) (A->lo[3]) * 6465850030592;
	A0B0 = (__int128) (A->lo[3]) * 14915479092013505496u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[1] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[1], tmplo, Rlo + 1);

	A1B1 = (__int128) LOW(A->hi[4]) * 1096664795556270;
	A1B0 = (__int128) LOW(A->hi[4]) * 6872007517219181162u;
	A0B1 = (__int128) (A->lo[4]) * 1096664795556270;
	A0B0 = (__int128) (A->lo[4]) * 6872007517219181162u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[1] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[1], tmplo, Rlo + 1);

	A1B1 = (__int128) LOW(A->hi[5]) * 333062044477985;
	A1B0 = (__int128) LOW(A->hi[5]) * 12830662078982818012u;
	A0B1 = (__int128) (A->lo[5]) * 333062044477985;
	A0B0 = (__int128) (A->lo[5]) * 12830662078982818012u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[1] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[1], tmplo, Rlo + 1);

	A1B1 = (__int128) LOW(A->hi[6]) * 437210225679452;
	A1B0 = (__int128) LOW(A->hi[6]) * 9436976559827427536u;
	A0B1 = (__int128) (A->lo[6]) * 437210225679452;
	A0B0 = (__int128) (A->lo[6]) * 9436976559827427536u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[1] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[1], tmplo, Rlo + 1);

	A1B1 = (__int128) LOW(A->hi[7]) * 781940166695576;
	A1B0 = (__int128) LOW(A->hi[7]) * 14211510614106607588u;
	A0B1 = (__int128) (A->lo[7]) * 781940166695576;
	A0B0 = (__int128) (A->lo[7]) * 14211510614106607588u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[1] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[1], tmplo, Rlo + 1);

	A1B1 = (__int128) LOW(A->hi[8]) * -279595021894509;
	A1B0 = (__int128) LOW(A->hi[8]) * 5741933173626267050u;
	A0B1 = (__int128) (A->lo[8]) * -279595021894509;
	A0B0 = (__int128) (A->lo[8]) * 5741933173626267050u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[1] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[1], tmplo, Rlo + 1);

	A1B1 = (__int128) LOW(A->hi[0]) * -14457312270234;
	A1B0 = (__int128) LOW(A->hi[0]) * 16470900848815575625u;
	A0B1 = (__int128) (A->lo[0]) * -14457312270234;
	A0B0 = (__int128) (A->lo[0]) * 16470900848815575625u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[1] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[1], tmplo, Rlo + 1);

	A1B1 = (__int128) LOW(A->hi[1]) * -287932041058164;
	A1B0 = (__int128) LOW(A->hi[1]) * 7208710283951223821u;
	A0B1 = (__int128) (A->lo[1]) * -287932041058164;
	A0B0 = (__int128) (A->lo[1]) * 7208710283951223821u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[1] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[1], tmplo, Rlo + 1);

	A1B1 = (__int128) LOW(A->hi[3]) * -430865449014011;
	A1B0 = (__int128) LOW(A->hi[3]) * 3275580999337553038u;
	A0B1 = (__int128) (A->lo[3]) * -430865449014011;
	A0B0 = (__int128) (A->lo[3]) * 3275580999337553038u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[2] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[2], tmplo, Rlo + 2);

	A1B1 = (__int128) LOW(A->hi[4]) * 6465850030592;
	A1B0 = (__int128) LOW(A->hi[4]) * 14915479092013505496u;
	A0B1 = (__int128) (A->lo[4]) * 6465850030592;
	A0B0 = (__int128) (A->lo[4]) * 14915479092013505496u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[2] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[2], tmplo, Rlo + 2);

	A1B1 = (__int128) LOW(A->hi[5]) * 1096664795556270;
	A1B0 = (__int128) LOW(A->hi[5]) * 6872007517219181162u;
	A0B1 = (__int128) (A->lo[5]) * 1096664795556270;
	A0B0 = (__int128) (A->lo[5]) * 6872007517219181162u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[2] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[2], tmplo, Rlo + 2);

	A1B1 = (__int128) LOW(A->hi[6]) * 333062044477985;
	A1B0 = (__int128) LOW(A->hi[6]) * 12830662078982818012u;
	A0B1 = (__int128) (A->lo[6]) * 333062044477985;
	A0B0 = (__int128) (A->lo[6]) * 12830662078982818012u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[2] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[2], tmplo, Rlo + 2);

	A1B1 = (__int128) LOW(A->hi[7]) * 437210225679452;
	A1B0 = (__int128) LOW(A->hi[7]) * 9436976559827427536u;
	A0B1 = (__int128) (A->lo[7]) * 437210225679452;
	A0B0 = (__int128) (A->lo[7]) * 9436976559827427536u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[2] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[2], tmplo, Rlo + 2);

	A1B1 = (__int128) LOW(A->hi[8]) * 781940166695576;
	A1B0 = (__int128) LOW(A->hi[8]) * 14211510614106607588u;
	A0B1 = (__int128) (A->lo[8]) * 781940166695576;
	A0B0 = (__int128) (A->lo[8]) * 14211510614106607588u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[2] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[2], tmplo, Rlo + 2);

	A1B1 = (__int128) LOW(A->hi[0]) * -139797510947255;
	A1B0 = (__int128) LOW(A->hi[0]) * 12094338623667909333u;
	A0B1 = (__int128) (A->lo[0]) * -139797510947255;
	A0B0 = (__int128) (A->lo[0]) * 12094338623667909333u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[2] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[2], tmplo, Rlo + 2);

	A1B1 = (__int128) LOW(A->hi[1]) * -14457312270234;
	A1B0 = (__int128) LOW(A->hi[1]) * 16470900848815575625u;
	A0B1 = (__int128) (A->lo[1]) * -14457312270234;
	A0B0 = (__int128) (A->lo[1]) * 16470900848815575625u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[2] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[2], tmplo, Rlo + 2);

	A1B1 = (__int128) LOW(A->hi[2]) * -287932041058164;
	A1B0 = (__int128) LOW(A->hi[2]) * 7208710283951223821u;
	A0B1 = (__int128) (A->lo[2]) * -287932041058164;
	A0B0 = (__int128) (A->lo[2]) * 7208710283951223821u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[2] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[2], tmplo, Rlo + 2);

	A1B1 = (__int128) LOW(A->hi[4]) * -430865449014011;
	A1B0 = (__int128) LOW(A->hi[4]) * 3275580999337553038u;
	A0B1 = (__int128) (A->lo[4]) * -430865449014011;
	A0B0 = (__int128) (A->lo[4]) * 3275580999337553038u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[3] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[3], tmplo, Rlo + 3);

	A1B1 = (__int128) LOW(A->hi[5]) * 6465850030592;
	A1B0 = (__int128) LOW(A->hi[5]) * 14915479092013505496u;
	A0B1 = (__int128) (A->lo[5]) * 6465850030592;
	A0B0 = (__int128) (A->lo[5]) * 14915479092013505496u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[3] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[3], tmplo, Rlo + 3);

	A1B1 = (__int128) LOW(A->hi[6]) * 1096664795556270;
	A1B0 = (__int128) LOW(A->hi[6]) * 6872007517219181162u;
	A0B1 = (__int128) (A->lo[6]) * 1096664795556270;
	A0B0 = (__int128) (A->lo[6]) * 6872007517219181162u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[3] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[3], tmplo, Rlo + 3);

	A1B1 = (__int128) LOW(A->hi[7]) * 333062044477985;
	A1B0 = (__int128) LOW(A->hi[7]) * 12830662078982818012u;
	A0B1 = (__int128) (A->lo[7]) * 333062044477985;
	A0B0 = (__int128) (A->lo[7]) * 12830662078982818012u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[3] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[3], tmplo, Rlo + 3);

	A1B1 = (__int128) LOW(A->hi[8]) * 437210225679452;
	A1B0 = (__int128) LOW(A->hi[8]) * 9436976559827427536u;
	A0B1 = (__int128) (A->lo[8]) * 437210225679452;
	A0B0 = (__int128) (A->lo[8]) * 9436976559827427536u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[3] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[3], tmplo, Rlo + 3);

	A1B1 = (__int128) LOW(A->hi[0]) * 390970083347788;
	A1B0 = (__int128) LOW(A->hi[0]) * 7105755307053303794u;
	A0B1 = (__int128) (A->lo[0]) * 390970083347788;
	A0B0 = (__int128) (A->lo[0]) * 7105755307053303794u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[3] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[3], tmplo, Rlo + 3);

	A1B1 = (__int128) LOW(A->hi[1]) * -139797510947255;
	A1B0 = (__int128) LOW(A->hi[1]) * 12094338623667909333u;
	A0B1 = (__int128) (A->lo[1]) * -139797510947255;
	A0B0 = (__int128) (A->lo[1]) * 12094338623667909333u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[3] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[3], tmplo, Rlo + 3);

	A1B1 = (__int128) LOW(A->hi[2]) * -14457312270234;
	A1B0 = (__int128) LOW(A->hi[2]) * 16470900848815575625u;
	A0B1 = (__int128) (A->lo[2]) * -14457312270234;
	A0B0 = (__int128) (A->lo[2]) * 16470900848815575625u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[3] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[3], tmplo, Rlo + 3);

	A1B1 = (__int128) LOW(A->hi[3]) * -287932041058164;
	A1B0 = (__int128) LOW(A->hi[3]) * 7208710283951223821u;
	A0B1 = (__int128) (A->lo[3]) * -287932041058164;
	A0B0 = (__int128) (A->lo[3]) * 7208710283951223821u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[3] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[3], tmplo, Rlo + 3);

	A1B1 = (__int128) LOW(A->hi[5]) * -430865449014011;
	A1B0 = (__int128) LOW(A->hi[5]) * 3275580999337553038u;
	A0B1 = (__int128) (A->lo[5]) * -430865449014011;
	A0B0 = (__int128) (A->lo[5]) * 3275580999337553038u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[4] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[4], tmplo, Rlo + 4);

	A1B1 = (__int128) LOW(A->hi[6]) * 6465850030592;
	A1B0 = (__int128) LOW(A->hi[6]) * 14915479092013505496u;
	A0B1 = (__int128) (A->lo[6]) * 6465850030592;
	A0B0 = (__int128) (A->lo[6]) * 14915479092013505496u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[4] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[4], tmplo, Rlo + 4);

	A1B1 = (__int128) LOW(A->hi[7]) * 1096664795556270;
	A1B0 = (__int128) LOW(A->hi[7]) * 6872007517219181162u;
	A0B1 = (__int128) (A->lo[7]) * 1096664795556270;
	A0B0 = (__int128) (A->lo[7]) * 6872007517219181162u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[4] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[4], tmplo, Rlo + 4);

	A1B1 = (__int128) LOW(A->hi[8]) * 333062044477985;
	A1B0 = (__int128) LOW(A->hi[8]) * 12830662078982818012u;
	A0B1 = (__int128) (A->lo[8]) * 333062044477985;
	A0B0 = (__int128) (A->lo[8]) * 12830662078982818012u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[4] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[4], tmplo, Rlo + 4);

	A1B1 = (__int128) LOW(A->hi[0]) * 218605112839726;
	A1B0 = (__int128) LOW(A->hi[0]) * 4718488279913713768u;
	A0B1 = (__int128) (A->lo[0]) * 218605112839726;
	A0B0 = (__int128) (A->lo[0]) * 4718488279913713768u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[4] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[4], tmplo, Rlo + 4);

	A1B1 = (__int128) LOW(A->hi[1]) * 390970083347788;
	A1B0 = (__int128) LOW(A->hi[1]) * 7105755307053303794u;
	A0B1 = (__int128) (A->lo[1]) * 390970083347788;
	A0B0 = (__int128) (A->lo[1]) * 7105755307053303794u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[4] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[4], tmplo, Rlo + 4);

	A1B1 = (__int128) LOW(A->hi[2]) * -139797510947255;
	A1B0 = (__int128) LOW(A->hi[2]) * 12094338623667909333u;
	A0B1 = (__int128) (A->lo[2]) * -139797510947255;
	A0B0 = (__int128) (A->lo[2]) * 12094338623667909333u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[4] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[4], tmplo, Rlo + 4);

	A1B1 = (__int128) LOW(A->hi[3]) * -14457312270234;
	A1B0 = (__int128) LOW(A->hi[3]) * 16470900848815575625u;
	A0B1 = (__int128) (A->lo[3]) * -14457312270234;
	A0B0 = (__int128) (A->lo[3]) * 16470900848815575625u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[4] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[4], tmplo, Rlo + 4);

	A1B1 = (__int128) LOW(A->hi[4]) * -287932041058164;
	A1B0 = (__int128) LOW(A->hi[4]) * 7208710283951223821u;
	A0B1 = (__int128) (A->lo[4]) * -287932041058164;
	A0B0 = (__int128) (A->lo[4]) * 7208710283951223821u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[4] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[4], tmplo, Rlo + 4);

	A1B1 = (__int128) LOW(A->hi[6]) * -430865449014011;
	A1B0 = (__int128) LOW(A->hi[6]) * 3275580999337553038u;
	A0B1 = (__int128) (A->lo[6]) * -430865449014011;
	A0B0 = (__int128) (A->lo[6]) * 3275580999337553038u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[5] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[5], tmplo, Rlo + 5);

	A1B1 = (__int128) LOW(A->hi[7]) * 6465850030592;
	A1B0 = (__int128) LOW(A->hi[7]) * 14915479092013505496u;
	A0B1 = (__int128) (A->lo[7]) * 6465850030592;
	A0B0 = (__int128) (A->lo[7]) * 14915479092013505496u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[5] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[5], tmplo, Rlo + 5);

	A1B1 = (__int128) LOW(A->hi[8]) * 1096664795556270;
	A1B0 = (__int128) LOW(A->hi[8]) * 6872007517219181162u;
	A0B1 = (__int128) (A->lo[8]) * 1096664795556270;
	A0B0 = (__int128) (A->lo[8]) * 6872007517219181162u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[5] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[5], tmplo, Rlo + 5);

	A1B1 = (__int128) LOW(A->hi[0]) * 166531022238992;
	A1B0 = (__int128) LOW(A->hi[0]) * 15638703076346184814u;
	A0B1 = (__int128) (A->lo[0]) * 166531022238992;
	A0B0 = (__int128) (A->lo[0]) * 15638703076346184814u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[5] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[5], tmplo, Rlo + 5);

	A1B1 = (__int128) LOW(A->hi[1]) * 218605112839726;
	A1B0 = (__int128) LOW(A->hi[1]) * 4718488279913713768u;
	A0B1 = (__int128) (A->lo[1]) * 218605112839726;
	A0B0 = (__int128) (A->lo[1]) * 4718488279913713768u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[5] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[5], tmplo, Rlo + 5);

	A1B1 = (__int128) LOW(A->hi[2]) * 390970083347788;
	A1B0 = (__int128) LOW(A->hi[2]) * 7105755307053303794u;
	A0B1 = (__int128) (A->lo[2]) * 390970083347788;
	A0B0 = (__int128) (A->lo[2]) * 7105755307053303794u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[5] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[5], tmplo, Rlo + 5);

	A1B1 = (__int128) LOW(A->hi[3]) * -139797510947255;
	A1B0 = (__int128) LOW(A->hi[3]) * 12094338623667909333u;
	A0B1 = (__int128) (A->lo[3]) * -139797510947255;
	A0B0 = (__int128) (A->lo[3]) * 12094338623667909333u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[5] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[5], tmplo, Rlo + 5);

	A1B1 = (__int128) LOW(A->hi[4]) * -14457312270234;
	A1B0 = (__int128) LOW(A->hi[4]) * 16470900848815575625u;
	A0B1 = (__int128) (A->lo[4]) * -14457312270234;
	A0B0 = (__int128) (A->lo[4]) * 16470900848815575625u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[5] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[5], tmplo, Rlo + 5);

	A1B1 = (__int128) LOW(A->hi[5]) * -287932041058164;
	A1B0 = (__int128) LOW(A->hi[5]) * 7208710283951223821u;
	A0B1 = (__int128) (A->lo[5]) * -287932041058164;
	A0B0 = (__int128) (A->lo[5]) * 7208710283951223821u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[5] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[5], tmplo, Rlo + 5);

	A1B1 = (__int128) LOW(A->hi[7]) * -430865449014011;
	A1B0 = (__int128) LOW(A->hi[7]) * 3275580999337553038u;
	A0B1 = (__int128) (A->lo[7]) * -430865449014011;
	A0B0 = (__int128) (A->lo[7]) * 3275580999337553038u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[6] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[6], tmplo, Rlo + 6);

	A1B1 = (__int128) LOW(A->hi[8]) * 6465850030592;
	A1B0 = (__int128) LOW(A->hi[8]) * 14915479092013505496u;
	A0B1 = (__int128) (A->lo[8]) * 6465850030592;
	A0B0 = (__int128) (A->lo[8]) * 14915479092013505496u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[6] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[6], tmplo, Rlo + 6);

	A1B1 = (__int128) LOW(A->hi[0]) * 548332397778135;
	A1B0 = (__int128) LOW(A->hi[0]) * 3436003758609590581u;
	A0B1 = (__int128) (A->lo[0]) * 548332397778135;
	A0B0 = (__int128) (A->lo[0]) * 3436003758609590581u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[6] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[6], tmplo, Rlo + 6);

	A1B1 = (__int128) LOW(A->hi[1]) * 166531022238992;
	A1B0 = (__int128) LOW(A->hi[1]) * 15638703076346184814u;
	A0B1 = (__int128) (A->lo[1]) * 166531022238992;
	A0B0 = (__int128) (A->lo[1]) * 15638703076346184814u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[6] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[6], tmplo, Rlo + 6);

	A1B1 = (__int128) LOW(A->hi[2]) * 218605112839726;
	A1B0 = (__int128) LOW(A->hi[2]) * 4718488279913713768u;
	A0B1 = (__int128) (A->lo[2]) * 218605112839726;
	A0B0 = (__int128) (A->lo[2]) * 4718488279913713768u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[6] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[6], tmplo, Rlo + 6);

	A1B1 = (__int128) LOW(A->hi[3]) * 390970083347788;
	A1B0 = (__int128) LOW(A->hi[3]) * 7105755307053303794u;
	A0B1 = (__int128) (A->lo[3]) * 390970083347788;
	A0B0 = (__int128) (A->lo[3]) * 7105755307053303794u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[6] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[6], tmplo, Rlo + 6);

	A1B1 = (__int128) LOW(A->hi[4]) * -139797510947255;
	A1B0 = (__int128) LOW(A->hi[4]) * 12094338623667909333u;
	A0B1 = (__int128) (A->lo[4]) * -139797510947255;
	A0B0 = (__int128) (A->lo[4]) * 12094338623667909333u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[6] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[6], tmplo, Rlo + 6);

	A1B1 = (__int128) LOW(A->hi[5]) * -14457312270234;
	A1B0 = (__int128) LOW(A->hi[5]) * 16470900848815575625u;
	A0B1 = (__int128) (A->lo[5]) * -14457312270234;
	A0B0 = (__int128) (A->lo[5]) * 16470900848815575625u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[6] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[6], tmplo, Rlo + 6);

	A1B1 = (__int128) LOW(A->hi[6]) * -287932041058164;
	A1B0 = (__int128) LOW(A->hi[6]) * 7208710283951223821u;
	A0B1 = (__int128) (A->lo[6]) * -287932041058164;
	A0B0 = (__int128) (A->lo[6]) * 7208710283951223821u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[6] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[6], tmplo, Rlo + 6);

	A1B1 = (__int128) LOW(A->hi[8]) * -430865449014011;
	A1B0 = (__int128) LOW(A->hi[8]) * 3275580999337553038u;
	A0B1 = (__int128) (A->lo[8]) * -430865449014011;
	A0B0 = (__int128) (A->lo[8]) * 3275580999337553038u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[7] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[7], tmplo, Rlo + 7);

	A1B1 = (__int128) LOW(A->hi[0]) * 3232925015296;
	A1B0 = (__int128) LOW(A->hi[0]) * 7457739546006752748u;
	A0B1 = (__int128) (A->lo[0]) * 3232925015296;
	A0B0 = (__int128) (A->lo[0]) * 7457739546006752748u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[7] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[7], tmplo, Rlo + 7);

	A1B1 = (__int128) LOW(A->hi[1]) * 548332397778135;
	A1B0 = (__int128) LOW(A->hi[1]) * 3436003758609590581u;
	A0B1 = (__int128) (A->lo[1]) * 548332397778135;
	A0B0 = (__int128) (A->lo[1]) * 3436003758609590581u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[7] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[7], tmplo, Rlo + 7);

	A1B1 = (__int128) LOW(A->hi[2]) * 166531022238992;
	A1B0 = (__int128) LOW(A->hi[2]) * 15638703076346184814u;
	A0B1 = (__int128) (A->lo[2]) * 166531022238992;
	A0B0 = (__int128) (A->lo[2]) * 15638703076346184814u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[7] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[7], tmplo, Rlo + 7);

	A1B1 = (__int128) LOW(A->hi[3]) * 218605112839726;
	A1B0 = (__int128) LOW(A->hi[3]) * 4718488279913713768u;
	A0B1 = (__int128) (A->lo[3]) * 218605112839726;
	A0B0 = (__int128) (A->lo[3]) * 4718488279913713768u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[7] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[7], tmplo, Rlo + 7);

	A1B1 = (__int128) LOW(A->hi[4]) * 390970083347788;
	A1B0 = (__int128) LOW(A->hi[4]) * 7105755307053303794u;
	A0B1 = (__int128) (A->lo[4]) * 390970083347788;
	A0B0 = (__int128) (A->lo[4]) * 7105755307053303794u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[7] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[7], tmplo, Rlo + 7);

	A1B1 = (__int128) LOW(A->hi[5]) * -139797510947255;
	A1B0 = (__int128) LOW(A->hi[5]) * 12094338623667909333u;
	A0B1 = (__int128) (A->lo[5]) * -139797510947255;
	A0B0 = (__int128) (A->lo[5]) * 12094338623667909333u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[7] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[7], tmplo, Rlo + 7);

	A1B1 = (__int128) LOW(A->hi[6]) * -14457312270234;
	A1B0 = (__int128) LOW(A->hi[6]) * 16470900848815575625u;
	A0B1 = (__int128) (A->lo[6]) * -14457312270234;
	A0B0 = (__int128) (A->lo[6]) * 16470900848815575625u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[7] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[7], tmplo, Rlo + 7);

	A1B1 = (__int128) LOW(A->hi[7]) * -287932041058164;
	A1B0 = (__int128) LOW(A->hi[7]) * 7208710283951223821u;
	A0B1 = (__int128) (A->lo[7]) * -287932041058164;
	A0B0 = (__int128) (A->lo[7]) * 7208710283951223821u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[7] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[7], tmplo, Rlo + 7);

	A1B1 = (__int128) LOW(A->hi[0]) * -215432724507006;
	A1B0 = (__int128) LOW(A->hi[0]) * 10861162536523552327u;
	A0B1 = (__int128) (A->lo[0]) * -215432724507006;
	A0B0 = (__int128) (A->lo[0]) * 10861162536523552327u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[8] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[8], tmplo, Rlo + 8);

	A1B1 = (__int128) LOW(A->hi[1]) * 3232925015296;
	A1B0 = (__int128) LOW(A->hi[1]) * 7457739546006752748u;
	A0B1 = (__int128) (A->lo[1]) * 3232925015296;
	A0B0 = (__int128) (A->lo[1]) * 7457739546006752748u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[8] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[8], tmplo, Rlo + 8);

	A1B1 = (__int128) LOW(A->hi[2]) * 548332397778135;
	A1B0 = (__int128) LOW(A->hi[2]) * 3436003758609590581u;
	A0B1 = (__int128) (A->lo[2]) * 548332397778135;
	A0B0 = (__int128) (A->lo[2]) * 3436003758609590581u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[8] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[8], tmplo, Rlo + 8);

	A1B1 = (__int128) LOW(A->hi[3]) * 166531022238992;
	A1B0 = (__int128) LOW(A->hi[3]) * 15638703076346184814u;
	A0B1 = (__int128) (A->lo[3]) * 166531022238992;
	A0B0 = (__int128) (A->lo[3]) * 15638703076346184814u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[8] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[8], tmplo, Rlo + 8);

	A1B1 = (__int128) LOW(A->hi[4]) * 218605112839726;
	A1B0 = (__int128) LOW(A->hi[4]) * 4718488279913713768u;
	A0B1 = (__int128) (A->lo[4]) * 218605112839726;
	A0B0 = (__int128) (A->lo[4]) * 4718488279913713768u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[8] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[8], tmplo, Rlo + 8);

	A1B1 = (__int128) LOW(A->hi[5]) * 390970083347788;
	A1B0 = (__int128) LOW(A->hi[5]) * 7105755307053303794u;
	A0B1 = (__int128) (A->lo[5]) * 390970083347788;
	A0B0 = (__int128) (A->lo[5]) * 7105755307053303794u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[8] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[8], tmplo, Rlo + 8);

	A1B1 = (__int128) LOW(A->hi[6]) * -139797510947255;
	A1B0 = (__int128) LOW(A->hi[6]) * 12094338623667909333u;
	A0B1 = (__int128) (A->lo[6]) * -139797510947255;
	A0B0 = (__int128) (A->lo[6]) * 12094338623667909333u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[8] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[8], tmplo, Rlo + 8);

	A1B1 = (__int128) LOW(A->hi[7]) * -14457312270234;
	A1B0 = (__int128) LOW(A->hi[7]) * 16470900848815575625u;
	A0B1 = (__int128) (A->lo[7]) * -14457312270234;
	A0B0 = (__int128) (A->lo[7]) * 16470900848815575625u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[8] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[8], tmplo, Rlo + 8);

	A1B1 = (__int128) LOW(A->hi[8]) * -287932041058164;
	A1B0 = (__int128) LOW(A->hi[8]) * 7208710283951223821u;
	A0B1 = (__int128) (A->lo[8]) * -287932041058164;
	A0B0 = (__int128) (A->lo[8]) * 7208710283951223821u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[8] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[8], tmplo, Rlo + 8);

}


static inline void mns128_mod_mult_ext_red_pre(__int128* restrict Rhi,
	unsigned __int128* restrict Rlo, const restrict poly128 A,
	const restrict poly128 B)
{
	unsigned __int128 A0B0, tmplo;
	__int128 A1B1, A1B0, A0B1, aux2, aux3;

	A1B1 = (__int128) A->hi[1] * B->hi[8] * LAMBDA;
	A1B0 = (__int128) A->hi[1] * B->lo[8] * LAMBDA;
	A0B1 = (__int128) A->lo[1] * B->hi[8] * LAMBDA;
	A0B0 = (__int128) A->lo[1] * B->lo[8] * LAMBDA;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[0] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[0], tmplo, Rlo + 0);

	A1B1 = (__int128) A->hi[2] * B->hi[7] * LAMBDA;
	A1B0 = (__int128) A->hi[2] * B->lo[7] * LAMBDA;
	A0B1 = (__int128) A->lo[2] * B->hi[7] * LAMBDA;
	A0B0 = (__int128) A->lo[2] * B->lo[7] * LAMBDA;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[0] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[0], tmplo, Rlo + 0);

	A1B1 = (__int128) A->hi[3] * B->hi[6] * LAMBDA;
	A1B0 = (__int128) A->hi[3] * B->lo[6] * LAMBDA;
	A0B1 = (__int128) A->lo[3] * B->hi[6] * LAMBDA;
	A0B0 = (__int128) A->lo[3] * B->lo[6] * LAMBDA;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[0] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[0], tmplo, Rlo + 0);

	A1B1 = (__int128) A->hi[4] * B->hi[5] * LAMBDA;
	A1B0 = (__int128) A->hi[4] * B->lo[5] * LAMBDA;
	A0B1 = (__int128) A->lo[4] * B->hi[5] * LAMBDA;
	A0B0 = (__int128) A->lo[4] * B->lo[5] * LAMBDA;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[0] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[0], tmplo, Rlo + 0);

	A1B1 = (__int128) A->hi[5] * B->hi[4] * LAMBDA;
	A1B0 = (__int128) A->hi[5] * B->lo[4] * LAMBDA;
	A0B1 = (__int128) A->lo[5] * B->hi[4] * LAMBDA;
	A0B0 = (__int128) A->lo[5] * B->lo[4] * LAMBDA;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[0] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[0], tmplo, Rlo + 0);

	A1B1 = (__int128) A->hi[6] * B->hi[3] * LAMBDA;
	A1B0 = (__int128) A->hi[6] * B->lo[3] * LAMBDA;
	A0B1 = (__int128) A->lo[6] * B->hi[3] * LAMBDA;
	A0B0 = (__int128) A->lo[6] * B->lo[3] * LAMBDA;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[0] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[0], tmplo, Rlo + 0);

	A1B1 = (__int128) A->hi[7] * B->hi[2] * LAMBDA;
	A1B0 = (__int128) A->hi[7] * B->lo[2] * LAMBDA;
	A0B1 = (__int128) A->lo[7] * B->hi[2] * LAMBDA;
	A0B0 = (__int128) A->lo[7] * B->lo[2] * LAMBDA;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[0] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[0], tmplo, Rlo + 0);

	A1B1 = (__int128) A->hi[8] * B->hi[1] * LAMBDA;
	A1B0 = (__int128) A->hi[8] * B->lo[1] * LAMBDA;
	A0B1 = (__int128) A->lo[8] * B->hi[1] * LAMBDA;
	A0B0 = (__int128) A->lo[8] * B->lo[1] * LAMBDA;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[0] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[0], tmplo, Rlo + 0);

	A1B1 = (__int128) A->hi[0] * B->hi[0];
	A1B0 = (__int128) A->hi[0] * B->lo[0];
	A0B1 = (__int128) A->lo[0] * B->hi[0];
	A0B0 = (__int128) A->lo[0] * B->lo[0];
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[0] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[0], tmplo, Rlo + 0);

	A1B1 = (__int128) A->hi[2] * B->hi[8] * LAMBDA;
	A1B0 = (__int128) A->hi[2] * B->lo[8] * LAMBDA;
	A0B1 = (__int128) A->lo[2] * B->hi[8] * LAMBDA;
	A0B0 = (__int128) A->lo[2] * B->lo[8] * LAMBDA;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[1] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[1], tmplo, Rlo + 1);

	A1B1 = (__int128) A->hi[3] * B->hi[7] * LAMBDA;
	A1B0 = (__int128) A->hi[3] * B->lo[7] * LAMBDA;
	A0B1 = (__int128) A->lo[3] * B->hi[7] * LAMBDA;
	A0B0 = (__int128) A->lo[3] * B->lo[7] * LAMBDA;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[1] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[1], tmplo, Rlo + 1);

	A1B1 = (__int128) A->hi[4] * B->hi[6] * LAMBDA;
	A1B0 = (__int128) A->hi[4] * B->lo[6] * LAMBDA;
	A0B1 = (__int128) A->lo[4] * B->hi[6] * LAMBDA;
	A0B0 = (__int128) A->lo[4] * B->lo[6] * LAMBDA;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[1] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[1], tmplo, Rlo + 1);

	A1B1 = (__int128) A->hi[5] * B->hi[5] * LAMBDA;
	A1B0 = (__int128) A->hi[5] * B->lo[5] * LAMBDA;
	A0B1 = (__int128) A->lo[5] * B->hi[5] * LAMBDA;
	A0B0 = (__int128) A->lo[5] * B->lo[5] * LAMBDA;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[1] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[1], tmplo, Rlo + 1);

	A1B1 = (__int128) A->hi[6] * B->hi[4] * LAMBDA;
	A1B0 = (__int128) A->hi[6] * B->lo[4] * LAMBDA;
	A0B1 = (__int128) A->lo[6] * B->hi[4] * LAMBDA;
	A0B0 = (__int128) A->lo[6] * B->lo[4] * LAMBDA;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[1] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[1], tmplo, Rlo + 1);

	A1B1 = (__int128) A->hi[7] * B->hi[3] * LAMBDA;
	A1B0 = (__int128) A->hi[7] * B->lo[3] * LAMBDA;
	A0B1 = (__int128) A->lo[7] * B->hi[3] * LAMBDA;
	A0B0 = (__int128) A->lo[7] * B->lo[3] * LAMBDA;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[1] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[1], tmplo, Rlo + 1);

	A1B1 = (__int128) A->hi[8] * B->hi[2] * LAMBDA;
	A1B0 = (__int128) A->hi[8] * B->lo[2] * LAMBDA;
	A0B1 = (__int128) A->lo[8] * B->hi[2] * LAMBDA;
	A0B0 = (__int128) A->lo[8] * B->lo[2] * LAMBDA;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[1] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[1], tmplo, Rlo + 1);

	A1B1 = (__int128) A->hi[0] * B->hi[1];
	A1B0 = (__int128) A->hi[0] * B->lo[1];
	A0B1 = (__int128) A->lo[0] * B->hi[1];
	A0B0 = (__int128) A->lo[0] * B->lo[1];
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[1] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[1], tmplo, Rlo + 1);

	A1B1 = (__int128) A->hi[1] * B->hi[0];
	A1B0 = (__int128) A->hi[1] * B->lo[0];
	A0B1 = (__int128) A->lo[1] * B->hi[0];
	A0B0 = (__int128) A->lo[1] * B->lo[0];
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[1] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[1], tmplo, Rlo + 1);

	A1B1 = (__int128) A->hi[3] * B->hi[8] * LAMBDA;
	A1B0 = (__int128) A->hi[3] * B->lo[8] * LAMBDA;
	A0B1 = (__int128) A->lo[3] * B->hi[8] * LAMBDA;
	A0B0 = (__int128) A->lo[3] * B->lo[8] * LAMBDA;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[2] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[2], tmplo, Rlo + 2);

	A1B1 = (__int128) A->hi[4] * B->hi[7] * LAMBDA;
	A1B0 = (__int128) A->hi[4] * B->lo[7] * LAMBDA;
	A0B1 = (__int128) A->lo[4] * B->hi[7] * LAMBDA;
	A0B0 = (__int128) A->lo[4] * B->lo[7] * LAMBDA;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[2] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[2], tmplo, Rlo + 2);

	A1B1 = (__int128) A->hi[5] * B->hi[6] * LAMBDA;
	A1B0 = (__int128) A->hi[5] * B->lo[6] * LAMBDA;
	A0B1 = (__int128) A->lo[5] * B->hi[6] * LAMBDA;
	A0B0 = (__int128) A->lo[5] * B->lo[6] * LAMBDA;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[2] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[2], tmplo, Rlo + 2);

	A1B1 = (__int128) A->hi[6] * B->hi[5] * LAMBDA;
	A1B0 = (__int128) A->hi[6] * B->lo[5] * LAMBDA;
	A0B1 = (__int128) A->lo[6] * B->hi[5] * LAMBDA;
	A0B0 = (__int128) A->lo[6] * B->lo[5] * LAMBDA;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[2] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[2], tmplo, Rlo + 2);

	A1B1 = (__int128) A->hi[7] * B->hi[4] * LAMBDA;
	A1B0 = (__int128) A->hi[7] * B->lo[4] * LAMBDA;
	A0B1 = (__int128) A->lo[7] * B->hi[4] * LAMBDA;
	A0B0 = (__int128) A->lo[7] * B->lo[4] * LAMBDA;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[2] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[2], tmplo, Rlo + 2);

	A1B1 = (__int128) A->hi[8] * B->hi[3] * LAMBDA;
	A1B0 = (__int128) A->hi[8] * B->lo[3] * LAMBDA;
	A0B1 = (__int128) A->lo[8] * B->hi[3] * LAMBDA;
	A0B0 = (__int128) A->lo[8] * B->lo[3] * LAMBDA;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[2] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[2], tmplo, Rlo + 2);

	A1B1 = (__int128) A->hi[0] * B->hi[2];
	A1B0 = (__int128) A->hi[0] * B->lo[2];
	A0B1 = (__int128) A->lo[0] * B->hi[2];
	A0B0 = (__int128) A->lo[0] * B->lo[2];
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[2] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[2], tmplo, Rlo + 2);

	A1B1 = (__int128) A->hi[1] * B->hi[1];
	A1B0 = (__int128) A->hi[1] * B->lo[1];
	A0B1 = (__int128) A->lo[1] * B->hi[1];
	A0B0 = (__int128) A->lo[1] * B->lo[1];
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[2] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[2], tmplo, Rlo + 2);

	A1B1 = (__int128) A->hi[2] * B->hi[0];
	A1B0 = (__int128) A->hi[2] * B->lo[0];
	A0B1 = (__int128) A->lo[2] * B->hi[0];
	A0B0 = (__int128) A->lo[2] * B->lo[0];
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[2] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[2], tmplo, Rlo + 2);

	A1B1 = (__int128) A->hi[4] * B->hi[8] * LAMBDA;
	A1B0 = (__int128) A->hi[4] * B->lo[8] * LAMBDA;
	A0B1 = (__int128) A->lo[4] * B->hi[8] * LAMBDA;
	A0B0 = (__int128) A->lo[4] * B->lo[8] * LAMBDA;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[3] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[3], tmplo, Rlo + 3);

	A1B1 = (__int128) A->hi[5] * B->hi[7] * LAMBDA;
	A1B0 = (__int128) A->hi[5] * B->lo[7] * LAMBDA;
	A0B1 = (__int128) A->lo[5] * B->hi[7] * LAMBDA;
	A0B0 = (__int128) A->lo[5] * B->lo[7] * LAMBDA;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[3] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[3], tmplo, Rlo + 3);

	A1B1 = (__int128) A->hi[6] * B->hi[6] * LAMBDA;
	A1B0 = (__int128) A->hi[6] * B->lo[6] * LAMBDA;
	A0B1 = (__int128) A->lo[6] * B->hi[6] * LAMBDA;
	A0B0 = (__int128) A->lo[6] * B->lo[6] * LAMBDA;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[3] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[3], tmplo, Rlo + 3);

	A1B1 = (__int128) A->hi[7] * B->hi[5] * LAMBDA;
	A1B0 = (__int128) A->hi[7] * B->lo[5] * LAMBDA;
	A0B1 = (__int128) A->lo[7] * B->hi[5] * LAMBDA;
	A0B0 = (__int128) A->lo[7] * B->lo[5] * LAMBDA;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[3] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[3], tmplo, Rlo + 3);

	A1B1 = (__int128) A->hi[8] * B->hi[4] * LAMBDA;
	A1B0 = (__int128) A->hi[8] * B->lo[4] * LAMBDA;
	A0B1 = (__int128) A->lo[8] * B->hi[4] * LAMBDA;
	A0B0 = (__int128) A->lo[8] * B->lo[4] * LAMBDA;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[3] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[3], tmplo, Rlo + 3);

	A1B1 = (__int128) A->hi[0] * B->hi[3];
	A1B0 = (__int128) A->hi[0] * B->lo[3];
	A0B1 = (__int128) A->lo[0] * B->hi[3];
	A0B0 = (__int128) A->lo[0] * B->lo[3];
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[3] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[3], tmplo, Rlo + 3);

	A1B1 = (__int128) A->hi[1] * B->hi[2];
	A1B0 = (__int128) A->hi[1] * B->lo[2];
	A0B1 = (__int128) A->lo[1] * B->hi[2];
	A0B0 = (__int128) A->lo[1] * B->lo[2];
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[3] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[3], tmplo, Rlo + 3);

	A1B1 = (__int128) A->hi[2] * B->hi[1];
	A1B0 = (__int128) A->hi[2] * B->lo[1];
	A0B1 = (__int128) A->lo[2] * B->hi[1];
	A0B0 = (__int128) A->lo[2] * B->lo[1];
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[3] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[3], tmplo, Rlo + 3);

	A1B1 = (__int128) A->hi[3] * B->hi[0];
	A1B0 = (__int128) A->hi[3] * B->lo[0];
	A0B1 = (__int128) A->lo[3] * B->hi[0];
	A0B0 = (__int128) A->lo[3] * B->lo[0];
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[3] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[3], tmplo, Rlo + 3);

	A1B1 = (__int128) A->hi[5] * B->hi[8] * LAMBDA;
	A1B0 = (__int128) A->hi[5] * B->lo[8] * LAMBDA;
	A0B1 = (__int128) A->lo[5] * B->hi[8] * LAMBDA;
	A0B0 = (__int128) A->lo[5] * B->lo[8] * LAMBDA;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[4] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[4], tmplo, Rlo + 4);

	A1B1 = (__int128) A->hi[6] * B->hi[7] * LAMBDA;
	A1B0 = (__int128) A->hi[6] * B->lo[7] * LAMBDA;
	A0B1 = (__int128) A->lo[6] * B->hi[7] * LAMBDA;
	A0B0 = (__int128) A->lo[6] * B->lo[7] * LAMBDA;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[4] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[4], tmplo, Rlo + 4);

	A1B1 = (__int128) A->hi[7] * B->hi[6] * LAMBDA;
	A1B0 = (__int128) A->hi[7] * B->lo[6] * LAMBDA;
	A0B1 = (__int128) A->lo[7] * B->hi[6] * LAMBDA;
	A0B0 = (__int128) A->lo[7] * B->lo[6] * LAMBDA;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[4] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[4], tmplo, Rlo + 4);

	A1B1 = (__int128) A->hi[8] * B->hi[5] * LAMBDA;
	A1B0 = (__int128) A->hi[8] * B->lo[5] * LAMBDA;
	A0B1 = (__int128) A->lo[8] * B->hi[5] * LAMBDA;
	A0B0 = (__int128) A->lo[8] * B->lo[5] * LAMBDA;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[4] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[4], tmplo, Rlo + 4);

	A1B1 = (__int128) A->hi[0] * B->hi[4];
	A1B0 = (__int128) A->hi[0] * B->lo[4];
	A0B1 = (__int128) A->lo[0] * B->hi[4];
	A0B0 = (__int128) A->lo[0] * B->lo[4];
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[4] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[4], tmplo, Rlo + 4);

	A1B1 = (__int128) A->hi[1] * B->hi[3];
	A1B0 = (__int128) A->hi[1] * B->lo[3];
	A0B1 = (__int128) A->lo[1] * B->hi[3];
	A0B0 = (__int128) A->lo[1] * B->lo[3];
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[4] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[4], tmplo, Rlo + 4);

	A1B1 = (__int128) A->hi[2] * B->hi[2];
	A1B0 = (__int128) A->hi[2] * B->lo[2];
	A0B1 = (__int128) A->lo[2] * B->hi[2];
	A0B0 = (__int128) A->lo[2] * B->lo[2];
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[4] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[4], tmplo, Rlo + 4);

	A1B1 = (__int128) A->hi[3] * B->hi[1];
	A1B0 = (__int128) A->hi[3] * B->lo[1];
	A0B1 = (__int128) A->lo[3] * B->hi[1];
	A0B0 = (__int128) A->lo[3] * B->lo[1];
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[4] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[4], tmplo, Rlo + 4);

	A1B1 = (__int128) A->hi[4] * B->hi[0];
	A1B0 = (__int128) A->hi[4] * B->lo[0];
	A0B1 = (__int128) A->lo[4] * B->hi[0];
	A0B0 = (__int128) A->lo[4] * B->lo[0];
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[4] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[4], tmplo, Rlo + 4);

	A1B1 = (__int128) A->hi[6] * B->hi[8] * LAMBDA;
	A1B0 = (__int128) A->hi[6] * B->lo[8] * LAMBDA;
	A0B1 = (__int128) A->lo[6] * B->hi[8] * LAMBDA;
	A0B0 = (__int128) A->lo[6] * B->lo[8] * LAMBDA;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[5] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[5], tmplo, Rlo + 5);

	A1B1 = (__int128) A->hi[7] * B->hi[7] * LAMBDA;
	A1B0 = (__int128) A->hi[7] * B->lo[7] * LAMBDA;
	A0B1 = (__int128) A->lo[7] * B->hi[7] * LAMBDA;
	A0B0 = (__int128) A->lo[7] * B->lo[7] * LAMBDA;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[5] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[5], tmplo, Rlo + 5);

	A1B1 = (__int128) A->hi[8] * B->hi[6] * LAMBDA;
	A1B0 = (__int128) A->hi[8] * B->lo[6] * LAMBDA;
	A0B1 = (__int128) A->lo[8] * B->hi[6] * LAMBDA;
	A0B0 = (__int128) A->lo[8] * B->lo[6] * LAMBDA;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[5] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[5], tmplo, Rlo + 5);

	A1B1 = (__int128) A->hi[0] * B->hi[5];
	A1B0 = (__int128) A->hi[0] * B->lo[5];
	A0B1 = (__int128) A->lo[0] * B->hi[5];
	A0B0 = (__int128) A->lo[0] * B->lo[5];
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[5] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[5], tmplo, Rlo + 5);

	A1B1 = (__int128) A->hi[1] * B->hi[4];
	A1B0 = (__int128) A->hi[1] * B->lo[4];
	A0B1 = (__int128) A->lo[1] * B->hi[4];
	A0B0 = (__int128) A->lo[1] * B->lo[4];
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[5] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[5], tmplo, Rlo + 5);

	A1B1 = (__int128) A->hi[2] * B->hi[3];
	A1B0 = (__int128) A->hi[2] * B->lo[3];
	A0B1 = (__int128) A->lo[2] * B->hi[3];
	A0B0 = (__int128) A->lo[2] * B->lo[3];
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[5] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[5], tmplo, Rlo + 5);

	A1B1 = (__int128) A->hi[3] * B->hi[2];
	A1B0 = (__int128) A->hi[3] * B->lo[2];
	A0B1 = (__int128) A->lo[3] * B->hi[2];
	A0B0 = (__int128) A->lo[3] * B->lo[2];
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[5] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[5], tmplo, Rlo + 5);

	A1B1 = (__int128) A->hi[4] * B->hi[1];
	A1B0 = (__int128) A->hi[4] * B->lo[1];
	A0B1 = (__int128) A->lo[4] * B->hi[1];
	A0B0 = (__int128) A->lo[4] * B->lo[1];
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[5] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[5], tmplo, Rlo + 5);

	A1B1 = (__int128) A->hi[5] * B->hi[0];
	A1B0 = (__int128) A->hi[5] * B->lo[0];
	A0B1 = (__int128) A->lo[5] * B->hi[0];
	A0B0 = (__int128) A->lo[5] * B->lo[0];
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[5] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[5], tmplo, Rlo + 5);

	A1B1 = (__int128) A->hi[7] * B->hi[8] * LAMBDA;
	A1B0 = (__int128) A->hi[7] * B->lo[8] * LAMBDA;
	A0B1 = (__int128) A->lo[7] * B->hi[8] * LAMBDA;
	A0B0 = (__int128) A->lo[7] * B->lo[8] * LAMBDA;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[6] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[6], tmplo, Rlo + 6);

	A1B1 = (__int128) A->hi[8] * B->hi[7] * LAMBDA;
	A1B0 = (__int128) A->hi[8] * B->lo[7] * LAMBDA;
	A0B1 = (__int128) A->lo[8] * B->hi[7] * LAMBDA;
	A0B0 = (__int128) A->lo[8] * B->lo[7] * LAMBDA;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[6] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[6], tmplo, Rlo + 6);

	A1B1 = (__int128) A->hi[0] * B->hi[6];
	A1B0 = (__int128) A->hi[0] * B->lo[6];
	A0B1 = (__int128) A->lo[0] * B->hi[6];
	A0B0 = (__int128) A->lo[0] * B->lo[6];
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[6] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[6], tmplo, Rlo + 6);

	A1B1 = (__int128) A->hi[1] * B->hi[5];
	A1B0 = (__int128) A->hi[1] * B->lo[5];
	A0B1 = (__int128) A->lo[1] * B->hi[5];
	A0B0 = (__int128) A->lo[1] * B->lo[5];
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[6] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[6], tmplo, Rlo + 6);

	A1B1 = (__int128) A->hi[2] * B->hi[4];
	A1B0 = (__int128) A->hi[2] * B->lo[4];
	A0B1 = (__int128) A->lo[2] * B->hi[4];
	A0B0 = (__int128) A->lo[2] * B->lo[4];
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[6] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[6], tmplo, Rlo + 6);

	A1B1 = (__int128) A->hi[3] * B->hi[3];
	A1B0 = (__int128) A->hi[3] * B->lo[3];
	A0B1 = (__int128) A->lo[3] * B->hi[3];
	A0B0 = (__int128) A->lo[3] * B->lo[3];
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[6] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[6], tmplo, Rlo + 6);

	A1B1 = (__int128) A->hi[4] * B->hi[2];
	A1B0 = (__int128) A->hi[4] * B->lo[2];
	A0B1 = (__int128) A->lo[4] * B->hi[2];
	A0B0 = (__int128) A->lo[4] * B->lo[2];
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[6] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[6], tmplo, Rlo + 6);

	A1B1 = (__int128) A->hi[5] * B->hi[1];
	A1B0 = (__int128) A->hi[5] * B->lo[1];
	A0B1 = (__int128) A->lo[5] * B->hi[1];
	A0B0 = (__int128) A->lo[5] * B->lo[1];
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[6] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[6], tmplo, Rlo + 6);

	A1B1 = (__int128) A->hi[6] * B->hi[0];
	A1B0 = (__int128) A->hi[6] * B->lo[0];
	A0B1 = (__int128) A->lo[6] * B->hi[0];
	A0B0 = (__int128) A->lo[6] * B->lo[0];
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[6] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[6], tmplo, Rlo + 6);

	A1B1 = (__int128) A->hi[8] * B->hi[8] * LAMBDA;
	A1B0 = (__int128) A->hi[8] * B->lo[8] * LAMBDA;
	A0B1 = (__int128) A->lo[8] * B->hi[8] * LAMBDA;
	A0B0 = (__int128) A->lo[8] * B->lo[8] * LAMBDA;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[7] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[7], tmplo, Rlo + 7);

	A1B1 = (__int128) A->hi[0] * B->hi[7];
	A1B0 = (__int128) A->hi[0] * B->lo[7];
	A0B1 = (__int128) A->lo[0] * B->hi[7];
	A0B0 = (__int128) A->lo[0] * B->lo[7];
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[7] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[7], tmplo, Rlo + 7);

	A1B1 = (__int128) A->hi[1] * B->hi[6];
	A1B0 = (__int128) A->hi[1] * B->lo[6];
	A0B1 = (__int128) A->lo[1] * B->hi[6];
	A0B0 = (__int128) A->lo[1] * B->lo[6];
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[7] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[7], tmplo, Rlo + 7);

	A1B1 = (__int128) A->hi[2] * B->hi[5];
	A1B0 = (__int128) A->hi[2] * B->lo[5];
	A0B1 = (__int128) A->lo[2] * B->hi[5];
	A0B0 = (__int128) A->lo[2] * B->lo[5];
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[7] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[7], tmplo, Rlo + 7);

	A1B1 = (__int128) A->hi[3] * B->hi[4];
	A1B0 = (__int128) A->hi[3] * B->lo[4];
	A0B1 = (__int128) A->lo[3] * B->hi[4];
	A0B0 = (__int128) A->lo[3] * B->lo[4];
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[7] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[7], tmplo, Rlo + 7);

	A1B1 = (__int128) A->hi[4] * B->hi[3];
	A1B0 = (__int128) A->hi[4] * B->lo[3];
	A0B1 = (__int128) A->lo[4] * B->hi[3];
	A0B0 = (__int128) A->lo[4] * B->lo[3];
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[7] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[7], tmplo, Rlo + 7);

	A1B1 = (__int128) A->hi[5] * B->hi[2];
	A1B0 = (__int128) A->hi[5] * B->lo[2];
	A0B1 = (__int128) A->lo[5] * B->hi[2];
	A0B0 = (__int128) A->lo[5] * B->lo[2];
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[7] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[7], tmplo, Rlo + 7);

	A1B1 = (__int128) A->hi[6] * B->hi[1];
	A1B0 = (__int128) A->hi[6] * B->lo[1];
	A0B1 = (__int128) A->lo[6] * B->hi[1];
	A0B0 = (__int128) A->lo[6] * B->lo[1];
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[7] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[7], tmplo, Rlo + 7);

	A1B1 = (__int128) A->hi[7] * B->hi[0];
	A1B0 = (__int128) A->hi[7] * B->lo[0];
	A0B1 = (__int128) A->lo[7] * B->hi[0];
	A0B0 = (__int128) A->lo[7] * B->lo[0];
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[7] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[7], tmplo, Rlo + 7);

	A1B1 = (__int128) A->hi[0] * B->hi[8];
	A1B0 = (__int128) A->hi[0] * B->lo[8];
	A0B1 = (__int128) A->lo[0] * B->hi[8];
	A0B0 = (__int128) A->lo[0] * B->lo[8];
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[8] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[8], tmplo, Rlo + 8);

	A1B1 = (__int128) A->hi[1] * B->hi[7];
	A1B0 = (__int128) A->hi[1] * B->lo[7];
	A0B1 = (__int128) A->lo[1] * B->hi[7];
	A0B0 = (__int128) A->lo[1] * B->lo[7];
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[8] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[8], tmplo, Rlo + 8);

	A1B1 = (__int128) A->hi[2] * B->hi[6];
	A1B0 = (__int128) A->hi[2] * B->lo[6];
	A0B1 = (__int128) A->lo[2] * B->hi[6];
	A0B0 = (__int128) A->lo[2] * B->lo[6];
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[8] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[8], tmplo, Rlo + 8);

	A1B1 = (__int128) A->hi[3] * B->hi[5];
	A1B0 = (__int128) A->hi[3] * B->lo[5];
	A0B1 = (__int128) A->lo[3] * B->hi[5];
	A0B0 = (__int128) A->lo[3] * B->lo[5];
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[8] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[8], tmplo, Rlo + 8);

	A1B1 = (__int128) A->hi[4] * B->hi[4];
	A1B0 = (__int128) A->hi[4] * B->lo[4];
	A0B1 = (__int128) A->lo[4] * B->hi[4];
	A0B0 = (__int128) A->lo[4] * B->lo[4];
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[8] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[8], tmplo, Rlo + 8);

	A1B1 = (__int128) A->hi[5] * B->hi[3];
	A1B0 = (__int128) A->hi[5] * B->lo[3];
	A0B1 = (__int128) A->lo[5] * B->hi[3];
	A0B0 = (__int128) A->lo[5] * B->lo[3];
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[8] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[8], tmplo, Rlo + 8);

	A1B1 = (__int128) A->hi[6] * B->hi[2];
	A1B0 = (__int128) A->hi[6] * B->lo[2];
	A0B1 = (__int128) A->lo[6] * B->hi[2];
	A0B0 = (__int128) A->lo[6] * B->lo[2];
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[8] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[8], tmplo, Rlo + 8);

	A1B1 = (__int128) A->hi[7] * B->hi[1];
	A1B0 = (__int128) A->hi[7] * B->lo[1];
	A0B1 = (__int128) A->lo[7] * B->hi[1];
	A0B0 = (__int128) A->lo[7] * B->lo[1];
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[8] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[8], tmplo, Rlo + 8);

	A1B1 = (__int128) A->hi[8] * B->hi[0];
	A1B0 = (__int128) A->hi[8] * B->lo[0];
	A0B1 = (__int128) A->lo[8] * B->hi[0];
	A0B0 = (__int128) A->lo[8] * B->lo[0];
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[8] += (__int128) aux2 + A1B1 +
		__builtin_add_overflow(Rlo[8], tmplo, Rlo + 8);

}
#endif
