#ifndef PMNS_PARAMS128_H_INCLUDED
#define PMNS_PARAMS128_H_INCLUDED

#define RHO 117
#define N 9
#define LAMBDA 2

static inline _Bool add_overflow(unsigned __int128* restrict a, const unsigned __int128 b)
{
	//return __builtin_add_overflow(*a, b, a);
	const unsigned __int128 tmp = *a;
	*a += b;
	return *a < tmp;
}

// Various values you can get from precalc
#define M_or_B_is_B

static const uint64_t Blo[N][N] = {
{4743697114769812689u, 6140808384109540399u, 4257226721193157107u, 5105878456580433281u, 17927343406928437047u, 14495017652728727760u, 16401538977196443310u, 6764034142057599649u, 1577679708526859665u}, {15116405981831292657u, 4552470686393447040u, 2860115451853429397u, 6989460119496816573u, 17078691671541160873u, 1673552702380723994u, 1387120657686600981u, 4857512817589884099u, 11215184543665703326u}, {16858406375993458257u, 17049632804369823906u, 1883581662916383292u, 17598092338322275442u, 5625279123361547850u, 3432325754199709287u, 16540222749241836066u, 9637504835138843661u, 5186354433530739984u}, {10865043834904462639u, 183331260952958943u, 17955877369994780341u, 5759165378324029358u, 702731927734073512u, 3460859717266052581u, 7804370474837137664u, 12385441859386025479u, 1883180008739192916u}, {14463119060087696580u, 3330338091878258959u, 13894273387316104576u, 15586628621856122219u, 11457283954212735043u, 1368052402168390743u, 16773191371328827622u, 17059623416022950635u, 13589231256119667517u}, {11284298447621400483u, 8274133780484219620u, 8424182995767971086u, 1284673660987403047u, 9792235397936361829u, 18057865032316230669u, 8405114740249760848u, 13200352214726346570u, 15636674270293609138u}, {10928805643566536965u, 2590910054420243019u, 10205892338894539473u, 16671203709007377294u, 14413674054097219145u, 1091610969127394459u, 13502489050725843349u, 13050762333820342710u, 15195511662801967957u}, {12122604428647052274u, 14680384056231165784u, 7581700238805088977u, 18263412812756592673u, 490866703714771275u, 12687578695385522258u, 17744012145975478104u, 14985884356443499035u, 10642373598872413952u}, {8731718438529783418u, 14463119060087696580u, 3330338091878258959u, 13894273387316104576u, 15586628621856122219u, 11457283954212735043u, 1368052402168390743u, 16773191371328827622u, 17059623416022950635u}
		},
	B1lo[N][N] = {
{10369192340073623204u, 13090768244064579776u, 1574170116454949910u, 1375469437279241677u, 12616658132301652406u, 986082676361884283u, 6808408173056858057u, 4783338036117456653u, 17369516423708995397u}, {15558875114515238264u, 1574170116454949910u, 4546866843378649430u, 7841080540897121189u, 5355975829644971840u, 1375469437279241677u, 12922660364293263300u, 17460661397347667333u, 12616658132301652406u}, {13067558152786103900u, 4546866843378649430u, 4011684187501216641u, 7885635823057414276u, 16872573957254601706u, 7841080540897121189u, 8910547746184751972u, 17071274636430309939u, 5355975829644971840u}, {14717852026921469993u, 4011684187501216641u, 11998090947498473117u, 306002231991610894u, 13899877230330902186u, 7885635823057414276u, 12172144447414755333u, 10605663532812430427u, 16872573957254601706u}, {4700162879507827098u, 11998090947498473117u, 10431343402564128936u, 3554571916539780132u, 14435059886208334975u, 306002231991610894u, 12892067564888871543u, 10561108250652137340u, 13899877230330902186u}, {3468267197434753975u, 10431343402564128936u, 10560841620320118065u, 13746314563869705243u, 6448653126211078499u, 3554571916539780132u, 4868383813973421669u, 18140741841717940722u, 14435059886208334975u}, {6334675797880940242u, 10560841620320118065u, 2154455300001112438u, 17438934408267520973u, 8015400671145422680u, 13746314563869705243u, 8420818478934847065u, 14892172157169771484u, 6448653126211078499u}, {1062197551855992997u, 2154455300001112438u, 11660171882815798420u, 8880068001474638310u, 7885902453389433551u, 17438934408267520973u, 10766339545703906034u, 4700429509839846373u, 8015400671145422680u}, {17836335766618937439u, 11660171882815798420u, 7734792414419607936u, 1972165352723768566u, 16292288773708439178u, 8880068001474638310u, 5121319461474124313u, 1007809665442030643u, 7885902453389433551u}
		};
static const int64_t Bhi[N][N] = {
{394395127514747, -132485698494123, 31359202904179, 8529594364401, -90128891022605, -253175179270470, -406921713207023, 304362058777759, 433938170403980}, {135242904262305, 340995514799090, 558240028913049, -155315307033901, -67299282482827, -154516693883464, -243875424959157, 458108592714312, -277345601580802}, {473481213293212, 526880826008869, -163844901398302, 22829608539777, 98658485387005, 163046288247865, 153746533936552, -711283771984782, -129576111626221}, {-402389110170495, 295980637016188, 392885185171200, -410918704534896, 386109528038792, 646060364441670, -3996991327874, 81747469261032, 212122194037690}, {554691203161602, -135242904262306, -340995514799091, -558240028913050, 155315307033900, 67299282482826, 154516693883463, 243875424959156, -458108592714313}, {330888665671813, 381342376764007, -227351363241236, 536657683797908, -160052080758410, 691174377681371, 83823344200747, 233065784967059, 361168945781548}, {93355722403566, -783731486934502, 523332000257423, -143772498626708, -250866623776487, -305064849642580, 562237020240922, -237062776294934, -279421476520517}, {-163494938522066, -424244388075381, 402389110170494, -295980637016189, -392885185171201, 410918704534895, -386109528038793, -646060364441671, 3996991327873}, {-916217185428625, 554691203161602, -135242904262306, -340995514799091, -558240028913050, 155315307033900, 67299282482826, 154516693883463, 243875424959156}
		},
	B1hi[N][N] = {
{-3709002713265577749, -2368955042461696709, -5029651419004911053, -4921778859362402316, -1100829568614691305, 7819389838603551597, -4299211770021202609, 2860256980485491501, -7080143206978064026}, {3498850126900531983, -5029651419004911053, 8409598895359176457, -9188399445570288912, 2368955042461696708, -4921778859362402316, 116679542284287864, -7819389838603551598, -1100829568614691305}, {-3230646900116474362, 8409598895359176457, -1539608274746158197, 2780931436956861416, 5029651419004911052, -9188399445570288912, 3119056657877881219, 4921778859362402315, 2368955042461696708}, {1895425527990359712, -1539608274746158197, 2908641070144907123, 1217509110898979169, -8409598895359176458, 2780931436956861416, -7157569624029612007, 9188399445570288911, 5029651419004911052}, {4766537492266548153, 2908641070144907123, -6612817484732718481, 750101615416184511, 1539608274746158196, 1217509110898979169, -2261082482819187972, -2780931436956861417, -8409598895359176458}, {-9217464961394432883, -6612817484732718481, 8245129085984715293, 6259523030675028556, -2908641070144907124, 750101615416184511, -4180905686224824806, -1217509110898979170, 1539608274746158196}, {8672274713616550122, 8245129085984715293, -4286457659753423566, 6148516412539988485, 6612817484732718480, 6259523030675028556, -5716605466647355546, -750101615416184512, -2908641070144907124}, {4329577342254083562, -4286457659753423566, 2201659137229382608, -5720513960970983003, -8245129085984715294, 6148516412539988485, -3230740233992086152, -6259523030675028557, 6612817484732718480}, {5932771293254971011, 2201659137229382608, -4737910084923393417, -2807964396502448422, 4286457659753423565, -5720513960970983003, -8175183903415741501, -6148516412539988486, -8245129085984715294}
		};
static const __int128 B1[N][N] = {
	{ 
((__int128) LOW(-3709002713265577749) << 64) | 10369192340073623204u, ((__int128) LOW(-2368955042461696709) << 64) | 13090768244064579776u, ((__int128) LOW(-5029651419004911053) << 64) | 1574170116454949910u, ((__int128) LOW(-4921778859362402316) << 64) | 1375469437279241677u, ((__int128) LOW(-1100829568614691305) << 64) | 12616658132301652406u, ((__int128) LOW(7819389838603551597) << 64) | 986082676361884283u, ((__int128) LOW(-4299211770021202609) << 64) | 6808408173056858057u, ((__int128) LOW(2860256980485491501) << 64) | 4783338036117456653u, ((__int128) LOW(-7080143206978064026) << 64) | 17369516423708995397u },
	{ 
((__int128) LOW(3498850126900531983) << 64) | 15558875114515238264u, ((__int128) LOW(-5029651419004911053) << 64) | 1574170116454949910u, ((__int128) LOW(8409598895359176457) << 64) | 4546866843378649430u, ((__int128) LOW(-9188399445570288912) << 64) | 7841080540897121189u, ((__int128) LOW(2368955042461696708) << 64) | 5355975829644971840u, ((__int128) LOW(-4921778859362402316) << 64) | 1375469437279241677u, ((__int128) LOW(116679542284287864) << 64) | 12922660364293263300u, ((__int128) LOW(-7819389838603551598) << 64) | 17460661397347667333u, ((__int128) LOW(-1100829568614691305) << 64) | 12616658132301652406u },
	{ 
((__int128) LOW(-3230646900116474362) << 64) | 13067558152786103900u, ((__int128) LOW(8409598895359176457) << 64) | 4546866843378649430u, ((__int128) LOW(-1539608274746158197) << 64) | 4011684187501216641u, ((__int128) LOW(2780931436956861416) << 64) | 7885635823057414276u, ((__int128) LOW(5029651419004911052) << 64) | 16872573957254601706u, ((__int128) LOW(-9188399445570288912) << 64) | 7841080540897121189u, ((__int128) LOW(3119056657877881219) << 64) | 8910547746184751972u, ((__int128) LOW(4921778859362402315) << 64) | 17071274636430309939u, ((__int128) LOW(2368955042461696708) << 64) | 5355975829644971840u },
	{ 
((__int128) LOW(1895425527990359712) << 64) | 14717852026921469993u, ((__int128) LOW(-1539608274746158197) << 64) | 4011684187501216641u, ((__int128) LOW(2908641070144907123) << 64) | 11998090947498473117u, ((__int128) LOW(1217509110898979169) << 64) | 306002231991610894u, ((__int128) LOW(-8409598895359176458) << 64) | 13899877230330902186u, ((__int128) LOW(2780931436956861416) << 64) | 7885635823057414276u, ((__int128) LOW(-7157569624029612007) << 64) | 12172144447414755333u, ((__int128) LOW(9188399445570288911) << 64) | 10605663532812430427u, ((__int128) LOW(5029651419004911052) << 64) | 16872573957254601706u },
	{ 
((__int128) LOW(4766537492266548153) << 64) | 4700162879507827098u, ((__int128) LOW(2908641070144907123) << 64) | 11998090947498473117u, ((__int128) LOW(-6612817484732718481) << 64) | 10431343402564128936u, ((__int128) LOW(750101615416184511) << 64) | 3554571916539780132u, ((__int128) LOW(1539608274746158196) << 64) | 14435059886208334975u, ((__int128) LOW(1217509110898979169) << 64) | 306002231991610894u, ((__int128) LOW(-2261082482819187972) << 64) | 12892067564888871543u, ((__int128) LOW(-2780931436956861417) << 64) | 10561108250652137340u, ((__int128) LOW(-8409598895359176458) << 64) | 13899877230330902186u },
	{ 
((__int128) LOW(-9217464961394432883) << 64) | 3468267197434753975u, ((__int128) LOW(-6612817484732718481) << 64) | 10431343402564128936u, ((__int128) LOW(8245129085984715293) << 64) | 10560841620320118065u, ((__int128) LOW(6259523030675028556) << 64) | 13746314563869705243u, ((__int128) LOW(-2908641070144907124) << 64) | 6448653126211078499u, ((__int128) LOW(750101615416184511) << 64) | 3554571916539780132u, ((__int128) LOW(-4180905686224824806) << 64) | 4868383813973421669u, ((__int128) LOW(-1217509110898979170) << 64) | 18140741841717940722u, ((__int128) LOW(1539608274746158196) << 64) | 14435059886208334975u },
	{ 
((__int128) LOW(8672274713616550122) << 64) | 6334675797880940242u, ((__int128) LOW(8245129085984715293) << 64) | 10560841620320118065u, ((__int128) LOW(-4286457659753423566) << 64) | 2154455300001112438u, ((__int128) LOW(6148516412539988485) << 64) | 17438934408267520973u, ((__int128) LOW(6612817484732718480) << 64) | 8015400671145422680u, ((__int128) LOW(6259523030675028556) << 64) | 13746314563869705243u, ((__int128) LOW(-5716605466647355546) << 64) | 8420818478934847065u, ((__int128) LOW(-750101615416184512) << 64) | 14892172157169771484u, ((__int128) LOW(-2908641070144907124) << 64) | 6448653126211078499u },
	{ 
((__int128) LOW(4329577342254083562) << 64) | 1062197551855992997u, ((__int128) LOW(-4286457659753423566) << 64) | 2154455300001112438u, ((__int128) LOW(2201659137229382608) << 64) | 11660171882815798420u, ((__int128) LOW(-5720513960970983003) << 64) | 8880068001474638310u, ((__int128) LOW(-8245129085984715294) << 64) | 7885902453389433551u, ((__int128) LOW(6148516412539988485) << 64) | 17438934408267520973u, ((__int128) LOW(-3230740233992086152) << 64) | 10766339545703906034u, ((__int128) LOW(-6259523030675028557) << 64) | 4700429509839846373u, ((__int128) LOW(6612817484732718480) << 64) | 8015400671145422680u },
	{ 
((__int128) LOW(5932771293254971011) << 64) | 17836335766618937439u, ((__int128) LOW(2201659137229382608) << 64) | 11660171882815798420u, ((__int128) LOW(-4737910084923393417) << 64) | 7734792414419607936u, ((__int128) LOW(-2807964396502448422) << 64) | 1972165352723768566u, ((__int128) LOW(4286457659753423565) << 64) | 16292288773708439178u, ((__int128) LOW(-5720513960970983003) << 64) | 8880068001474638310u, ((__int128) LOW(-8175183903415741501) << 64) | 5121319461474124313u, ((__int128) LOW(-6148516412539988486) << 64) | 1007809665442030643u, ((__int128) LOW(-8245129085984715294) << 64) | 7885902453389433551u }
		};

static inline void UNROLLED_m1_or_b1_mns128_mod_mult_ext_red(unsigned __int128* restrict Rlo,
	const restrict poly128 A)
{
Rlo[0] = (__int128) ((__int128) A->lo[0] * 10369192340073623204u) + ((__int128) (LOW(A->lo[0] * -3709002713265577749) + LOW(A->hi[0] * 10369192340073623204u)) << 64) + ((__int128) A->lo[1] * 15558875114515238264u) + ((__int128) (LOW(A->lo[1] * 3498850126900531983) + LOW(A->hi[1] * 15558875114515238264u)) << 64) + ((__int128) A->lo[2] * 13067558152786103900u) + ((__int128) (LOW(A->lo[2] * -3230646900116474362) + LOW(A->hi[2] * 13067558152786103900u)) << 64) + ((__int128) A->lo[3] * 14717852026921469993u) + ((__int128) (LOW(A->lo[3] * 1895425527990359712) + LOW(A->hi[3] * 14717852026921469993u)) << 64) + ((__int128) A->lo[4] * 4700162879507827098u) + ((__int128) (LOW(A->lo[4] * 4766537492266548153) + LOW(A->hi[4] * 4700162879507827098u)) << 64) + ((__int128) A->lo[5] * 3468267197434753975u) + ((__int128) (LOW(A->lo[5] * -9217464961394432883) + LOW(A->hi[5] * 3468267197434753975u)) << 64) + ((__int128) A->lo[6] * 6334675797880940242u) + ((__int128) (LOW(A->lo[6] * 8672274713616550122) + LOW(A->hi[6] * 6334675797880940242u)) << 64) + ((__int128) A->lo[7] * 1062197551855992997u) + ((__int128) (LOW(A->lo[7] * 4329577342254083562) + LOW(A->hi[7] * 1062197551855992997u)) << 64) + ((__int128) A->lo[8] * 17836335766618937439u) + ((__int128) (LOW(A->lo[8] * 5932771293254971011) + LOW(A->hi[8] * 17836335766618937439u)) << 64);
Rlo[1] = (__int128) ((__int128) A->lo[0] * 13090768244064579776u) + ((__int128) (LOW(A->lo[0] * -2368955042461696709) + LOW(A->hi[0] * 13090768244064579776u)) << 64) + ((__int128) A->lo[1] * 1574170116454949910u) + ((__int128) (LOW(A->lo[1] * -5029651419004911053) + LOW(A->hi[1] * 1574170116454949910u)) << 64) + ((__int128) A->lo[2] * 4546866843378649430u) + ((__int128) (LOW(A->lo[2] * 8409598895359176457) + LOW(A->hi[2] * 4546866843378649430u)) << 64) + ((__int128) A->lo[3] * 4011684187501216641u) + ((__int128) (LOW(A->lo[3] * -1539608274746158197) + LOW(A->hi[3] * 4011684187501216641u)) << 64) + ((__int128) A->lo[4] * 11998090947498473117u) + ((__int128) (LOW(A->lo[4] * 2908641070144907123) + LOW(A->hi[4] * 11998090947498473117u)) << 64) + ((__int128) A->lo[5] * 10431343402564128936u) + ((__int128) (LOW(A->lo[5] * -6612817484732718481) + LOW(A->hi[5] * 10431343402564128936u)) << 64) + ((__int128) A->lo[6] * 10560841620320118065u) + ((__int128) (LOW(A->lo[6] * 8245129085984715293) + LOW(A->hi[6] * 10560841620320118065u)) << 64) + ((__int128) A->lo[7] * 2154455300001112438u) + ((__int128) (LOW(A->lo[7] * -4286457659753423566) + LOW(A->hi[7] * 2154455300001112438u)) << 64) + ((__int128) A->lo[8] * 11660171882815798420u) + ((__int128) (LOW(A->lo[8] * 2201659137229382608) + LOW(A->hi[8] * 11660171882815798420u)) << 64);
Rlo[2] = (__int128) ((__int128) A->lo[0] * 1574170116454949910u) + ((__int128) (LOW(A->lo[0] * -5029651419004911053) + LOW(A->hi[0] * 1574170116454949910u)) << 64) + ((__int128) A->lo[1] * 4546866843378649430u) + ((__int128) (LOW(A->lo[1] * 8409598895359176457) + LOW(A->hi[1] * 4546866843378649430u)) << 64) + ((__int128) A->lo[2] * 4011684187501216641u) + ((__int128) (LOW(A->lo[2] * -1539608274746158197) + LOW(A->hi[2] * 4011684187501216641u)) << 64) + ((__int128) A->lo[3] * 11998090947498473117u) + ((__int128) (LOW(A->lo[3] * 2908641070144907123) + LOW(A->hi[3] * 11998090947498473117u)) << 64) + ((__int128) A->lo[4] * 10431343402564128936u) + ((__int128) (LOW(A->lo[4] * -6612817484732718481) + LOW(A->hi[4] * 10431343402564128936u)) << 64) + ((__int128) A->lo[5] * 10560841620320118065u) + ((__int128) (LOW(A->lo[5] * 8245129085984715293) + LOW(A->hi[5] * 10560841620320118065u)) << 64) + ((__int128) A->lo[6] * 2154455300001112438u) + ((__int128) (LOW(A->lo[6] * -4286457659753423566) + LOW(A->hi[6] * 2154455300001112438u)) << 64) + ((__int128) A->lo[7] * 11660171882815798420u) + ((__int128) (LOW(A->lo[7] * 2201659137229382608) + LOW(A->hi[7] * 11660171882815798420u)) << 64) + ((__int128) A->lo[8] * 7734792414419607936u) + ((__int128) (LOW(A->lo[8] * -4737910084923393417) + LOW(A->hi[8] * 7734792414419607936u)) << 64);
Rlo[3] = (__int128) ((__int128) A->lo[0] * 1375469437279241677u) + ((__int128) (LOW(A->lo[0] * -4921778859362402316) + LOW(A->hi[0] * 1375469437279241677u)) << 64) + ((__int128) A->lo[1] * 7841080540897121189u) + ((__int128) (LOW(A->lo[1] * -9188399445570288912) + LOW(A->hi[1] * 7841080540897121189u)) << 64) + ((__int128) A->lo[2] * 7885635823057414276u) + ((__int128) (LOW(A->lo[2] * 2780931436956861416) + LOW(A->hi[2] * 7885635823057414276u)) << 64) + ((__int128) A->lo[3] * 306002231991610894u) + ((__int128) (LOW(A->lo[3] * 1217509110898979169) + LOW(A->hi[3] * 306002231991610894u)) << 64) + ((__int128) A->lo[4] * 3554571916539780132u) + ((__int128) (LOW(A->lo[4] * 750101615416184511) + LOW(A->hi[4] * 3554571916539780132u)) << 64) + ((__int128) A->lo[5] * 13746314563869705243u) + ((__int128) (LOW(A->lo[5] * 6259523030675028556) + LOW(A->hi[5] * 13746314563869705243u)) << 64) + ((__int128) A->lo[6] * 17438934408267520973u) + ((__int128) (LOW(A->lo[6] * 6148516412539988485) + LOW(A->hi[6] * 17438934408267520973u)) << 64) + ((__int128) A->lo[7] * 8880068001474638310u) + ((__int128) (LOW(A->lo[7] * -5720513960970983003) + LOW(A->hi[7] * 8880068001474638310u)) << 64) + ((__int128) A->lo[8] * 1972165352723768566u) + ((__int128) (LOW(A->lo[8] * -2807964396502448422) + LOW(A->hi[8] * 1972165352723768566u)) << 64);
Rlo[4] = (__int128) ((__int128) A->lo[0] * 12616658132301652406u) + ((__int128) (LOW(A->lo[0] * -1100829568614691305) + LOW(A->hi[0] * 12616658132301652406u)) << 64) + ((__int128) A->lo[1] * 5355975829644971840u) + ((__int128) (LOW(A->lo[1] * 2368955042461696708) + LOW(A->hi[1] * 5355975829644971840u)) << 64) + ((__int128) A->lo[2] * 16872573957254601706u) + ((__int128) (LOW(A->lo[2] * 5029651419004911052) + LOW(A->hi[2] * 16872573957254601706u)) << 64) + ((__int128) A->lo[3] * 13899877230330902186u) + ((__int128) (LOW(A->lo[3] * -8409598895359176458) + LOW(A->hi[3] * 13899877230330902186u)) << 64) + ((__int128) A->lo[4] * 14435059886208334975u) + ((__int128) (LOW(A->lo[4] * 1539608274746158196) + LOW(A->hi[4] * 14435059886208334975u)) << 64) + ((__int128) A->lo[5] * 6448653126211078499u) + ((__int128) (LOW(A->lo[5] * -2908641070144907124) + LOW(A->hi[5] * 6448653126211078499u)) << 64) + ((__int128) A->lo[6] * 8015400671145422680u) + ((__int128) (LOW(A->lo[6] * 6612817484732718480) + LOW(A->hi[6] * 8015400671145422680u)) << 64) + ((__int128) A->lo[7] * 7885902453389433551u) + ((__int128) (LOW(A->lo[7] * -8245129085984715294) + LOW(A->hi[7] * 7885902453389433551u)) << 64) + ((__int128) A->lo[8] * 16292288773708439178u) + ((__int128) (LOW(A->lo[8] * 4286457659753423565) + LOW(A->hi[8] * 16292288773708439178u)) << 64);
Rlo[5] = (__int128) ((__int128) A->lo[0] * 986082676361884283u) + ((__int128) (LOW(A->lo[0] * 7819389838603551597) + LOW(A->hi[0] * 986082676361884283u)) << 64) + ((__int128) A->lo[1] * 1375469437279241677u) + ((__int128) (LOW(A->lo[1] * -4921778859362402316) + LOW(A->hi[1] * 1375469437279241677u)) << 64) + ((__int128) A->lo[2] * 7841080540897121189u) + ((__int128) (LOW(A->lo[2] * -9188399445570288912) + LOW(A->hi[2] * 7841080540897121189u)) << 64) + ((__int128) A->lo[3] * 7885635823057414276u) + ((__int128) (LOW(A->lo[3] * 2780931436956861416) + LOW(A->hi[3] * 7885635823057414276u)) << 64) + ((__int128) A->lo[4] * 306002231991610894u) + ((__int128) (LOW(A->lo[4] * 1217509110898979169) + LOW(A->hi[4] * 306002231991610894u)) << 64) + ((__int128) A->lo[5] * 3554571916539780132u) + ((__int128) (LOW(A->lo[5] * 750101615416184511) + LOW(A->hi[5] * 3554571916539780132u)) << 64) + ((__int128) A->lo[6] * 13746314563869705243u) + ((__int128) (LOW(A->lo[6] * 6259523030675028556) + LOW(A->hi[6] * 13746314563869705243u)) << 64) + ((__int128) A->lo[7] * 17438934408267520973u) + ((__int128) (LOW(A->lo[7] * 6148516412539988485) + LOW(A->hi[7] * 17438934408267520973u)) << 64) + ((__int128) A->lo[8] * 8880068001474638310u) + ((__int128) (LOW(A->lo[8] * -5720513960970983003) + LOW(A->hi[8] * 8880068001474638310u)) << 64);
Rlo[6] = (__int128) ((__int128) A->lo[0] * 6808408173056858057u) + ((__int128) (LOW(A->lo[0] * -4299211770021202609) + LOW(A->hi[0] * 6808408173056858057u)) << 64) + ((__int128) A->lo[1] * 12922660364293263300u) + ((__int128) (LOW(A->lo[1] * 116679542284287864) + LOW(A->hi[1] * 12922660364293263300u)) << 64) + ((__int128) A->lo[2] * 8910547746184751972u) + ((__int128) (LOW(A->lo[2] * 3119056657877881219) + LOW(A->hi[2] * 8910547746184751972u)) << 64) + ((__int128) A->lo[3] * 12172144447414755333u) + ((__int128) (LOW(A->lo[3] * -7157569624029612007) + LOW(A->hi[3] * 12172144447414755333u)) << 64) + ((__int128) A->lo[4] * 12892067564888871543u) + ((__int128) (LOW(A->lo[4] * -2261082482819187972) + LOW(A->hi[4] * 12892067564888871543u)) << 64) + ((__int128) A->lo[5] * 4868383813973421669u) + ((__int128) (LOW(A->lo[5] * -4180905686224824806) + LOW(A->hi[5] * 4868383813973421669u)) << 64) + ((__int128) A->lo[6] * 8420818478934847065u) + ((__int128) (LOW(A->lo[6] * -5716605466647355546) + LOW(A->hi[6] * 8420818478934847065u)) << 64) + ((__int128) A->lo[7] * 10766339545703906034u) + ((__int128) (LOW(A->lo[7] * -3230740233992086152) + LOW(A->hi[7] * 10766339545703906034u)) << 64) + ((__int128) A->lo[8] * 5121319461474124313u) + ((__int128) (LOW(A->lo[8] * -8175183903415741501) + LOW(A->hi[8] * 5121319461474124313u)) << 64);
Rlo[7] = (__int128) ((__int128) A->lo[0] * 4783338036117456653u) + ((__int128) (LOW(A->lo[0] * 2860256980485491501) + LOW(A->hi[0] * 4783338036117456653u)) << 64) + ((__int128) A->lo[1] * 17460661397347667333u) + ((__int128) (LOW(A->lo[1] * -7819389838603551598) + LOW(A->hi[1] * 17460661397347667333u)) << 64) + ((__int128) A->lo[2] * 17071274636430309939u) + ((__int128) (LOW(A->lo[2] * 4921778859362402315) + LOW(A->hi[2] * 17071274636430309939u)) << 64) + ((__int128) A->lo[3] * 10605663532812430427u) + ((__int128) (LOW(A->lo[3] * 9188399445570288911) + LOW(A->hi[3] * 10605663532812430427u)) << 64) + ((__int128) A->lo[4] * 10561108250652137340u) + ((__int128) (LOW(A->lo[4] * -2780931436956861417) + LOW(A->hi[4] * 10561108250652137340u)) << 64) + ((__int128) A->lo[5] * 18140741841717940722u) + ((__int128) (LOW(A->lo[5] * -1217509110898979170) + LOW(A->hi[5] * 18140741841717940722u)) << 64) + ((__int128) A->lo[6] * 14892172157169771484u) + ((__int128) (LOW(A->lo[6] * -750101615416184512) + LOW(A->hi[6] * 14892172157169771484u)) << 64) + ((__int128) A->lo[7] * 4700429509839846373u) + ((__int128) (LOW(A->lo[7] * -6259523030675028557) + LOW(A->hi[7] * 4700429509839846373u)) << 64) + ((__int128) A->lo[8] * 1007809665442030643u) + ((__int128) (LOW(A->lo[8] * -6148516412539988486) + LOW(A->hi[8] * 1007809665442030643u)) << 64);
Rlo[8] = (__int128) ((__int128) A->lo[0] * 17369516423708995397u) + ((__int128) (LOW(A->lo[0] * -7080143206978064026) + LOW(A->hi[0] * 17369516423708995397u)) << 64) + ((__int128) A->lo[1] * 12616658132301652406u) + ((__int128) (LOW(A->lo[1] * -1100829568614691305) + LOW(A->hi[1] * 12616658132301652406u)) << 64) + ((__int128) A->lo[2] * 5355975829644971840u) + ((__int128) (LOW(A->lo[2] * 2368955042461696708) + LOW(A->hi[2] * 5355975829644971840u)) << 64) + ((__int128) A->lo[3] * 16872573957254601706u) + ((__int128) (LOW(A->lo[3] * 5029651419004911052) + LOW(A->hi[3] * 16872573957254601706u)) << 64) + ((__int128) A->lo[4] * 13899877230330902186u) + ((__int128) (LOW(A->lo[4] * -8409598895359176458) + LOW(A->hi[4] * 13899877230330902186u)) << 64) + ((__int128) A->lo[5] * 14435059886208334975u) + ((__int128) (LOW(A->lo[5] * 1539608274746158196) + LOW(A->hi[5] * 14435059886208334975u)) << 64) + ((__int128) A->lo[6] * 6448653126211078499u) + ((__int128) (LOW(A->lo[6] * -2908641070144907124) + LOW(A->hi[6] * 6448653126211078499u)) << 64) + ((__int128) A->lo[7] * 8015400671145422680u) + ((__int128) (LOW(A->lo[7] * 6612817484732718480) + LOW(A->hi[7] * 8015400671145422680u)) << 64) + ((__int128) A->lo[8] * 7885902453389433551u) + ((__int128) (LOW(A->lo[8] * -8245129085984715294) + LOW(A->hi[8] * 7885902453389433551u)) << 64);
}


static inline void UNROLLED_m_or_b_mns128_mod_mult_ext_red(__int128* restrict Rhi, 
	unsigned __int128* restrict Rlo, const restrict poly128 A)
{
	unsigned __int128 A0B0, A1B0, A0B1, tmplo;
	__int128 A1B1, aux2, aux3;

	A1B1 = (__int128) LOW(A->hi[0]) * 394395127514747;
	A1B0 = (__int128) LOW(A->hi[0]) * 4743697114769812689u;
	A0B1 = (__int128) (A->lo[0]) * 394395127514747;
	A0B0 = (__int128) (A->lo[0]) * 4743697114769812689u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[0] += (__int128) aux2 + A1B1 +
		add_overflow(Rlo + 0, tmplo);

	A1B1 = (__int128) LOW(A->hi[1]) * 135242904262305;
	A1B0 = (__int128) LOW(A->hi[1]) * 15116405981831292657u;
	A0B1 = (__int128) (A->lo[1]) * 135242904262305;
	A0B0 = (__int128) (A->lo[1]) * 15116405981831292657u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[0] += (__int128) aux2 + A1B1 +
		add_overflow(Rlo + 0, tmplo);

	A1B1 = (__int128) LOW(A->hi[2]) * 473481213293212;
	A1B0 = (__int128) LOW(A->hi[2]) * 16858406375993458257u;
	A0B1 = (__int128) (A->lo[2]) * 473481213293212;
	A0B0 = (__int128) (A->lo[2]) * 16858406375993458257u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[0] += (__int128) aux2 + A1B1 +
		add_overflow(Rlo + 0, tmplo);

	A1B1 = (__int128) LOW(A->hi[3]) * -402389110170495;
	A1B0 = (__int128) LOW(A->hi[3]) * 10865043834904462639u;
	A0B1 = (__int128) (A->lo[3]) * -402389110170495;
	A0B0 = (__int128) (A->lo[3]) * 10865043834904462639u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[0] += (__int128) aux2 + A1B1 +
		add_overflow(Rlo + 0, tmplo);

	A1B1 = (__int128) LOW(A->hi[4]) * 554691203161602;
	A1B0 = (__int128) LOW(A->hi[4]) * 14463119060087696580u;
	A0B1 = (__int128) (A->lo[4]) * 554691203161602;
	A0B0 = (__int128) (A->lo[4]) * 14463119060087696580u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[0] += (__int128) aux2 + A1B1 +
		add_overflow(Rlo + 0, tmplo);

	A1B1 = (__int128) LOW(A->hi[5]) * 330888665671813;
	A1B0 = (__int128) LOW(A->hi[5]) * 11284298447621400483u;
	A0B1 = (__int128) (A->lo[5]) * 330888665671813;
	A0B0 = (__int128) (A->lo[5]) * 11284298447621400483u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[0] += (__int128) aux2 + A1B1 +
		add_overflow(Rlo + 0, tmplo);

	A1B1 = (__int128) LOW(A->hi[6]) * 93355722403566;
	A1B0 = (__int128) LOW(A->hi[6]) * 10928805643566536965u;
	A0B1 = (__int128) (A->lo[6]) * 93355722403566;
	A0B0 = (__int128) (A->lo[6]) * 10928805643566536965u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[0] += (__int128) aux2 + A1B1 +
		add_overflow(Rlo + 0, tmplo);

	A1B1 = (__int128) LOW(A->hi[7]) * -163494938522066;
	A1B0 = (__int128) LOW(A->hi[7]) * 12122604428647052274u;
	A0B1 = (__int128) (A->lo[7]) * -163494938522066;
	A0B0 = (__int128) (A->lo[7]) * 12122604428647052274u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[0] += (__int128) aux2 + A1B1 +
		add_overflow(Rlo + 0, tmplo);

	A1B1 = (__int128) LOW(A->hi[8]) * -916217185428625;
	A1B0 = (__int128) LOW(A->hi[8]) * 8731718438529783418u;
	A0B1 = (__int128) (A->lo[8]) * -916217185428625;
	A0B0 = (__int128) (A->lo[8]) * 8731718438529783418u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[0] += (__int128) aux2 + A1B1 +
		add_overflow(Rlo + 0, tmplo);

	A1B1 = (__int128) LOW(A->hi[0]) * -132485698494123;
	A1B0 = (__int128) LOW(A->hi[0]) * 6140808384109540399u;
	A0B1 = (__int128) (A->lo[0]) * -132485698494123;
	A0B0 = (__int128) (A->lo[0]) * 6140808384109540399u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[1] += (__int128) aux2 + A1B1 +
		add_overflow(Rlo + 1, tmplo);

	A1B1 = (__int128) LOW(A->hi[1]) * 340995514799090;
	A1B0 = (__int128) LOW(A->hi[1]) * 4552470686393447040u;
	A0B1 = (__int128) (A->lo[1]) * 340995514799090;
	A0B0 = (__int128) (A->lo[1]) * 4552470686393447040u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[1] += (__int128) aux2 + A1B1 +
		add_overflow(Rlo + 1, tmplo);

	A1B1 = (__int128) LOW(A->hi[2]) * 526880826008869;
	A1B0 = (__int128) LOW(A->hi[2]) * 17049632804369823906u;
	A0B1 = (__int128) (A->lo[2]) * 526880826008869;
	A0B0 = (__int128) (A->lo[2]) * 17049632804369823906u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[1] += (__int128) aux2 + A1B1 +
		add_overflow(Rlo + 1, tmplo);

	A1B1 = (__int128) LOW(A->hi[3]) * 295980637016188;
	A1B0 = (__int128) LOW(A->hi[3]) * 183331260952958943u;
	A0B1 = (__int128) (A->lo[3]) * 295980637016188;
	A0B0 = (__int128) (A->lo[3]) * 183331260952958943u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[1] += (__int128) aux2 + A1B1 +
		add_overflow(Rlo + 1, tmplo);

	A1B1 = (__int128) LOW(A->hi[4]) * -135242904262306;
	A1B0 = (__int128) LOW(A->hi[4]) * 3330338091878258959u;
	A0B1 = (__int128) (A->lo[4]) * -135242904262306;
	A0B0 = (__int128) (A->lo[4]) * 3330338091878258959u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[1] += (__int128) aux2 + A1B1 +
		add_overflow(Rlo + 1, tmplo);

	A1B1 = (__int128) LOW(A->hi[5]) * 381342376764007;
	A1B0 = (__int128) LOW(A->hi[5]) * 8274133780484219620u;
	A0B1 = (__int128) (A->lo[5]) * 381342376764007;
	A0B0 = (__int128) (A->lo[5]) * 8274133780484219620u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[1] += (__int128) aux2 + A1B1 +
		add_overflow(Rlo + 1, tmplo);

	A1B1 = (__int128) LOW(A->hi[6]) * -783731486934502;
	A1B0 = (__int128) LOW(A->hi[6]) * 2590910054420243019u;
	A0B1 = (__int128) (A->lo[6]) * -783731486934502;
	A0B0 = (__int128) (A->lo[6]) * 2590910054420243019u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[1] += (__int128) aux2 + A1B1 +
		add_overflow(Rlo + 1, tmplo);

	A1B1 = (__int128) LOW(A->hi[7]) * -424244388075381;
	A1B0 = (__int128) LOW(A->hi[7]) * 14680384056231165784u;
	A0B1 = (__int128) (A->lo[7]) * -424244388075381;
	A0B0 = (__int128) (A->lo[7]) * 14680384056231165784u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[1] += (__int128) aux2 + A1B1 +
		add_overflow(Rlo + 1, tmplo);

	A1B1 = (__int128) LOW(A->hi[8]) * 554691203161602;
	A1B0 = (__int128) LOW(A->hi[8]) * 14463119060087696580u;
	A0B1 = (__int128) (A->lo[8]) * 554691203161602;
	A0B0 = (__int128) (A->lo[8]) * 14463119060087696580u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[1] += (__int128) aux2 + A1B1 +
		add_overflow(Rlo + 1, tmplo);

	A1B1 = (__int128) LOW(A->hi[0]) * 31359202904179;
	A1B0 = (__int128) LOW(A->hi[0]) * 4257226721193157107u;
	A0B1 = (__int128) (A->lo[0]) * 31359202904179;
	A0B0 = (__int128) (A->lo[0]) * 4257226721193157107u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[2] += (__int128) aux2 + A1B1 +
		add_overflow(Rlo + 2, tmplo);

	A1B1 = (__int128) LOW(A->hi[1]) * 558240028913049;
	A1B0 = (__int128) LOW(A->hi[1]) * 2860115451853429397u;
	A0B1 = (__int128) (A->lo[1]) * 558240028913049;
	A0B0 = (__int128) (A->lo[1]) * 2860115451853429397u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[2] += (__int128) aux2 + A1B1 +
		add_overflow(Rlo + 2, tmplo);

	A1B1 = (__int128) LOW(A->hi[2]) * -163844901398302;
	A1B0 = (__int128) LOW(A->hi[2]) * 1883581662916383292u;
	A0B1 = (__int128) (A->lo[2]) * -163844901398302;
	A0B0 = (__int128) (A->lo[2]) * 1883581662916383292u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[2] += (__int128) aux2 + A1B1 +
		add_overflow(Rlo + 2, tmplo);

	A1B1 = (__int128) LOW(A->hi[3]) * 392885185171200;
	A1B0 = (__int128) LOW(A->hi[3]) * 17955877369994780341u;
	A0B1 = (__int128) (A->lo[3]) * 392885185171200;
	A0B0 = (__int128) (A->lo[3]) * 17955877369994780341u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[2] += (__int128) aux2 + A1B1 +
		add_overflow(Rlo + 2, tmplo);

	A1B1 = (__int128) LOW(A->hi[4]) * -340995514799091;
	A1B0 = (__int128) LOW(A->hi[4]) * 13894273387316104576u;
	A0B1 = (__int128) (A->lo[4]) * -340995514799091;
	A0B0 = (__int128) (A->lo[4]) * 13894273387316104576u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[2] += (__int128) aux2 + A1B1 +
		add_overflow(Rlo + 2, tmplo);

	A1B1 = (__int128) LOW(A->hi[5]) * -227351363241236;
	A1B0 = (__int128) LOW(A->hi[5]) * 8424182995767971086u;
	A0B1 = (__int128) (A->lo[5]) * -227351363241236;
	A0B0 = (__int128) (A->lo[5]) * 8424182995767971086u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[2] += (__int128) aux2 + A1B1 +
		add_overflow(Rlo + 2, tmplo);

	A1B1 = (__int128) LOW(A->hi[6]) * 523332000257423;
	A1B0 = (__int128) LOW(A->hi[6]) * 10205892338894539473u;
	A0B1 = (__int128) (A->lo[6]) * 523332000257423;
	A0B0 = (__int128) (A->lo[6]) * 10205892338894539473u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[2] += (__int128) aux2 + A1B1 +
		add_overflow(Rlo + 2, tmplo);

	A1B1 = (__int128) LOW(A->hi[7]) * 402389110170494;
	A1B0 = (__int128) LOW(A->hi[7]) * 7581700238805088977u;
	A0B1 = (__int128) (A->lo[7]) * 402389110170494;
	A0B0 = (__int128) (A->lo[7]) * 7581700238805088977u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[2] += (__int128) aux2 + A1B1 +
		add_overflow(Rlo + 2, tmplo);

	A1B1 = (__int128) LOW(A->hi[8]) * -135242904262306;
	A1B0 = (__int128) LOW(A->hi[8]) * 3330338091878258959u;
	A0B1 = (__int128) (A->lo[8]) * -135242904262306;
	A0B0 = (__int128) (A->lo[8]) * 3330338091878258959u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[2] += (__int128) aux2 + A1B1 +
		add_overflow(Rlo + 2, tmplo);

	A1B1 = (__int128) LOW(A->hi[0]) * 8529594364401;
	A1B0 = (__int128) LOW(A->hi[0]) * 5105878456580433281u;
	A0B1 = (__int128) (A->lo[0]) * 8529594364401;
	A0B0 = (__int128) (A->lo[0]) * 5105878456580433281u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[3] += (__int128) aux2 + A1B1 +
		add_overflow(Rlo + 3, tmplo);

	A1B1 = (__int128) LOW(A->hi[1]) * -155315307033901;
	A1B0 = (__int128) LOW(A->hi[1]) * 6989460119496816573u;
	A0B1 = (__int128) (A->lo[1]) * -155315307033901;
	A0B0 = (__int128) (A->lo[1]) * 6989460119496816573u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[3] += (__int128) aux2 + A1B1 +
		add_overflow(Rlo + 3, tmplo);

	A1B1 = (__int128) LOW(A->hi[2]) * 22829608539777;
	A1B0 = (__int128) LOW(A->hi[2]) * 17598092338322275442u;
	A0B1 = (__int128) (A->lo[2]) * 22829608539777;
	A0B0 = (__int128) (A->lo[2]) * 17598092338322275442u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[3] += (__int128) aux2 + A1B1 +
		add_overflow(Rlo + 3, tmplo);

	A1B1 = (__int128) LOW(A->hi[3]) * -410918704534896;
	A1B0 = (__int128) LOW(A->hi[3]) * 5759165378324029358u;
	A0B1 = (__int128) (A->lo[3]) * -410918704534896;
	A0B0 = (__int128) (A->lo[3]) * 5759165378324029358u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[3] += (__int128) aux2 + A1B1 +
		add_overflow(Rlo + 3, tmplo);

	A1B1 = (__int128) LOW(A->hi[4]) * -558240028913050;
	A1B0 = (__int128) LOW(A->hi[4]) * 15586628621856122219u;
	A0B1 = (__int128) (A->lo[4]) * -558240028913050;
	A0B0 = (__int128) (A->lo[4]) * 15586628621856122219u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[3] += (__int128) aux2 + A1B1 +
		add_overflow(Rlo + 3, tmplo);

	A1B1 = (__int128) LOW(A->hi[5]) * 536657683797908;
	A1B0 = (__int128) LOW(A->hi[5]) * 1284673660987403047u;
	A0B1 = (__int128) (A->lo[5]) * 536657683797908;
	A0B0 = (__int128) (A->lo[5]) * 1284673660987403047u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[3] += (__int128) aux2 + A1B1 +
		add_overflow(Rlo + 3, tmplo);

	A1B1 = (__int128) LOW(A->hi[6]) * -143772498626708;
	A1B0 = (__int128) LOW(A->hi[6]) * 16671203709007377294u;
	A0B1 = (__int128) (A->lo[6]) * -143772498626708;
	A0B0 = (__int128) (A->lo[6]) * 16671203709007377294u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[3] += (__int128) aux2 + A1B1 +
		add_overflow(Rlo + 3, tmplo);

	A1B1 = (__int128) LOW(A->hi[7]) * -295980637016189;
	A1B0 = (__int128) LOW(A->hi[7]) * 18263412812756592673u;
	A0B1 = (__int128) (A->lo[7]) * -295980637016189;
	A0B0 = (__int128) (A->lo[7]) * 18263412812756592673u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[3] += (__int128) aux2 + A1B1 +
		add_overflow(Rlo + 3, tmplo);

	A1B1 = (__int128) LOW(A->hi[8]) * -340995514799091;
	A1B0 = (__int128) LOW(A->hi[8]) * 13894273387316104576u;
	A0B1 = (__int128) (A->lo[8]) * -340995514799091;
	A0B0 = (__int128) (A->lo[8]) * 13894273387316104576u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[3] += (__int128) aux2 + A1B1 +
		add_overflow(Rlo + 3, tmplo);

	A1B1 = (__int128) LOW(A->hi[0]) * -90128891022605;
	A1B0 = (__int128) LOW(A->hi[0]) * 17927343406928437047u;
	A0B1 = (__int128) (A->lo[0]) * -90128891022605;
	A0B0 = (__int128) (A->lo[0]) * 17927343406928437047u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[4] += (__int128) aux2 + A1B1 +
		add_overflow(Rlo + 4, tmplo);

	A1B1 = (__int128) LOW(A->hi[1]) * -67299282482827;
	A1B0 = (__int128) LOW(A->hi[1]) * 17078691671541160873u;
	A0B1 = (__int128) (A->lo[1]) * -67299282482827;
	A0B0 = (__int128) (A->lo[1]) * 17078691671541160873u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[4] += (__int128) aux2 + A1B1 +
		add_overflow(Rlo + 4, tmplo);

	A1B1 = (__int128) LOW(A->hi[2]) * 98658485387005;
	A1B0 = (__int128) LOW(A->hi[2]) * 5625279123361547850u;
	A0B1 = (__int128) (A->lo[2]) * 98658485387005;
	A0B0 = (__int128) (A->lo[2]) * 5625279123361547850u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[4] += (__int128) aux2 + A1B1 +
		add_overflow(Rlo + 4, tmplo);

	A1B1 = (__int128) LOW(A->hi[3]) * 386109528038792;
	A1B0 = (__int128) LOW(A->hi[3]) * 702731927734073512u;
	A0B1 = (__int128) (A->lo[3]) * 386109528038792;
	A0B0 = (__int128) (A->lo[3]) * 702731927734073512u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[4] += (__int128) aux2 + A1B1 +
		add_overflow(Rlo + 4, tmplo);

	A1B1 = (__int128) LOW(A->hi[4]) * 155315307033900;
	A1B0 = (__int128) LOW(A->hi[4]) * 11457283954212735043u;
	A0B1 = (__int128) (A->lo[4]) * 155315307033900;
	A0B0 = (__int128) (A->lo[4]) * 11457283954212735043u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[4] += (__int128) aux2 + A1B1 +
		add_overflow(Rlo + 4, tmplo);

	A1B1 = (__int128) LOW(A->hi[5]) * -160052080758410;
	A1B0 = (__int128) LOW(A->hi[5]) * 9792235397936361829u;
	A0B1 = (__int128) (A->lo[5]) * -160052080758410;
	A0B0 = (__int128) (A->lo[5]) * 9792235397936361829u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[4] += (__int128) aux2 + A1B1 +
		add_overflow(Rlo + 4, tmplo);

	A1B1 = (__int128) LOW(A->hi[6]) * -250866623776487;
	A1B0 = (__int128) LOW(A->hi[6]) * 14413674054097219145u;
	A0B1 = (__int128) (A->lo[6]) * -250866623776487;
	A0B0 = (__int128) (A->lo[6]) * 14413674054097219145u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[4] += (__int128) aux2 + A1B1 +
		add_overflow(Rlo + 4, tmplo);

	A1B1 = (__int128) LOW(A->hi[7]) * -392885185171201;
	A1B0 = (__int128) LOW(A->hi[7]) * 490866703714771275u;
	A0B1 = (__int128) (A->lo[7]) * -392885185171201;
	A0B0 = (__int128) (A->lo[7]) * 490866703714771275u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[4] += (__int128) aux2 + A1B1 +
		add_overflow(Rlo + 4, tmplo);

	A1B1 = (__int128) LOW(A->hi[8]) * -558240028913050;
	A1B0 = (__int128) LOW(A->hi[8]) * 15586628621856122219u;
	A0B1 = (__int128) (A->lo[8]) * -558240028913050;
	A0B0 = (__int128) (A->lo[8]) * 15586628621856122219u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[4] += (__int128) aux2 + A1B1 +
		add_overflow(Rlo + 4, tmplo);

	A1B1 = (__int128) LOW(A->hi[0]) * -253175179270470;
	A1B0 = (__int128) LOW(A->hi[0]) * 14495017652728727760u;
	A0B1 = (__int128) (A->lo[0]) * -253175179270470;
	A0B0 = (__int128) (A->lo[0]) * 14495017652728727760u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[5] += (__int128) aux2 + A1B1 +
		add_overflow(Rlo + 5, tmplo);

	A1B1 = (__int128) LOW(A->hi[1]) * -154516693883464;
	A1B0 = (__int128) LOW(A->hi[1]) * 1673552702380723994u;
	A0B1 = (__int128) (A->lo[1]) * -154516693883464;
	A0B0 = (__int128) (A->lo[1]) * 1673552702380723994u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[5] += (__int128) aux2 + A1B1 +
		add_overflow(Rlo + 5, tmplo);

	A1B1 = (__int128) LOW(A->hi[2]) * 163046288247865;
	A1B0 = (__int128) LOW(A->hi[2]) * 3432325754199709287u;
	A0B1 = (__int128) (A->lo[2]) * 163046288247865;
	A0B0 = (__int128) (A->lo[2]) * 3432325754199709287u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[5] += (__int128) aux2 + A1B1 +
		add_overflow(Rlo + 5, tmplo);

	A1B1 = (__int128) LOW(A->hi[3]) * 646060364441670;
	A1B0 = (__int128) LOW(A->hi[3]) * 3460859717266052581u;
	A0B1 = (__int128) (A->lo[3]) * 646060364441670;
	A0B0 = (__int128) (A->lo[3]) * 3460859717266052581u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[5] += (__int128) aux2 + A1B1 +
		add_overflow(Rlo + 5, tmplo);

	A1B1 = (__int128) LOW(A->hi[4]) * 67299282482826;
	A1B0 = (__int128) LOW(A->hi[4]) * 1368052402168390743u;
	A0B1 = (__int128) (A->lo[4]) * 67299282482826;
	A0B0 = (__int128) (A->lo[4]) * 1368052402168390743u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[5] += (__int128) aux2 + A1B1 +
		add_overflow(Rlo + 5, tmplo);

	A1B1 = (__int128) LOW(A->hi[5]) * 691174377681371;
	A1B0 = (__int128) LOW(A->hi[5]) * 18057865032316230669u;
	A0B1 = (__int128) (A->lo[5]) * 691174377681371;
	A0B0 = (__int128) (A->lo[5]) * 18057865032316230669u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[5] += (__int128) aux2 + A1B1 +
		add_overflow(Rlo + 5, tmplo);

	A1B1 = (__int128) LOW(A->hi[6]) * -305064849642580;
	A1B0 = (__int128) LOW(A->hi[6]) * 1091610969127394459u;
	A0B1 = (__int128) (A->lo[6]) * -305064849642580;
	A0B0 = (__int128) (A->lo[6]) * 1091610969127394459u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[5] += (__int128) aux2 + A1B1 +
		add_overflow(Rlo + 5, tmplo);

	A1B1 = (__int128) LOW(A->hi[7]) * 410918704534895;
	A1B0 = (__int128) LOW(A->hi[7]) * 12687578695385522258u;
	A0B1 = (__int128) (A->lo[7]) * 410918704534895;
	A0B0 = (__int128) (A->lo[7]) * 12687578695385522258u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[5] += (__int128) aux2 + A1B1 +
		add_overflow(Rlo + 5, tmplo);

	A1B1 = (__int128) LOW(A->hi[8]) * 155315307033900;
	A1B0 = (__int128) LOW(A->hi[8]) * 11457283954212735043u;
	A0B1 = (__int128) (A->lo[8]) * 155315307033900;
	A0B0 = (__int128) (A->lo[8]) * 11457283954212735043u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[5] += (__int128) aux2 + A1B1 +
		add_overflow(Rlo + 5, tmplo);

	A1B1 = (__int128) LOW(A->hi[0]) * -406921713207023;
	A1B0 = (__int128) LOW(A->hi[0]) * 16401538977196443310u;
	A0B1 = (__int128) (A->lo[0]) * -406921713207023;
	A0B0 = (__int128) (A->lo[0]) * 16401538977196443310u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[6] += (__int128) aux2 + A1B1 +
		add_overflow(Rlo + 6, tmplo);

	A1B1 = (__int128) LOW(A->hi[1]) * -243875424959157;
	A1B0 = (__int128) LOW(A->hi[1]) * 1387120657686600981u;
	A0B1 = (__int128) (A->lo[1]) * -243875424959157;
	A0B0 = (__int128) (A->lo[1]) * 1387120657686600981u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[6] += (__int128) aux2 + A1B1 +
		add_overflow(Rlo + 6, tmplo);

	A1B1 = (__int128) LOW(A->hi[2]) * 153746533936552;
	A1B0 = (__int128) LOW(A->hi[2]) * 16540222749241836066u;
	A0B1 = (__int128) (A->lo[2]) * 153746533936552;
	A0B0 = (__int128) (A->lo[2]) * 16540222749241836066u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[6] += (__int128) aux2 + A1B1 +
		add_overflow(Rlo + 6, tmplo);

	A1B1 = (__int128) LOW(A->hi[3]) * -3996991327874;
	A1B0 = (__int128) LOW(A->hi[3]) * 7804370474837137664u;
	A0B1 = (__int128) (A->lo[3]) * -3996991327874;
	A0B0 = (__int128) (A->lo[3]) * 7804370474837137664u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[6] += (__int128) aux2 + A1B1 +
		add_overflow(Rlo + 6, tmplo);

	A1B1 = (__int128) LOW(A->hi[4]) * 154516693883463;
	A1B0 = (__int128) LOW(A->hi[4]) * 16773191371328827622u;
	A0B1 = (__int128) (A->lo[4]) * 154516693883463;
	A0B0 = (__int128) (A->lo[4]) * 16773191371328827622u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[6] += (__int128) aux2 + A1B1 +
		add_overflow(Rlo + 6, tmplo);

	A1B1 = (__int128) LOW(A->hi[5]) * 83823344200747;
	A1B0 = (__int128) LOW(A->hi[5]) * 8405114740249760848u;
	A0B1 = (__int128) (A->lo[5]) * 83823344200747;
	A0B0 = (__int128) (A->lo[5]) * 8405114740249760848u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[6] += (__int128) aux2 + A1B1 +
		add_overflow(Rlo + 6, tmplo);

	A1B1 = (__int128) LOW(A->hi[6]) * 562237020240922;
	A1B0 = (__int128) LOW(A->hi[6]) * 13502489050725843349u;
	A0B1 = (__int128) (A->lo[6]) * 562237020240922;
	A0B0 = (__int128) (A->lo[6]) * 13502489050725843349u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[6] += (__int128) aux2 + A1B1 +
		add_overflow(Rlo + 6, tmplo);

	A1B1 = (__int128) LOW(A->hi[7]) * -386109528038793;
	A1B0 = (__int128) LOW(A->hi[7]) * 17744012145975478104u;
	A0B1 = (__int128) (A->lo[7]) * -386109528038793;
	A0B0 = (__int128) (A->lo[7]) * 17744012145975478104u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[6] += (__int128) aux2 + A1B1 +
		add_overflow(Rlo + 6, tmplo);

	A1B1 = (__int128) LOW(A->hi[8]) * 67299282482826;
	A1B0 = (__int128) LOW(A->hi[8]) * 1368052402168390743u;
	A0B1 = (__int128) (A->lo[8]) * 67299282482826;
	A0B0 = (__int128) (A->lo[8]) * 1368052402168390743u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[6] += (__int128) aux2 + A1B1 +
		add_overflow(Rlo + 6, tmplo);

	A1B1 = (__int128) LOW(A->hi[0]) * 304362058777759;
	A1B0 = (__int128) LOW(A->hi[0]) * 6764034142057599649u;
	A0B1 = (__int128) (A->lo[0]) * 304362058777759;
	A0B0 = (__int128) (A->lo[0]) * 6764034142057599649u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[7] += (__int128) aux2 + A1B1 +
		add_overflow(Rlo + 7, tmplo);

	A1B1 = (__int128) LOW(A->hi[1]) * 458108592714312;
	A1B0 = (__int128) LOW(A->hi[1]) * 4857512817589884099u;
	A0B1 = (__int128) (A->lo[1]) * 458108592714312;
	A0B0 = (__int128) (A->lo[1]) * 4857512817589884099u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[7] += (__int128) aux2 + A1B1 +
		add_overflow(Rlo + 7, tmplo);

	A1B1 = (__int128) LOW(A->hi[2]) * -711283771984782;
	A1B0 = (__int128) LOW(A->hi[2]) * 9637504835138843661u;
	A0B1 = (__int128) (A->lo[2]) * -711283771984782;
	A0B0 = (__int128) (A->lo[2]) * 9637504835138843661u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[7] += (__int128) aux2 + A1B1 +
		add_overflow(Rlo + 7, tmplo);

	A1B1 = (__int128) LOW(A->hi[3]) * 81747469261032;
	A1B0 = (__int128) LOW(A->hi[3]) * 12385441859386025479u;
	A0B1 = (__int128) (A->lo[3]) * 81747469261032;
	A0B0 = (__int128) (A->lo[3]) * 12385441859386025479u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[7] += (__int128) aux2 + A1B1 +
		add_overflow(Rlo + 7, tmplo);

	A1B1 = (__int128) LOW(A->hi[4]) * 243875424959156;
	A1B0 = (__int128) LOW(A->hi[4]) * 17059623416022950635u;
	A0B1 = (__int128) (A->lo[4]) * 243875424959156;
	A0B0 = (__int128) (A->lo[4]) * 17059623416022950635u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[7] += (__int128) aux2 + A1B1 +
		add_overflow(Rlo + 7, tmplo);

	A1B1 = (__int128) LOW(A->hi[5]) * 233065784967059;
	A1B0 = (__int128) LOW(A->hi[5]) * 13200352214726346570u;
	A0B1 = (__int128) (A->lo[5]) * 233065784967059;
	A0B0 = (__int128) (A->lo[5]) * 13200352214726346570u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[7] += (__int128) aux2 + A1B1 +
		add_overflow(Rlo + 7, tmplo);

	A1B1 = (__int128) LOW(A->hi[6]) * -237062776294934;
	A1B0 = (__int128) LOW(A->hi[6]) * 13050762333820342710u;
	A0B1 = (__int128) (A->lo[6]) * -237062776294934;
	A0B0 = (__int128) (A->lo[6]) * 13050762333820342710u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[7] += (__int128) aux2 + A1B1 +
		add_overflow(Rlo + 7, tmplo);

	A1B1 = (__int128) LOW(A->hi[7]) * -646060364441671;
	A1B0 = (__int128) LOW(A->hi[7]) * 14985884356443499035u;
	A0B1 = (__int128) (A->lo[7]) * -646060364441671;
	A0B0 = (__int128) (A->lo[7]) * 14985884356443499035u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[7] += (__int128) aux2 + A1B1 +
		add_overflow(Rlo + 7, tmplo);

	A1B1 = (__int128) LOW(A->hi[8]) * 154516693883463;
	A1B0 = (__int128) LOW(A->hi[8]) * 16773191371328827622u;
	A0B1 = (__int128) (A->lo[8]) * 154516693883463;
	A0B0 = (__int128) (A->lo[8]) * 16773191371328827622u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[7] += (__int128) aux2 + A1B1 +
		add_overflow(Rlo + 7, tmplo);

	A1B1 = (__int128) LOW(A->hi[0]) * 433938170403980;
	A1B0 = (__int128) LOW(A->hi[0]) * 1577679708526859665u;
	A0B1 = (__int128) (A->lo[0]) * 433938170403980;
	A0B0 = (__int128) (A->lo[0]) * 1577679708526859665u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[8] += (__int128) aux2 + A1B1 +
		add_overflow(Rlo + 8, tmplo);

	A1B1 = (__int128) LOW(A->hi[1]) * -277345601580802;
	A1B0 = (__int128) LOW(A->hi[1]) * 11215184543665703326u;
	A0B1 = (__int128) (A->lo[1]) * -277345601580802;
	A0B0 = (__int128) (A->lo[1]) * 11215184543665703326u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[8] += (__int128) aux2 + A1B1 +
		add_overflow(Rlo + 8, tmplo);

	A1B1 = (__int128) LOW(A->hi[2]) * -129576111626221;
	A1B0 = (__int128) LOW(A->hi[2]) * 5186354433530739984u;
	A0B1 = (__int128) (A->lo[2]) * -129576111626221;
	A0B0 = (__int128) (A->lo[2]) * 5186354433530739984u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[8] += (__int128) aux2 + A1B1 +
		add_overflow(Rlo + 8, tmplo);

	A1B1 = (__int128) LOW(A->hi[3]) * 212122194037690;
	A1B0 = (__int128) LOW(A->hi[3]) * 1883180008739192916u;
	A0B1 = (__int128) (A->lo[3]) * 212122194037690;
	A0B0 = (__int128) (A->lo[3]) * 1883180008739192916u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[8] += (__int128) aux2 + A1B1 +
		add_overflow(Rlo + 8, tmplo);

	A1B1 = (__int128) LOW(A->hi[4]) * -458108592714313;
	A1B0 = (__int128) LOW(A->hi[4]) * 13589231256119667517u;
	A0B1 = (__int128) (A->lo[4]) * -458108592714313;
	A0B0 = (__int128) (A->lo[4]) * 13589231256119667517u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[8] += (__int128) aux2 + A1B1 +
		add_overflow(Rlo + 8, tmplo);

	A1B1 = (__int128) LOW(A->hi[5]) * 361168945781548;
	A1B0 = (__int128) LOW(A->hi[5]) * 15636674270293609138u;
	A0B1 = (__int128) (A->lo[5]) * 361168945781548;
	A0B0 = (__int128) (A->lo[5]) * 15636674270293609138u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[8] += (__int128) aux2 + A1B1 +
		add_overflow(Rlo + 8, tmplo);

	A1B1 = (__int128) LOW(A->hi[6]) * -279421476520517;
	A1B0 = (__int128) LOW(A->hi[6]) * 15195511662801967957u;
	A0B1 = (__int128) (A->lo[6]) * -279421476520517;
	A0B0 = (__int128) (A->lo[6]) * 15195511662801967957u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[8] += (__int128) aux2 + A1B1 +
		add_overflow(Rlo + 8, tmplo);

	A1B1 = (__int128) LOW(A->hi[7]) * 3996991327873;
	A1B0 = (__int128) LOW(A->hi[7]) * 10642373598872413952u;
	A0B1 = (__int128) (A->lo[7]) * 3996991327873;
	A0B0 = (__int128) (A->lo[7]) * 10642373598872413952u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[8] += (__int128) aux2 + A1B1 +
		add_overflow(Rlo + 8, tmplo);

	A1B1 = (__int128) LOW(A->hi[8]) * 243875424959156;
	A1B0 = (__int128) LOW(A->hi[8]) * 17059623416022950635u;
	A0B1 = (__int128) (A->lo[8]) * 243875424959156;
	A0B0 = (__int128) (A->lo[8]) * 17059623416022950635u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[8] += (__int128) aux2 + A1B1 +
		add_overflow(Rlo + 8, tmplo);

}


static inline void UNROLLED_mns128_mod_mult_ext_red(__int128* restrict Rhi,
	unsigned __int128* restrict Rlo, const restrict poly128 A,
	const restrict poly128 B)
{
	unsigned __int128 A0B0, A1B0_A0B1, tmplo;
	__int128 A1B1;

	A1B1 = (__int128) A->hi[1] * B->hi[8] * LAMBDA;
	A0B0 = (__int128) A->lo[1] * B->lo[8] * LAMBDA;
	A1B0_A0B1 = (__int128) ((__int128) ((__int128) A->hi[1] *
		B->lo[8] * LAMBDA) + ((__int128) A->lo[1] *
		B->hi[8] * LAMBDA)) + HIGH(A0B0);
tmplo = (__int128) LOW(A0B0) | ((__int128)A1B0_A0B1 << 64);
	Rhi[0] += (__int128) A1B1 + HIGH(A1B0_A0B1) +
			add_overflow(Rlo + 0, tmplo);

	A1B1 = (__int128) A->hi[2] * B->hi[7] * LAMBDA;
	A0B0 = (__int128) A->lo[2] * B->lo[7] * LAMBDA;
	A1B0_A0B1 = (__int128) ((__int128) ((__int128) A->hi[2] *
		B->lo[7] * LAMBDA) + ((__int128) A->lo[2] *
		B->hi[7] * LAMBDA)) + HIGH(A0B0);
tmplo = (__int128) LOW(A0B0) | ((__int128)A1B0_A0B1 << 64);
	Rhi[0] += (__int128) A1B1 + HIGH(A1B0_A0B1) +
			add_overflow(Rlo + 0, tmplo);

	A1B1 = (__int128) A->hi[3] * B->hi[6] * LAMBDA;
	A0B0 = (__int128) A->lo[3] * B->lo[6] * LAMBDA;
	A1B0_A0B1 = (__int128) ((__int128) ((__int128) A->hi[3] *
		B->lo[6] * LAMBDA) + ((__int128) A->lo[3] *
		B->hi[6] * LAMBDA)) + HIGH(A0B0);
tmplo = (__int128) LOW(A0B0) | ((__int128)A1B0_A0B1 << 64);
	Rhi[0] += (__int128) A1B1 + HIGH(A1B0_A0B1) +
			add_overflow(Rlo + 0, tmplo);

	A1B1 = (__int128) A->hi[4] * B->hi[5] * LAMBDA;
	A0B0 = (__int128) A->lo[4] * B->lo[5] * LAMBDA;
	A1B0_A0B1 = (__int128) ((__int128) ((__int128) A->hi[4] *
		B->lo[5] * LAMBDA) + ((__int128) A->lo[4] *
		B->hi[5] * LAMBDA)) + HIGH(A0B0);
tmplo = (__int128) LOW(A0B0) | ((__int128)A1B0_A0B1 << 64);
	Rhi[0] += (__int128) A1B1 + HIGH(A1B0_A0B1) +
			add_overflow(Rlo + 0, tmplo);

	A1B1 = (__int128) A->hi[5] * B->hi[4] * LAMBDA;
	A0B0 = (__int128) A->lo[5] * B->lo[4] * LAMBDA;
	A1B0_A0B1 = (__int128) ((__int128) ((__int128) A->hi[5] *
		B->lo[4] * LAMBDA) + ((__int128) A->lo[5] *
		B->hi[4] * LAMBDA)) + HIGH(A0B0);
tmplo = (__int128) LOW(A0B0) | ((__int128)A1B0_A0B1 << 64);
	Rhi[0] += (__int128) A1B1 + HIGH(A1B0_A0B1) +
			add_overflow(Rlo + 0, tmplo);

	A1B1 = (__int128) A->hi[6] * B->hi[3] * LAMBDA;
	A0B0 = (__int128) A->lo[6] * B->lo[3] * LAMBDA;
	A1B0_A0B1 = (__int128) ((__int128) ((__int128) A->hi[6] *
		B->lo[3] * LAMBDA) + ((__int128) A->lo[6] *
		B->hi[3] * LAMBDA)) + HIGH(A0B0);
tmplo = (__int128) LOW(A0B0) | ((__int128)A1B0_A0B1 << 64);
	Rhi[0] += (__int128) A1B1 + HIGH(A1B0_A0B1) +
			add_overflow(Rlo + 0, tmplo);

	A1B1 = (__int128) A->hi[7] * B->hi[2] * LAMBDA;
	A0B0 = (__int128) A->lo[7] * B->lo[2] * LAMBDA;
	A1B0_A0B1 = (__int128) ((__int128) ((__int128) A->hi[7] *
		B->lo[2] * LAMBDA) + ((__int128) A->lo[7] *
		B->hi[2] * LAMBDA)) + HIGH(A0B0);
tmplo = (__int128) LOW(A0B0) | ((__int128)A1B0_A0B1 << 64);
	Rhi[0] += (__int128) A1B1 + HIGH(A1B0_A0B1) +
			add_overflow(Rlo + 0, tmplo);

	A1B1 = (__int128) A->hi[8] * B->hi[1] * LAMBDA;
	A0B0 = (__int128) A->lo[8] * B->lo[1] * LAMBDA;
	A1B0_A0B1 = (__int128) ((__int128) ((__int128) A->hi[8] *
		B->lo[1] * LAMBDA) + ((__int128) A->lo[8] *
		B->hi[1] * LAMBDA)) + HIGH(A0B0);
tmplo = (__int128) LOW(A0B0) | ((__int128)A1B0_A0B1 << 64);
	Rhi[0] += (__int128) A1B1 + HIGH(A1B0_A0B1) +
			add_overflow(Rlo + 0, tmplo);

	A1B1 = (__int128) A->hi[0] * B->hi[0];
	A0B0 = (__int128) A->lo[0] * B->lo[0];
	A1B0_A0B1 = (__int128) ((__int128) ((__int128) A->hi[0] *
		B->lo[0]) + ((__int128) A->lo[0] *
		B->hi[0])) + HIGH(A0B0);
tmplo = (__int128) LOW(A0B0) | ((__int128)A1B0_A0B1 << 64);
	Rhi[0] += (__int128) A1B1 + HIGH(A1B0_A0B1) +
			add_overflow(Rlo + 0, tmplo);

	A1B1 = (__int128) A->hi[2] * B->hi[8] * LAMBDA;
	A0B0 = (__int128) A->lo[2] * B->lo[8] * LAMBDA;
	A1B0_A0B1 = (__int128) ((__int128) ((__int128) A->hi[2] *
		B->lo[8] * LAMBDA) + ((__int128) A->lo[2] *
		B->hi[8] * LAMBDA)) + HIGH(A0B0);
tmplo = (__int128) LOW(A0B0) | ((__int128)A1B0_A0B1 << 64);
	Rhi[1] += (__int128) A1B1 + HIGH(A1B0_A0B1) +
			add_overflow(Rlo + 1, tmplo);

	A1B1 = (__int128) A->hi[3] * B->hi[7] * LAMBDA;
	A0B0 = (__int128) A->lo[3] * B->lo[7] * LAMBDA;
	A1B0_A0B1 = (__int128) ((__int128) ((__int128) A->hi[3] *
		B->lo[7] * LAMBDA) + ((__int128) A->lo[3] *
		B->hi[7] * LAMBDA)) + HIGH(A0B0);
tmplo = (__int128) LOW(A0B0) | ((__int128)A1B0_A0B1 << 64);
	Rhi[1] += (__int128) A1B1 + HIGH(A1B0_A0B1) +
			add_overflow(Rlo + 1, tmplo);

	A1B1 = (__int128) A->hi[4] * B->hi[6] * LAMBDA;
	A0B0 = (__int128) A->lo[4] * B->lo[6] * LAMBDA;
	A1B0_A0B1 = (__int128) ((__int128) ((__int128) A->hi[4] *
		B->lo[6] * LAMBDA) + ((__int128) A->lo[4] *
		B->hi[6] * LAMBDA)) + HIGH(A0B0);
tmplo = (__int128) LOW(A0B0) | ((__int128)A1B0_A0B1 << 64);
	Rhi[1] += (__int128) A1B1 + HIGH(A1B0_A0B1) +
			add_overflow(Rlo + 1, tmplo);

	A1B1 = (__int128) A->hi[5] * B->hi[5] * LAMBDA;
	A0B0 = (__int128) A->lo[5] * B->lo[5] * LAMBDA;
	A1B0_A0B1 = (__int128) ((__int128) ((__int128) A->hi[5] *
		B->lo[5] * LAMBDA) + ((__int128) A->lo[5] *
		B->hi[5] * LAMBDA)) + HIGH(A0B0);
tmplo = (__int128) LOW(A0B0) | ((__int128)A1B0_A0B1 << 64);
	Rhi[1] += (__int128) A1B1 + HIGH(A1B0_A0B1) +
			add_overflow(Rlo + 1, tmplo);

	A1B1 = (__int128) A->hi[6] * B->hi[4] * LAMBDA;
	A0B0 = (__int128) A->lo[6] * B->lo[4] * LAMBDA;
	A1B0_A0B1 = (__int128) ((__int128) ((__int128) A->hi[6] *
		B->lo[4] * LAMBDA) + ((__int128) A->lo[6] *
		B->hi[4] * LAMBDA)) + HIGH(A0B0);
tmplo = (__int128) LOW(A0B0) | ((__int128)A1B0_A0B1 << 64);
	Rhi[1] += (__int128) A1B1 + HIGH(A1B0_A0B1) +
			add_overflow(Rlo + 1, tmplo);

	A1B1 = (__int128) A->hi[7] * B->hi[3] * LAMBDA;
	A0B0 = (__int128) A->lo[7] * B->lo[3] * LAMBDA;
	A1B0_A0B1 = (__int128) ((__int128) ((__int128) A->hi[7] *
		B->lo[3] * LAMBDA) + ((__int128) A->lo[7] *
		B->hi[3] * LAMBDA)) + HIGH(A0B0);
tmplo = (__int128) LOW(A0B0) | ((__int128)A1B0_A0B1 << 64);
	Rhi[1] += (__int128) A1B1 + HIGH(A1B0_A0B1) +
			add_overflow(Rlo + 1, tmplo);

	A1B1 = (__int128) A->hi[8] * B->hi[2] * LAMBDA;
	A0B0 = (__int128) A->lo[8] * B->lo[2] * LAMBDA;
	A1B0_A0B1 = (__int128) ((__int128) ((__int128) A->hi[8] *
		B->lo[2] * LAMBDA) + ((__int128) A->lo[8] *
		B->hi[2] * LAMBDA)) + HIGH(A0B0);
tmplo = (__int128) LOW(A0B0) | ((__int128)A1B0_A0B1 << 64);
	Rhi[1] += (__int128) A1B1 + HIGH(A1B0_A0B1) +
			add_overflow(Rlo + 1, tmplo);

	A1B1 = (__int128) A->hi[0] * B->hi[1];
	A0B0 = (__int128) A->lo[0] * B->lo[1];
	A1B0_A0B1 = (__int128) ((__int128) ((__int128) A->hi[0] *
		B->lo[1]) + ((__int128) A->lo[0] *
		B->hi[1])) + HIGH(A0B0);
tmplo = (__int128) LOW(A0B0) | ((__int128)A1B0_A0B1 << 64);
	Rhi[1] += (__int128) A1B1 + HIGH(A1B0_A0B1) +
			add_overflow(Rlo + 1, tmplo);

	A1B1 = (__int128) A->hi[1] * B->hi[0];
	A0B0 = (__int128) A->lo[1] * B->lo[0];
	A1B0_A0B1 = (__int128) ((__int128) ((__int128) A->hi[1] *
		B->lo[0]) + ((__int128) A->lo[1] *
		B->hi[0])) + HIGH(A0B0);
tmplo = (__int128) LOW(A0B0) | ((__int128)A1B0_A0B1 << 64);
	Rhi[1] += (__int128) A1B1 + HIGH(A1B0_A0B1) +
			add_overflow(Rlo + 1, tmplo);

	A1B1 = (__int128) A->hi[3] * B->hi[8] * LAMBDA;
	A0B0 = (__int128) A->lo[3] * B->lo[8] * LAMBDA;
	A1B0_A0B1 = (__int128) ((__int128) ((__int128) A->hi[3] *
		B->lo[8] * LAMBDA) + ((__int128) A->lo[3] *
		B->hi[8] * LAMBDA)) + HIGH(A0B0);
tmplo = (__int128) LOW(A0B0) | ((__int128)A1B0_A0B1 << 64);
	Rhi[2] += (__int128) A1B1 + HIGH(A1B0_A0B1) +
			add_overflow(Rlo + 2, tmplo);

	A1B1 = (__int128) A->hi[4] * B->hi[7] * LAMBDA;
	A0B0 = (__int128) A->lo[4] * B->lo[7] * LAMBDA;
	A1B0_A0B1 = (__int128) ((__int128) ((__int128) A->hi[4] *
		B->lo[7] * LAMBDA) + ((__int128) A->lo[4] *
		B->hi[7] * LAMBDA)) + HIGH(A0B0);
tmplo = (__int128) LOW(A0B0) | ((__int128)A1B0_A0B1 << 64);
	Rhi[2] += (__int128) A1B1 + HIGH(A1B0_A0B1) +
			add_overflow(Rlo + 2, tmplo);

	A1B1 = (__int128) A->hi[5] * B->hi[6] * LAMBDA;
	A0B0 = (__int128) A->lo[5] * B->lo[6] * LAMBDA;
	A1B0_A0B1 = (__int128) ((__int128) ((__int128) A->hi[5] *
		B->lo[6] * LAMBDA) + ((__int128) A->lo[5] *
		B->hi[6] * LAMBDA)) + HIGH(A0B0);
tmplo = (__int128) LOW(A0B0) | ((__int128)A1B0_A0B1 << 64);
	Rhi[2] += (__int128) A1B1 + HIGH(A1B0_A0B1) +
			add_overflow(Rlo + 2, tmplo);

	A1B1 = (__int128) A->hi[6] * B->hi[5] * LAMBDA;
	A0B0 = (__int128) A->lo[6] * B->lo[5] * LAMBDA;
	A1B0_A0B1 = (__int128) ((__int128) ((__int128) A->hi[6] *
		B->lo[5] * LAMBDA) + ((__int128) A->lo[6] *
		B->hi[5] * LAMBDA)) + HIGH(A0B0);
tmplo = (__int128) LOW(A0B0) | ((__int128)A1B0_A0B1 << 64);
	Rhi[2] += (__int128) A1B1 + HIGH(A1B0_A0B1) +
			add_overflow(Rlo + 2, tmplo);

	A1B1 = (__int128) A->hi[7] * B->hi[4] * LAMBDA;
	A0B0 = (__int128) A->lo[7] * B->lo[4] * LAMBDA;
	A1B0_A0B1 = (__int128) ((__int128) ((__int128) A->hi[7] *
		B->lo[4] * LAMBDA) + ((__int128) A->lo[7] *
		B->hi[4] * LAMBDA)) + HIGH(A0B0);
tmplo = (__int128) LOW(A0B0) | ((__int128)A1B0_A0B1 << 64);
	Rhi[2] += (__int128) A1B1 + HIGH(A1B0_A0B1) +
			add_overflow(Rlo + 2, tmplo);

	A1B1 = (__int128) A->hi[8] * B->hi[3] * LAMBDA;
	A0B0 = (__int128) A->lo[8] * B->lo[3] * LAMBDA;
	A1B0_A0B1 = (__int128) ((__int128) ((__int128) A->hi[8] *
		B->lo[3] * LAMBDA) + ((__int128) A->lo[8] *
		B->hi[3] * LAMBDA)) + HIGH(A0B0);
tmplo = (__int128) LOW(A0B0) | ((__int128)A1B0_A0B1 << 64);
	Rhi[2] += (__int128) A1B1 + HIGH(A1B0_A0B1) +
			add_overflow(Rlo + 2, tmplo);

	A1B1 = (__int128) A->hi[0] * B->hi[2];
	A0B0 = (__int128) A->lo[0] * B->lo[2];
	A1B0_A0B1 = (__int128) ((__int128) ((__int128) A->hi[0] *
		B->lo[2]) + ((__int128) A->lo[0] *
		B->hi[2])) + HIGH(A0B0);
tmplo = (__int128) LOW(A0B0) | ((__int128)A1B0_A0B1 << 64);
	Rhi[2] += (__int128) A1B1 + HIGH(A1B0_A0B1) +
			add_overflow(Rlo + 2, tmplo);

	A1B1 = (__int128) A->hi[1] * B->hi[1];
	A0B0 = (__int128) A->lo[1] * B->lo[1];
	A1B0_A0B1 = (__int128) ((__int128) ((__int128) A->hi[1] *
		B->lo[1]) + ((__int128) A->lo[1] *
		B->hi[1])) + HIGH(A0B0);
tmplo = (__int128) LOW(A0B0) | ((__int128)A1B0_A0B1 << 64);
	Rhi[2] += (__int128) A1B1 + HIGH(A1B0_A0B1) +
			add_overflow(Rlo + 2, tmplo);

	A1B1 = (__int128) A->hi[2] * B->hi[0];
	A0B0 = (__int128) A->lo[2] * B->lo[0];
	A1B0_A0B1 = (__int128) ((__int128) ((__int128) A->hi[2] *
		B->lo[0]) + ((__int128) A->lo[2] *
		B->hi[0])) + HIGH(A0B0);
tmplo = (__int128) LOW(A0B0) | ((__int128)A1B0_A0B1 << 64);
	Rhi[2] += (__int128) A1B1 + HIGH(A1B0_A0B1) +
			add_overflow(Rlo + 2, tmplo);

	A1B1 = (__int128) A->hi[4] * B->hi[8] * LAMBDA;
	A0B0 = (__int128) A->lo[4] * B->lo[8] * LAMBDA;
	A1B0_A0B1 = (__int128) ((__int128) ((__int128) A->hi[4] *
		B->lo[8] * LAMBDA) + ((__int128) A->lo[4] *
		B->hi[8] * LAMBDA)) + HIGH(A0B0);
tmplo = (__int128) LOW(A0B0) | ((__int128)A1B0_A0B1 << 64);
	Rhi[3] += (__int128) A1B1 + HIGH(A1B0_A0B1) +
			add_overflow(Rlo + 3, tmplo);

	A1B1 = (__int128) A->hi[5] * B->hi[7] * LAMBDA;
	A0B0 = (__int128) A->lo[5] * B->lo[7] * LAMBDA;
	A1B0_A0B1 = (__int128) ((__int128) ((__int128) A->hi[5] *
		B->lo[7] * LAMBDA) + ((__int128) A->lo[5] *
		B->hi[7] * LAMBDA)) + HIGH(A0B0);
tmplo = (__int128) LOW(A0B0) | ((__int128)A1B0_A0B1 << 64);
	Rhi[3] += (__int128) A1B1 + HIGH(A1B0_A0B1) +
			add_overflow(Rlo + 3, tmplo);

	A1B1 = (__int128) A->hi[6] * B->hi[6] * LAMBDA;
	A0B0 = (__int128) A->lo[6] * B->lo[6] * LAMBDA;
	A1B0_A0B1 = (__int128) ((__int128) ((__int128) A->hi[6] *
		B->lo[6] * LAMBDA) + ((__int128) A->lo[6] *
		B->hi[6] * LAMBDA)) + HIGH(A0B0);
tmplo = (__int128) LOW(A0B0) | ((__int128)A1B0_A0B1 << 64);
	Rhi[3] += (__int128) A1B1 + HIGH(A1B0_A0B1) +
			add_overflow(Rlo + 3, tmplo);

	A1B1 = (__int128) A->hi[7] * B->hi[5] * LAMBDA;
	A0B0 = (__int128) A->lo[7] * B->lo[5] * LAMBDA;
	A1B0_A0B1 = (__int128) ((__int128) ((__int128) A->hi[7] *
		B->lo[5] * LAMBDA) + ((__int128) A->lo[7] *
		B->hi[5] * LAMBDA)) + HIGH(A0B0);
tmplo = (__int128) LOW(A0B0) | ((__int128)A1B0_A0B1 << 64);
	Rhi[3] += (__int128) A1B1 + HIGH(A1B0_A0B1) +
			add_overflow(Rlo + 3, tmplo);

	A1B1 = (__int128) A->hi[8] * B->hi[4] * LAMBDA;
	A0B0 = (__int128) A->lo[8] * B->lo[4] * LAMBDA;
	A1B0_A0B1 = (__int128) ((__int128) ((__int128) A->hi[8] *
		B->lo[4] * LAMBDA) + ((__int128) A->lo[8] *
		B->hi[4] * LAMBDA)) + HIGH(A0B0);
tmplo = (__int128) LOW(A0B0) | ((__int128)A1B0_A0B1 << 64);
	Rhi[3] += (__int128) A1B1 + HIGH(A1B0_A0B1) +
			add_overflow(Rlo + 3, tmplo);

	A1B1 = (__int128) A->hi[0] * B->hi[3];
	A0B0 = (__int128) A->lo[0] * B->lo[3];
	A1B0_A0B1 = (__int128) ((__int128) ((__int128) A->hi[0] *
		B->lo[3]) + ((__int128) A->lo[0] *
		B->hi[3])) + HIGH(A0B0);
tmplo = (__int128) LOW(A0B0) | ((__int128)A1B0_A0B1 << 64);
	Rhi[3] += (__int128) A1B1 + HIGH(A1B0_A0B1) +
			add_overflow(Rlo + 3, tmplo);

	A1B1 = (__int128) A->hi[1] * B->hi[2];
	A0B0 = (__int128) A->lo[1] * B->lo[2];
	A1B0_A0B1 = (__int128) ((__int128) ((__int128) A->hi[1] *
		B->lo[2]) + ((__int128) A->lo[1] *
		B->hi[2])) + HIGH(A0B0);
tmplo = (__int128) LOW(A0B0) | ((__int128)A1B0_A0B1 << 64);
	Rhi[3] += (__int128) A1B1 + HIGH(A1B0_A0B1) +
			add_overflow(Rlo + 3, tmplo);

	A1B1 = (__int128) A->hi[2] * B->hi[1];
	A0B0 = (__int128) A->lo[2] * B->lo[1];
	A1B0_A0B1 = (__int128) ((__int128) ((__int128) A->hi[2] *
		B->lo[1]) + ((__int128) A->lo[2] *
		B->hi[1])) + HIGH(A0B0);
tmplo = (__int128) LOW(A0B0) | ((__int128)A1B0_A0B1 << 64);
	Rhi[3] += (__int128) A1B1 + HIGH(A1B0_A0B1) +
			add_overflow(Rlo + 3, tmplo);

	A1B1 = (__int128) A->hi[3] * B->hi[0];
	A0B0 = (__int128) A->lo[3] * B->lo[0];
	A1B0_A0B1 = (__int128) ((__int128) ((__int128) A->hi[3] *
		B->lo[0]) + ((__int128) A->lo[3] *
		B->hi[0])) + HIGH(A0B0);
tmplo = (__int128) LOW(A0B0) | ((__int128)A1B0_A0B1 << 64);
	Rhi[3] += (__int128) A1B1 + HIGH(A1B0_A0B1) +
			add_overflow(Rlo + 3, tmplo);

	A1B1 = (__int128) A->hi[5] * B->hi[8] * LAMBDA;
	A0B0 = (__int128) A->lo[5] * B->lo[8] * LAMBDA;
	A1B0_A0B1 = (__int128) ((__int128) ((__int128) A->hi[5] *
		B->lo[8] * LAMBDA) + ((__int128) A->lo[5] *
		B->hi[8] * LAMBDA)) + HIGH(A0B0);
tmplo = (__int128) LOW(A0B0) | ((__int128)A1B0_A0B1 << 64);
	Rhi[4] += (__int128) A1B1 + HIGH(A1B0_A0B1) +
			add_overflow(Rlo + 4, tmplo);

	A1B1 = (__int128) A->hi[6] * B->hi[7] * LAMBDA;
	A0B0 = (__int128) A->lo[6] * B->lo[7] * LAMBDA;
	A1B0_A0B1 = (__int128) ((__int128) ((__int128) A->hi[6] *
		B->lo[7] * LAMBDA) + ((__int128) A->lo[6] *
		B->hi[7] * LAMBDA)) + HIGH(A0B0);
tmplo = (__int128) LOW(A0B0) | ((__int128)A1B0_A0B1 << 64);
	Rhi[4] += (__int128) A1B1 + HIGH(A1B0_A0B1) +
			add_overflow(Rlo + 4, tmplo);

	A1B1 = (__int128) A->hi[7] * B->hi[6] * LAMBDA;
	A0B0 = (__int128) A->lo[7] * B->lo[6] * LAMBDA;
	A1B0_A0B1 = (__int128) ((__int128) ((__int128) A->hi[7] *
		B->lo[6] * LAMBDA) + ((__int128) A->lo[7] *
		B->hi[6] * LAMBDA)) + HIGH(A0B0);
tmplo = (__int128) LOW(A0B0) | ((__int128)A1B0_A0B1 << 64);
	Rhi[4] += (__int128) A1B1 + HIGH(A1B0_A0B1) +
			add_overflow(Rlo + 4, tmplo);

	A1B1 = (__int128) A->hi[8] * B->hi[5] * LAMBDA;
	A0B0 = (__int128) A->lo[8] * B->lo[5] * LAMBDA;
	A1B0_A0B1 = (__int128) ((__int128) ((__int128) A->hi[8] *
		B->lo[5] * LAMBDA) + ((__int128) A->lo[8] *
		B->hi[5] * LAMBDA)) + HIGH(A0B0);
tmplo = (__int128) LOW(A0B0) | ((__int128)A1B0_A0B1 << 64);
	Rhi[4] += (__int128) A1B1 + HIGH(A1B0_A0B1) +
			add_overflow(Rlo + 4, tmplo);

	A1B1 = (__int128) A->hi[0] * B->hi[4];
	A0B0 = (__int128) A->lo[0] * B->lo[4];
	A1B0_A0B1 = (__int128) ((__int128) ((__int128) A->hi[0] *
		B->lo[4]) + ((__int128) A->lo[0] *
		B->hi[4])) + HIGH(A0B0);
tmplo = (__int128) LOW(A0B0) | ((__int128)A1B0_A0B1 << 64);
	Rhi[4] += (__int128) A1B1 + HIGH(A1B0_A0B1) +
			add_overflow(Rlo + 4, tmplo);

	A1B1 = (__int128) A->hi[1] * B->hi[3];
	A0B0 = (__int128) A->lo[1] * B->lo[3];
	A1B0_A0B1 = (__int128) ((__int128) ((__int128) A->hi[1] *
		B->lo[3]) + ((__int128) A->lo[1] *
		B->hi[3])) + HIGH(A0B0);
tmplo = (__int128) LOW(A0B0) | ((__int128)A1B0_A0B1 << 64);
	Rhi[4] += (__int128) A1B1 + HIGH(A1B0_A0B1) +
			add_overflow(Rlo + 4, tmplo);

	A1B1 = (__int128) A->hi[2] * B->hi[2];
	A0B0 = (__int128) A->lo[2] * B->lo[2];
	A1B0_A0B1 = (__int128) ((__int128) ((__int128) A->hi[2] *
		B->lo[2]) + ((__int128) A->lo[2] *
		B->hi[2])) + HIGH(A0B0);
tmplo = (__int128) LOW(A0B0) | ((__int128)A1B0_A0B1 << 64);
	Rhi[4] += (__int128) A1B1 + HIGH(A1B0_A0B1) +
			add_overflow(Rlo + 4, tmplo);

	A1B1 = (__int128) A->hi[3] * B->hi[1];
	A0B0 = (__int128) A->lo[3] * B->lo[1];
	A1B0_A0B1 = (__int128) ((__int128) ((__int128) A->hi[3] *
		B->lo[1]) + ((__int128) A->lo[3] *
		B->hi[1])) + HIGH(A0B0);
tmplo = (__int128) LOW(A0B0) | ((__int128)A1B0_A0B1 << 64);
	Rhi[4] += (__int128) A1B1 + HIGH(A1B0_A0B1) +
			add_overflow(Rlo + 4, tmplo);

	A1B1 = (__int128) A->hi[4] * B->hi[0];
	A0B0 = (__int128) A->lo[4] * B->lo[0];
	A1B0_A0B1 = (__int128) ((__int128) ((__int128) A->hi[4] *
		B->lo[0]) + ((__int128) A->lo[4] *
		B->hi[0])) + HIGH(A0B0);
tmplo = (__int128) LOW(A0B0) | ((__int128)A1B0_A0B1 << 64);
	Rhi[4] += (__int128) A1B1 + HIGH(A1B0_A0B1) +
			add_overflow(Rlo + 4, tmplo);

	A1B1 = (__int128) A->hi[6] * B->hi[8] * LAMBDA;
	A0B0 = (__int128) A->lo[6] * B->lo[8] * LAMBDA;
	A1B0_A0B1 = (__int128) ((__int128) ((__int128) A->hi[6] *
		B->lo[8] * LAMBDA) + ((__int128) A->lo[6] *
		B->hi[8] * LAMBDA)) + HIGH(A0B0);
tmplo = (__int128) LOW(A0B0) | ((__int128)A1B0_A0B1 << 64);
	Rhi[5] += (__int128) A1B1 + HIGH(A1B0_A0B1) +
			add_overflow(Rlo + 5, tmplo);

	A1B1 = (__int128) A->hi[7] * B->hi[7] * LAMBDA;
	A0B0 = (__int128) A->lo[7] * B->lo[7] * LAMBDA;
	A1B0_A0B1 = (__int128) ((__int128) ((__int128) A->hi[7] *
		B->lo[7] * LAMBDA) + ((__int128) A->lo[7] *
		B->hi[7] * LAMBDA)) + HIGH(A0B0);
tmplo = (__int128) LOW(A0B0) | ((__int128)A1B0_A0B1 << 64);
	Rhi[5] += (__int128) A1B1 + HIGH(A1B0_A0B1) +
			add_overflow(Rlo + 5, tmplo);

	A1B1 = (__int128) A->hi[8] * B->hi[6] * LAMBDA;
	A0B0 = (__int128) A->lo[8] * B->lo[6] * LAMBDA;
	A1B0_A0B1 = (__int128) ((__int128) ((__int128) A->hi[8] *
		B->lo[6] * LAMBDA) + ((__int128) A->lo[8] *
		B->hi[6] * LAMBDA)) + HIGH(A0B0);
tmplo = (__int128) LOW(A0B0) | ((__int128)A1B0_A0B1 << 64);
	Rhi[5] += (__int128) A1B1 + HIGH(A1B0_A0B1) +
			add_overflow(Rlo + 5, tmplo);

	A1B1 = (__int128) A->hi[0] * B->hi[5];
	A0B0 = (__int128) A->lo[0] * B->lo[5];
	A1B0_A0B1 = (__int128) ((__int128) ((__int128) A->hi[0] *
		B->lo[5]) + ((__int128) A->lo[0] *
		B->hi[5])) + HIGH(A0B0);
tmplo = (__int128) LOW(A0B0) | ((__int128)A1B0_A0B1 << 64);
	Rhi[5] += (__int128) A1B1 + HIGH(A1B0_A0B1) +
			add_overflow(Rlo + 5, tmplo);

	A1B1 = (__int128) A->hi[1] * B->hi[4];
	A0B0 = (__int128) A->lo[1] * B->lo[4];
	A1B0_A0B1 = (__int128) ((__int128) ((__int128) A->hi[1] *
		B->lo[4]) + ((__int128) A->lo[1] *
		B->hi[4])) + HIGH(A0B0);
tmplo = (__int128) LOW(A0B0) | ((__int128)A1B0_A0B1 << 64);
	Rhi[5] += (__int128) A1B1 + HIGH(A1B0_A0B1) +
			add_overflow(Rlo + 5, tmplo);

	A1B1 = (__int128) A->hi[2] * B->hi[3];
	A0B0 = (__int128) A->lo[2] * B->lo[3];
	A1B0_A0B1 = (__int128) ((__int128) ((__int128) A->hi[2] *
		B->lo[3]) + ((__int128) A->lo[2] *
		B->hi[3])) + HIGH(A0B0);
tmplo = (__int128) LOW(A0B0) | ((__int128)A1B0_A0B1 << 64);
	Rhi[5] += (__int128) A1B1 + HIGH(A1B0_A0B1) +
			add_overflow(Rlo + 5, tmplo);

	A1B1 = (__int128) A->hi[3] * B->hi[2];
	A0B0 = (__int128) A->lo[3] * B->lo[2];
	A1B0_A0B1 = (__int128) ((__int128) ((__int128) A->hi[3] *
		B->lo[2]) + ((__int128) A->lo[3] *
		B->hi[2])) + HIGH(A0B0);
tmplo = (__int128) LOW(A0B0) | ((__int128)A1B0_A0B1 << 64);
	Rhi[5] += (__int128) A1B1 + HIGH(A1B0_A0B1) +
			add_overflow(Rlo + 5, tmplo);

	A1B1 = (__int128) A->hi[4] * B->hi[1];
	A0B0 = (__int128) A->lo[4] * B->lo[1];
	A1B0_A0B1 = (__int128) ((__int128) ((__int128) A->hi[4] *
		B->lo[1]) + ((__int128) A->lo[4] *
		B->hi[1])) + HIGH(A0B0);
tmplo = (__int128) LOW(A0B0) | ((__int128)A1B0_A0B1 << 64);
	Rhi[5] += (__int128) A1B1 + HIGH(A1B0_A0B1) +
			add_overflow(Rlo + 5, tmplo);

	A1B1 = (__int128) A->hi[5] * B->hi[0];
	A0B0 = (__int128) A->lo[5] * B->lo[0];
	A1B0_A0B1 = (__int128) ((__int128) ((__int128) A->hi[5] *
		B->lo[0]) + ((__int128) A->lo[5] *
		B->hi[0])) + HIGH(A0B0);
tmplo = (__int128) LOW(A0B0) | ((__int128)A1B0_A0B1 << 64);
	Rhi[5] += (__int128) A1B1 + HIGH(A1B0_A0B1) +
			add_overflow(Rlo + 5, tmplo);

	A1B1 = (__int128) A->hi[7] * B->hi[8] * LAMBDA;
	A0B0 = (__int128) A->lo[7] * B->lo[8] * LAMBDA;
	A1B0_A0B1 = (__int128) ((__int128) ((__int128) A->hi[7] *
		B->lo[8] * LAMBDA) + ((__int128) A->lo[7] *
		B->hi[8] * LAMBDA)) + HIGH(A0B0);
tmplo = (__int128) LOW(A0B0) | ((__int128)A1B0_A0B1 << 64);
	Rhi[6] += (__int128) A1B1 + HIGH(A1B0_A0B1) +
			add_overflow(Rlo + 6, tmplo);

	A1B1 = (__int128) A->hi[8] * B->hi[7] * LAMBDA;
	A0B0 = (__int128) A->lo[8] * B->lo[7] * LAMBDA;
	A1B0_A0B1 = (__int128) ((__int128) ((__int128) A->hi[8] *
		B->lo[7] * LAMBDA) + ((__int128) A->lo[8] *
		B->hi[7] * LAMBDA)) + HIGH(A0B0);
tmplo = (__int128) LOW(A0B0) | ((__int128)A1B0_A0B1 << 64);
	Rhi[6] += (__int128) A1B1 + HIGH(A1B0_A0B1) +
			add_overflow(Rlo + 6, tmplo);

	A1B1 = (__int128) A->hi[0] * B->hi[6];
	A0B0 = (__int128) A->lo[0] * B->lo[6];
	A1B0_A0B1 = (__int128) ((__int128) ((__int128) A->hi[0] *
		B->lo[6]) + ((__int128) A->lo[0] *
		B->hi[6])) + HIGH(A0B0);
tmplo = (__int128) LOW(A0B0) | ((__int128)A1B0_A0B1 << 64);
	Rhi[6] += (__int128) A1B1 + HIGH(A1B0_A0B1) +
			add_overflow(Rlo + 6, tmplo);

	A1B1 = (__int128) A->hi[1] * B->hi[5];
	A0B0 = (__int128) A->lo[1] * B->lo[5];
	A1B0_A0B1 = (__int128) ((__int128) ((__int128) A->hi[1] *
		B->lo[5]) + ((__int128) A->lo[1] *
		B->hi[5])) + HIGH(A0B0);
tmplo = (__int128) LOW(A0B0) | ((__int128)A1B0_A0B1 << 64);
	Rhi[6] += (__int128) A1B1 + HIGH(A1B0_A0B1) +
			add_overflow(Rlo + 6, tmplo);

	A1B1 = (__int128) A->hi[2] * B->hi[4];
	A0B0 = (__int128) A->lo[2] * B->lo[4];
	A1B0_A0B1 = (__int128) ((__int128) ((__int128) A->hi[2] *
		B->lo[4]) + ((__int128) A->lo[2] *
		B->hi[4])) + HIGH(A0B0);
tmplo = (__int128) LOW(A0B0) | ((__int128)A1B0_A0B1 << 64);
	Rhi[6] += (__int128) A1B1 + HIGH(A1B0_A0B1) +
			add_overflow(Rlo + 6, tmplo);

	A1B1 = (__int128) A->hi[3] * B->hi[3];
	A0B0 = (__int128) A->lo[3] * B->lo[3];
	A1B0_A0B1 = (__int128) ((__int128) ((__int128) A->hi[3] *
		B->lo[3]) + ((__int128) A->lo[3] *
		B->hi[3])) + HIGH(A0B0);
tmplo = (__int128) LOW(A0B0) | ((__int128)A1B0_A0B1 << 64);
	Rhi[6] += (__int128) A1B1 + HIGH(A1B0_A0B1) +
			add_overflow(Rlo + 6, tmplo);

	A1B1 = (__int128) A->hi[4] * B->hi[2];
	A0B0 = (__int128) A->lo[4] * B->lo[2];
	A1B0_A0B1 = (__int128) ((__int128) ((__int128) A->hi[4] *
		B->lo[2]) + ((__int128) A->lo[4] *
		B->hi[2])) + HIGH(A0B0);
tmplo = (__int128) LOW(A0B0) | ((__int128)A1B0_A0B1 << 64);
	Rhi[6] += (__int128) A1B1 + HIGH(A1B0_A0B1) +
			add_overflow(Rlo + 6, tmplo);

	A1B1 = (__int128) A->hi[5] * B->hi[1];
	A0B0 = (__int128) A->lo[5] * B->lo[1];
	A1B0_A0B1 = (__int128) ((__int128) ((__int128) A->hi[5] *
		B->lo[1]) + ((__int128) A->lo[5] *
		B->hi[1])) + HIGH(A0B0);
tmplo = (__int128) LOW(A0B0) | ((__int128)A1B0_A0B1 << 64);
	Rhi[6] += (__int128) A1B1 + HIGH(A1B0_A0B1) +
			add_overflow(Rlo + 6, tmplo);

	A1B1 = (__int128) A->hi[6] * B->hi[0];
	A0B0 = (__int128) A->lo[6] * B->lo[0];
	A1B0_A0B1 = (__int128) ((__int128) ((__int128) A->hi[6] *
		B->lo[0]) + ((__int128) A->lo[6] *
		B->hi[0])) + HIGH(A0B0);
tmplo = (__int128) LOW(A0B0) | ((__int128)A1B0_A0B1 << 64);
	Rhi[6] += (__int128) A1B1 + HIGH(A1B0_A0B1) +
			add_overflow(Rlo + 6, tmplo);

	A1B1 = (__int128) A->hi[8] * B->hi[8] * LAMBDA;
	A0B0 = (__int128) A->lo[8] * B->lo[8] * LAMBDA;
	A1B0_A0B1 = (__int128) ((__int128) ((__int128) A->hi[8] *
		B->lo[8] * LAMBDA) + ((__int128) A->lo[8] *
		B->hi[8] * LAMBDA)) + HIGH(A0B0);
tmplo = (__int128) LOW(A0B0) | ((__int128)A1B0_A0B1 << 64);
	Rhi[7] += (__int128) A1B1 + HIGH(A1B0_A0B1) +
			add_overflow(Rlo + 7, tmplo);

	A1B1 = (__int128) A->hi[0] * B->hi[7];
	A0B0 = (__int128) A->lo[0] * B->lo[7];
	A1B0_A0B1 = (__int128) ((__int128) ((__int128) A->hi[0] *
		B->lo[7]) + ((__int128) A->lo[0] *
		B->hi[7])) + HIGH(A0B0);
tmplo = (__int128) LOW(A0B0) | ((__int128)A1B0_A0B1 << 64);
	Rhi[7] += (__int128) A1B1 + HIGH(A1B0_A0B1) +
			add_overflow(Rlo + 7, tmplo);

	A1B1 = (__int128) A->hi[1] * B->hi[6];
	A0B0 = (__int128) A->lo[1] * B->lo[6];
	A1B0_A0B1 = (__int128) ((__int128) ((__int128) A->hi[1] *
		B->lo[6]) + ((__int128) A->lo[1] *
		B->hi[6])) + HIGH(A0B0);
tmplo = (__int128) LOW(A0B0) | ((__int128)A1B0_A0B1 << 64);
	Rhi[7] += (__int128) A1B1 + HIGH(A1B0_A0B1) +
			add_overflow(Rlo + 7, tmplo);

	A1B1 = (__int128) A->hi[2] * B->hi[5];
	A0B0 = (__int128) A->lo[2] * B->lo[5];
	A1B0_A0B1 = (__int128) ((__int128) ((__int128) A->hi[2] *
		B->lo[5]) + ((__int128) A->lo[2] *
		B->hi[5])) + HIGH(A0B0);
tmplo = (__int128) LOW(A0B0) | ((__int128)A1B0_A0B1 << 64);
	Rhi[7] += (__int128) A1B1 + HIGH(A1B0_A0B1) +
			add_overflow(Rlo + 7, tmplo);

	A1B1 = (__int128) A->hi[3] * B->hi[4];
	A0B0 = (__int128) A->lo[3] * B->lo[4];
	A1B0_A0B1 = (__int128) ((__int128) ((__int128) A->hi[3] *
		B->lo[4]) + ((__int128) A->lo[3] *
		B->hi[4])) + HIGH(A0B0);
tmplo = (__int128) LOW(A0B0) | ((__int128)A1B0_A0B1 << 64);
	Rhi[7] += (__int128) A1B1 + HIGH(A1B0_A0B1) +
			add_overflow(Rlo + 7, tmplo);

	A1B1 = (__int128) A->hi[4] * B->hi[3];
	A0B0 = (__int128) A->lo[4] * B->lo[3];
	A1B0_A0B1 = (__int128) ((__int128) ((__int128) A->hi[4] *
		B->lo[3]) + ((__int128) A->lo[4] *
		B->hi[3])) + HIGH(A0B0);
tmplo = (__int128) LOW(A0B0) | ((__int128)A1B0_A0B1 << 64);
	Rhi[7] += (__int128) A1B1 + HIGH(A1B0_A0B1) +
			add_overflow(Rlo + 7, tmplo);

	A1B1 = (__int128) A->hi[5] * B->hi[2];
	A0B0 = (__int128) A->lo[5] * B->lo[2];
	A1B0_A0B1 = (__int128) ((__int128) ((__int128) A->hi[5] *
		B->lo[2]) + ((__int128) A->lo[5] *
		B->hi[2])) + HIGH(A0B0);
tmplo = (__int128) LOW(A0B0) | ((__int128)A1B0_A0B1 << 64);
	Rhi[7] += (__int128) A1B1 + HIGH(A1B0_A0B1) +
			add_overflow(Rlo + 7, tmplo);

	A1B1 = (__int128) A->hi[6] * B->hi[1];
	A0B0 = (__int128) A->lo[6] * B->lo[1];
	A1B0_A0B1 = (__int128) ((__int128) ((__int128) A->hi[6] *
		B->lo[1]) + ((__int128) A->lo[6] *
		B->hi[1])) + HIGH(A0B0);
tmplo = (__int128) LOW(A0B0) | ((__int128)A1B0_A0B1 << 64);
	Rhi[7] += (__int128) A1B1 + HIGH(A1B0_A0B1) +
			add_overflow(Rlo + 7, tmplo);

	A1B1 = (__int128) A->hi[7] * B->hi[0];
	A0B0 = (__int128) A->lo[7] * B->lo[0];
	A1B0_A0B1 = (__int128) ((__int128) ((__int128) A->hi[7] *
		B->lo[0]) + ((__int128) A->lo[7] *
		B->hi[0])) + HIGH(A0B0);
tmplo = (__int128) LOW(A0B0) | ((__int128)A1B0_A0B1 << 64);
	Rhi[7] += (__int128) A1B1 + HIGH(A1B0_A0B1) +
			add_overflow(Rlo + 7, tmplo);

	A1B1 = (__int128) A->hi[0] * B->hi[8];
	A0B0 = (__int128) A->lo[0] * B->lo[8];
	A1B0_A0B1 = (__int128) ((__int128) ((__int128) A->hi[0] *
		B->lo[8]) + ((__int128) A->lo[0] *
		B->hi[8])) + HIGH(A0B0);
tmplo = (__int128) LOW(A0B0) | ((__int128)A1B0_A0B1 << 64);
	Rhi[8] += (__int128) A1B1 + HIGH(A1B0_A0B1) +
			add_overflow(Rlo + 8, tmplo);

	A1B1 = (__int128) A->hi[1] * B->hi[7];
	A0B0 = (__int128) A->lo[1] * B->lo[7];
	A1B0_A0B1 = (__int128) ((__int128) ((__int128) A->hi[1] *
		B->lo[7]) + ((__int128) A->lo[1] *
		B->hi[7])) + HIGH(A0B0);
tmplo = (__int128) LOW(A0B0) | ((__int128)A1B0_A0B1 << 64);
	Rhi[8] += (__int128) A1B1 + HIGH(A1B0_A0B1) +
			add_overflow(Rlo + 8, tmplo);

	A1B1 = (__int128) A->hi[2] * B->hi[6];
	A0B0 = (__int128) A->lo[2] * B->lo[6];
	A1B0_A0B1 = (__int128) ((__int128) ((__int128) A->hi[2] *
		B->lo[6]) + ((__int128) A->lo[2] *
		B->hi[6])) + HIGH(A0B0);
tmplo = (__int128) LOW(A0B0) | ((__int128)A1B0_A0B1 << 64);
	Rhi[8] += (__int128) A1B1 + HIGH(A1B0_A0B1) +
			add_overflow(Rlo + 8, tmplo);

	A1B1 = (__int128) A->hi[3] * B->hi[5];
	A0B0 = (__int128) A->lo[3] * B->lo[5];
	A1B0_A0B1 = (__int128) ((__int128) ((__int128) A->hi[3] *
		B->lo[5]) + ((__int128) A->lo[3] *
		B->hi[5])) + HIGH(A0B0);
tmplo = (__int128) LOW(A0B0) | ((__int128)A1B0_A0B1 << 64);
	Rhi[8] += (__int128) A1B1 + HIGH(A1B0_A0B1) +
			add_overflow(Rlo + 8, tmplo);

	A1B1 = (__int128) A->hi[4] * B->hi[4];
	A0B0 = (__int128) A->lo[4] * B->lo[4];
	A1B0_A0B1 = (__int128) ((__int128) ((__int128) A->hi[4] *
		B->lo[4]) + ((__int128) A->lo[4] *
		B->hi[4])) + HIGH(A0B0);
tmplo = (__int128) LOW(A0B0) | ((__int128)A1B0_A0B1 << 64);
	Rhi[8] += (__int128) A1B1 + HIGH(A1B0_A0B1) +
			add_overflow(Rlo + 8, tmplo);

	A1B1 = (__int128) A->hi[5] * B->hi[3];
	A0B0 = (__int128) A->lo[5] * B->lo[3];
	A1B0_A0B1 = (__int128) ((__int128) ((__int128) A->hi[5] *
		B->lo[3]) + ((__int128) A->lo[5] *
		B->hi[3])) + HIGH(A0B0);
tmplo = (__int128) LOW(A0B0) | ((__int128)A1B0_A0B1 << 64);
	Rhi[8] += (__int128) A1B1 + HIGH(A1B0_A0B1) +
			add_overflow(Rlo + 8, tmplo);

	A1B1 = (__int128) A->hi[6] * B->hi[2];
	A0B0 = (__int128) A->lo[6] * B->lo[2];
	A1B0_A0B1 = (__int128) ((__int128) ((__int128) A->hi[6] *
		B->lo[2]) + ((__int128) A->lo[6] *
		B->hi[2])) + HIGH(A0B0);
tmplo = (__int128) LOW(A0B0) | ((__int128)A1B0_A0B1 << 64);
	Rhi[8] += (__int128) A1B1 + HIGH(A1B0_A0B1) +
			add_overflow(Rlo + 8, tmplo);

	A1B1 = (__int128) A->hi[7] * B->hi[1];
	A0B0 = (__int128) A->lo[7] * B->lo[1];
	A1B0_A0B1 = (__int128) ((__int128) ((__int128) A->hi[7] *
		B->lo[1]) + ((__int128) A->lo[7] *
		B->hi[1])) + HIGH(A0B0);
tmplo = (__int128) LOW(A0B0) | ((__int128)A1B0_A0B1 << 64);
	Rhi[8] += (__int128) A1B1 + HIGH(A1B0_A0B1) +
			add_overflow(Rlo + 8, tmplo);

	A1B1 = (__int128) A->hi[8] * B->hi[0];
	A0B0 = (__int128) A->lo[8] * B->lo[0];
	A1B0_A0B1 = (__int128) ((__int128) ((__int128) A->hi[8] *
		B->lo[0]) + ((__int128) A->lo[8] *
		B->hi[0])) + HIGH(A0B0);
tmplo = (__int128) LOW(A0B0) | ((__int128)A1B0_A0B1 << 64);
	Rhi[8] += (__int128) A1B1 + HIGH(A1B0_A0B1) +
			add_overflow(Rlo + 8, tmplo);

}


static const uint64_t __Pilo__[N][N] = {
		{7774450425477635411u, 9956204931922991861u, 3224052052859006107u, 8036047248202180423u, 7891917263531342855u, 6320102623212705910u, 1847643590239227770u, 15639716218895628217u, 18022407926947297999u},
		{14048987121465035576u, 12698047444070323454u, 3585352047830824139u, 1262530855143167930u, 3732434286619640469u, 3855309007979872981u, 2136023423885631285u, 12665177960487761592u, 17211082577231795360u},
		{7472270714313044658u, 13979906369161264240u, 9269703050374398391u, 6980129348381006753u, 15833458236048464918u, 13523092386343726225u, 14358942974474531880u, 14128768663840536026u, 2916944353523822288u},
		{4087294339061035587u, 6249620348247134161u, 15995269001729424389u, 16777510401927241820u, 16986351468281952019u, 1862140612264509480u, 9465567691579789804u, 15408683538808380072u, 7776440435154753030u},
		{10722733407683722041u, 12146546422359455028u, 2071038302950245597u, 12996652766986869619u, 1399104311859614842u, 1111191827497556901u, 6901968016990628835u, 7861705182518683004u, 2004621978228576573u},
		{14228126804069739406u, 3647457232167476774u, 6867915840884097662u, 9120241176462866214u, 16519033167450641443u, 9486007191208995449u, 2743202687729132334u, 4105354748817469634u, 6229054581705766636u},
		{5397068487431235282u, 13379112161378046342u, 18187738959448963040u, 10933218038414530258u, 17811075099939763683u, 2898141184359747482u, 12905814909722876413u, 5268744938450003477u, 14831330692452615879u},
		{16382475730341484292u, 8476110972311949831u, 11215151338650935414u, 2828893878178269153u, 17861469893368275854u, 15084112069484441740u, 11585224239137078869u, 12985211159874822620u, 2283642572323287004u},
		{10241686218130198054u, 481814673684960631u, 15996558775265640113u, 18102193537383459972u, 13919599248200328173u, 10955096700566010835u, 8466178213724090342u, 12007901501032069010u, 17865687418532330380u}
	};


static const int64_t __Pihi__[N][N] = {
		{-169941059030552, -75384901932213, -537895983687749, 482191382727935, 637125639772204, -324165476821023, -456413804327351, 148375739225277, 239561686857928},
		{-275352975377664, -669715877025480, -634350161521329, 383190249202346, 579002473860118, -577969442954544, -587929555859550, 223811379338360, 189578661504441},
		{-117514086455879, -502548094054070, -881439499146018, 922104616639404, 557710034302877, -633751903178266, 38917814754453, 170506508865265, -155673454178513},
		{223319967180764, -561672040510806, -613298420928747, 1328380543159291, 598511611859808, -1121587887978709, 217253309134068, 25746292966759, -193066565891519},
		{-146627818868992, -547941088454889, -419422797141515, 367255575355286, 809559435276203, -1024583604674258, -344703867592166, 513676997836206, -115846845200463},
		{-810310316603444, -648370657590537, -144249651769476, 135204535570379, 141295527584163, -946343655432932, 27930394948719, 49785245628245, -534022539923260},
		{-637176082253124, -150816053209791, -123500588494544, 685114570688223, 635854614380505, -1159782296142059, -285420413192926, 560057778161723, 214293279998057},
		{296823492504599, -352748210043695, -146084490444398, 999951375767483, 284577692339722, -824078259122847, -427300898214232, -467032317893717, -19647765303902},
		{-302151851003578, -814873653950004, 255342299095409, 149213597622708, 646101764161239, -1050687992036798, 15847041569736, 241777043921430, -398762267496474}
	};

static _mpnum __P__ = { .deg = 16,
		.sign = 1,
		.t = (uint64_t[]) {0xd38a4aa5f0d15c0d, 0x1a492619bacb053b, 0xa756c4c8676a2cc7, 0xf6aa607a79d82cb5, 0xcffaf035c7912dcf, 0x578088fb546e8053, 0x39f9e77fc5a7d519, 0x1d781509c1649be8, 0xe9d5984919726224, 0xdda2ff47cb3732fc, 0xfc82a0bbecb47552, 0xa681dd40133a7bee, 0xca9098d4c870e97f, 0x8e8ad494318a1464, 0x7505298b399c3183, 0xd7d330786f4f8808} },
	Gi[] = { { .deg = 16,
		.sign = 1,
		.t = (uint64_t[]) {0xa759a0349b9dd355, 0xf6f55cd6387a95c3, 0x9dbd1602abc39b8a, 0x349f2eecfa0f31b2, 0x6b79eed303ce9458, 0x1584ba34fdc21a89, 0x63b8a51e4000958b, 0x28ffbb9dc15abf63, 0x816bf964983adbed, 0xd52125482df2795c, 0x85b5e49823ee7d6d, 0x6bdd86df04476963, 0x5d88a2bece8950cb, 0x203e31eca92e2c49, 0x970fbbc1436dd72f, 0xa3518b90585b79d0} },
	{ .deg = 16,
		.sign = 1,
		.t = (uint64_t[]) {0x8b08d69120f6d17f, 0x69cfc4c982ffbc2c, 0x5f842ceae48b1d3b, 0xb49c2798c4c06d5c, 0x6dce5e37077c2277, 0x54dc66582df370b6, 0x3037e42d7ef2c4af, 0xaf7660861be5d1ab, 0xe170fbf3e5f4d2ca, 0x8b295878a16cf8e3, 0x171881c485b3b254, 0x810fcfc9ec9b98a1, 0x8729ad7cd7bb4538, 0x4fde20c4e95f6438, 0x5e0e4a01c625d4ef, 0x14bce44a786e8db7} },
	{ .deg = 16,
		.sign = 1,
		.t = (uint64_t[]) {0x7a8026fdc97f490b, 0x8954c5f52bb40a86, 0xe57f79c7e9c1aed3, 0xdfb87bedb67b2b2b, 0xc03f398fdf6efdf6, 0x59345d1ff74f0a5e, 0xd9cf5c2a4e392fb6, 0x386ef6c2d4d0a726, 0xa7b38f9b726ea65a, 0x159eb5693021a36a, 0x8257d6f6ab3b82db, 0x4b417d559f6263c9, 0xee24e7c73bbe804c, 0xa26844209045a002, 0x6eee84a820223068, 0x8faf97ec2b8c7b92} },
	{ .deg = 16,
		.sign = 1,
		.t = (uint64_t[]) {0x6e1736363e1372d3, 0x2e9bc43c1323e35, 0x7825476d945d3f59, 0x67eec8cf1d6fe2ee, 0x4c8dfcd521badc67, 0x718ea949bdd2c914, 0x357eb2f15cbcef8d, 0x53a5b4b993e17263, 0x7380e78f87279751, 0xfe3bd2ff50acba0f, 0x53b6c71d0f6fe9fe, 0xf15bf140548505ce, 0x8f261d5db6c2774c, 0x612e2baca0568228, 0x942bd80ba7503f69, 0xb4b230a166a104e5} },
	{ .deg = 16,
		.sign = 1,
		.t = (uint64_t[]) {0x58b44a8e41497d18, 0x49c50d1bd7f7ea6a, 0xdd18b1995a839b1, 0x1520330475ea8a62, 0xdc0616cd1e00ed26, 0x919de9f47fb4dffb, 0xfc9bc20809f87367, 0xf0d77a821fafa352, 0x3bc10bf03c1d0bce, 0x3ee1245fe98d0ecf, 0x4fcbe60a465f903e, 0xf6323e419976a4e, 0xfad452fc62a6d030, 0x854a63ff248389f3, 0x5186813ee7d1e482, 0x27ef11808db28b58} },
	{ .deg = 16,
		.sign = 1,
		.t = (uint64_t[]) {0x566c6aaad9299e89, 0x9d4c44131e597198, 0xd1f1454c2a4fd49f, 0x7b6e4a842d6eefd7, 0xe75e9a14ec34863d, 0xf4ed7983a73fcfd5, 0x784b72fe3ac85c20, 0x17096a8c32d5a5aa, 0x5e9adf4d829a8b9d, 0xcc7cb3f553c8a14e, 0x8b1c64455798712e, 0xb0d33b21ed3948e2, 0x83b1641cf2dc6387, 0x2e3d3d58c8d35c17, 0xccf37a5fe91811c8, 0x926d94379705a4bf} },
	{ .deg = 16,
		.sign = 1,
		.t = (uint64_t[]) {0xdae58f31a556b39d, 0x53fef7c2b5eee888, 0xfe5c4e6b64e7753d, 0x96da7f87077fcc9b, 0x6466405bfd2c01ce, 0x327053a4ea5053d0, 0xbac6be97c74a542, 0xece0cae872351529, 0x93fd68b08e37cb14, 0x4bec67d731ce3126, 0xf2275074bad3dbaa, 0xdb9219e6389d77ef, 0x26b805c8497f64e4, 0x242d6b97f6b13a3c, 0x13c29879cbb3e561, 0x87880a95c3957c81} },
	{ .deg = 16,
		.sign = 1,
		.t = (uint64_t[]) {0x40152712b7029e11, 0xbe28da255c91d502, 0x56f8c7f85910ab26, 0xf3ac4a57c241a96c, 0xe2900f7999ba2d70, 0xa900034688e6f24d, 0x16fc03f5e9ac7569, 0xd8bc0e913de121, 0x4d403f916fed64ad, 0x32e9a947fa964e01, 0xd7668dbe35ef1f0b, 0xe17d438e07121557, 0xefd8f01d5cb5f54d, 0x75c74a6f31827690, 0xc06e602ea68dde38, 0x53609ef7d5d94249} }};

static _poly128 __theta__ = { .deg = 9,
	.hi = (int64_t[]) { -0x1b532fd50ea04, -0x787684d1d4ca, -0x1a3f828f74962, 0x10d3f82ee21da, 0x1aa7caa0364ef, -0x30a7110744cfb, 0xb0d8d2285762, -0xbeaa0c8f847e, -0xf8acf7a7ffec },
	.lo = (uint64_t[]) { 0xf9bf1c5ee3fa77b4, 0x94263aa2755a128e, 0x2241258ccb33a08a, 0x92d206e84a7b5315, 0x6ca11fa5b86d8ab3, 0x30359ae1d10cbabd, 0x8cc143c2269da387, 0xa3322d38fcc849cf, 0xa17403d4d1ac8135 } };
#endif
