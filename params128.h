#ifndef PMNS_PARAMS128_H_INCLUDED
#define PMNS_PARAMS128_H_INCLUDED

#define RHO 117
#define N 9
#define LAMBDA 2


static inline _Bool add_overflow(unsigned __int128* restrict a, const unsigned __int128 b)
{
	//return __builtin_add_overflow(*a, b, a);
	const unsigned __int128 tmp = *a;
	*a += b;
	return *a < tmp;
}

// Various values you can get from precalc
#define M_or_B_is_B

static const uint64_t Blo[N][N] = {
{6370055460685030535u, 16061105918843609624u, 4328392234833342812u, 2437698924466096453u, 10404600992058258183u, 7734529039411988058u, 2319678828568937656u, 6652932721972531731u, 13562128236008156491u}, {13305865443945063462u, 8677512398306761366u, 6370055460685030535u, 16061105918843609624u, 4328392234833342812u, 2437698924466096453u, 10404600992058258183u, 7734529039411988058u, 2319678828568937656u}, {9769231675402790250u, 12076688613024521081u, 2385638154865941992u, 14118351838876208804u, 16009045149243455163u, 8042143081651293433u, 10712215034297563558u, 16127065245140613960u, 11793811351737019885u}, {3174610913445259831u, 5787260658783655059u, 591714448126783247u, 1122448480428004262u, 1858846724253229644u, 13339306588490035299u, 1193878968075706269u, 2318455683968960980u, 11424042764437700238u}, {1659225373052346460u, 9040699112303724172u, 16480476357390323293u, 14464773057090416425u, 6961769908811813782u, 17183554399271613886u, 6187238959086572456u, 15777005512956131752u, 11598479960133964452u}, {9040699112303724172u, 16480476357390323293u, 14464773057090416425u, 6961769908811813782u, 17183554399271613886u, 6187238959086572456u, 15777005512956131752u, 11598479960133964452u, 10052984723380949038u}, {4038154741168886054u, 11510934090449518689u, 7383593520536848258u, 16405080847857863893u, 4823337079332038445u, 6076208757224915371u, 5296830114945891605u, 10361821910220231089u, 17365147756270095289u}, {13427728244865138654u, 8029280833737376995u, 6655060957437782180u, 2362124518514114489u, 16902471981556512878u, 17366370900870071965u, 6471339364974050328u, 8506917787655510112u, 3983194161219111867u}, {10480355751271327882u, 5019015828844412962u, 10417463239972174621u, 11791683116271769436u, 16084619555195437127u, 1544272092153038738u, 1080373172839479651u, 11975404708735501288u, 9939826286054041504u}
		},
	B1lo[N][N] = {
{2465718322936074467u, 14567831361614986453u, 798937857257565830u, 16904264348700927946u, 1028738213666144120u, 10278288971389367307u, 5850138446132452001u, 13528279945850699630u, 16972898375692281558u}, {14070451325594369673u, 16173960518434715728u, 17872351253508292704u, 11122759929559829557u, 4428150525256915306u, 4307658721123828331u, 2336432987085941493u, 1028738213666144120u, 4918464127858851986u}, {11191846958764758137u, 5492856948060110898u, 8671706812356063064u, 2582031140772910493u, 1971225734037886838u, 13459192916645771050u, 13395543484834665445u, 4428150525256915306u, 17418005860043407496u}, {6079938802541030291u, 8746299047687344432u, 5286558828029335792u, 4022462375208742051u, 63649431811105605u, 15977574625607575938u, 15535918266422351211u, 1971225734037886838u, 14018593548452636310u}, {7338976332544115711u, 8732034720423300518u, 3278467505244109243u, 16929419355739836715u, 441656359185224727u, 1111636567921541646u, 13722907401230949235u, 63649431811105605u, 16475518339671664778u}, {6695062406516489219u, 13197050834427555535u, 17775583001629309991u, 2752610938440715543u, 5835473240400144027u, 12205582683261234334u, 8197384635316536197u, 441656359185224727u, 18383094641898446011u}, {10313008870204121024u, 607511640269136020u, 7079065579795260827u, 10185710006581909814u, 4008198047944698137u, 10949995573757251740u, 8002304177722711624u, 5835473240400144027u, 18005087714524326889u}, {10886096255172064719u, 10926022134729066062u, 2831731184868126180u, 10002783536801615265u, 2947691396034540116u, 18188014184304621438u, 9578198366312773794u, 4008198047944698137u, 12611270833309407589u}, {14704018947796921849u, 9779539648441281409u, 3749627376244432189u, 3033072466996633795u, 8609815817991847644u, 1134237829404837443u, 17523505475782100819u, 2947691396034540116u, 14438546025764853479u}
		};
static const int64_t Bhi[N][N] = {
{20997317070503, -465929059694825, 4223483164220, -126315848154195, 22270859063594, 235039382439703, -660085418141257, 107062312409295, -201551921099820}, {214124624818590, -403103842199639, 20997317070503, -465929059694825, 4223483164220, -126315848154195, 22270859063594, 235039382439703, -660085418141257}, {403103842199638, -20997317070504, 465929059694824, -4223483164221, 126315848154194, -22270859063595, -235039382439704, 660085418141256, -107062312409296}, {64632836851971, -204611118580305, -697568597866638, 120284745633189, 325429941577188, 100645144822710, 286713914168990, -133762066439125, 676200741072664}, {202554632001157, 32230645862815, 278757461670561, -607714960779944, -676571280796135, -345644314061636, 329653424741408, -25670703331485, 308984773232584}, {32230645862815, 278757461670561, -607714960779944, -676571280796135, -345644314061636, 329653424741408, -25670703331485, 308984773232584, 101277316000578}, {917066994082875, -193127307748088, -62825217495186, -16773833906284, 339613211540629, 18047375899374, 361355230593898, -682356277204852, -127977070030409}, {214865704265530, 223551949071660, -433698413832009, 282980944834782, -734030808934139, -654300421732541, -110604931621932, -330431993399849, 81391609077811}, {-162783218155623, -214865704265531, -223551949071661, 433698413832008, -282980944834783, 734030808934138, 654300421732540, 110604931621931, 330431993399848}
		},
	B1hi[N][N] = {
{-3782395725074100582, 3488802545903172913, 2694516953012342902, -1283330978533796949, -882277531990831170, 4223167419878919915, -4837082148904464600, 1159972020774549348, -6582214182450063439}, {-7027447742355023579, 9170012938247145275, -8454229513803763889, -1745132033545598839, 9060249568783384515, -6120413127438261548, -4772133524436969862, -882277531990831170, -1159972020774549349}, {5932105545211519210, 7294257493029214539, 4012580318571114630, 3612161503662420513, -1348279603001291686, -6517265557982568701, 7531599101916807501, 9060249568783384515, 882277531990831169}, {-8413876633907638672, -3130302786580283461, 8366540468120777863, -6649321569925976332, 4397879413810175414, -7302983468130323602, -3682095989366794027, -1348279603001291686, -9060249568783384516}, {-5704398515559373075, 1019954036805389237, 232487695588736699, -5378153579416590490, -3620887478763529575, 8115326514416781258, -3519018783345692872, 4397879413810175414, 1348279603001291685}, {2170739180344401185, 1115791907412554986, -2966316976424844542, 4867298386346984557, -6812398775947077487, -8897172362762283361, -6398107616221979727, -3620887478763529575, -4397879413810175415}, {-7650757043677396476, -1431562437385330873, 8817233182542327100, 2000228202411804312, -2499064746540303634, -1530809229874995170, 3751506478934429570, -6812398775947077487, 3620887478763529574}, {-7372393957697959146, -5196345703778797526, -6242373658011794014, -130619000170899996, -5282315708809424740, 5751734681346233882, 3431790639797135185, -2499064746540303634, 6812398775947077486}, {8202554657965338943, -5391971639750680116, -4478540345266042194, 3380608136149942301, 2319944041549098697, 3301171639626235190, 5065726703607897529, -5282315708809424740, 2499064746540303633}
		};
static const __int128 B1[N][N] = {
	{ 
((__int128) LOW(-3782395725074100582) << 64) | 2465718322936074467u, ((__int128) LOW(3488802545903172913) << 64) | 14567831361614986453u, ((__int128) LOW(2694516953012342902) << 64) | 798937857257565830u, ((__int128) LOW(-1283330978533796949) << 64) | 16904264348700927946u, ((__int128) LOW(-882277531990831170) << 64) | 1028738213666144120u, ((__int128) LOW(4223167419878919915) << 64) | 10278288971389367307u, ((__int128) LOW(-4837082148904464600) << 64) | 5850138446132452001u, ((__int128) LOW(1159972020774549348) << 64) | 13528279945850699630u, ((__int128) LOW(-6582214182450063439) << 64) | 16972898375692281558u },
	{ 
((__int128) LOW(-7027447742355023579) << 64) | 14070451325594369673u, ((__int128) LOW(9170012938247145275) << 64) | 16173960518434715728u, ((__int128) LOW(-8454229513803763889) << 64) | 17872351253508292704u, ((__int128) LOW(-1745132033545598839) << 64) | 11122759929559829557u, ((__int128) LOW(9060249568783384515) << 64) | 4428150525256915306u, ((__int128) LOW(-6120413127438261548) << 64) | 4307658721123828331u, ((__int128) LOW(-4772133524436969862) << 64) | 2336432987085941493u, ((__int128) LOW(-882277531990831170) << 64) | 1028738213666144120u, ((__int128) LOW(-1159972020774549349) << 64) | 4918464127858851986u },
	{ 
((__int128) LOW(5932105545211519210) << 64) | 11191846958764758137u, ((__int128) LOW(7294257493029214539) << 64) | 5492856948060110898u, ((__int128) LOW(4012580318571114630) << 64) | 8671706812356063064u, ((__int128) LOW(3612161503662420513) << 64) | 2582031140772910493u, ((__int128) LOW(-1348279603001291686) << 64) | 1971225734037886838u, ((__int128) LOW(-6517265557982568701) << 64) | 13459192916645771050u, ((__int128) LOW(7531599101916807501) << 64) | 13395543484834665445u, ((__int128) LOW(9060249568783384515) << 64) | 4428150525256915306u, ((__int128) LOW(882277531990831169) << 64) | 17418005860043407496u },
	{ 
((__int128) LOW(-8413876633907638672) << 64) | 6079938802541030291u, ((__int128) LOW(-3130302786580283461) << 64) | 8746299047687344432u, ((__int128) LOW(8366540468120777863) << 64) | 5286558828029335792u, ((__int128) LOW(-6649321569925976332) << 64) | 4022462375208742051u, ((__int128) LOW(4397879413810175414) << 64) | 63649431811105605u, ((__int128) LOW(-7302983468130323602) << 64) | 15977574625607575938u, ((__int128) LOW(-3682095989366794027) << 64) | 15535918266422351211u, ((__int128) LOW(-1348279603001291686) << 64) | 1971225734037886838u, ((__int128) LOW(-9060249568783384516) << 64) | 14018593548452636310u },
	{ 
((__int128) LOW(-5704398515559373075) << 64) | 7338976332544115711u, ((__int128) LOW(1019954036805389237) << 64) | 8732034720423300518u, ((__int128) LOW(232487695588736699) << 64) | 3278467505244109243u, ((__int128) LOW(-5378153579416590490) << 64) | 16929419355739836715u, ((__int128) LOW(-3620887478763529575) << 64) | 441656359185224727u, ((__int128) LOW(8115326514416781258) << 64) | 1111636567921541646u, ((__int128) LOW(-3519018783345692872) << 64) | 13722907401230949235u, ((__int128) LOW(4397879413810175414) << 64) | 63649431811105605u, ((__int128) LOW(1348279603001291685) << 64) | 16475518339671664778u },
	{ 
((__int128) LOW(2170739180344401185) << 64) | 6695062406516489219u, ((__int128) LOW(1115791907412554986) << 64) | 13197050834427555535u, ((__int128) LOW(-2966316976424844542) << 64) | 17775583001629309991u, ((__int128) LOW(4867298386346984557) << 64) | 2752610938440715543u, ((__int128) LOW(-6812398775947077487) << 64) | 5835473240400144027u, ((__int128) LOW(-8897172362762283361) << 64) | 12205582683261234334u, ((__int128) LOW(-6398107616221979727) << 64) | 8197384635316536197u, ((__int128) LOW(-3620887478763529575) << 64) | 441656359185224727u, ((__int128) LOW(-4397879413810175415) << 64) | 18383094641898446011u },
	{ 
((__int128) LOW(-7650757043677396476) << 64) | 10313008870204121024u, ((__int128) LOW(-1431562437385330873) << 64) | 607511640269136020u, ((__int128) LOW(8817233182542327100) << 64) | 7079065579795260827u, ((__int128) LOW(2000228202411804312) << 64) | 10185710006581909814u, ((__int128) LOW(-2499064746540303634) << 64) | 4008198047944698137u, ((__int128) LOW(-1530809229874995170) << 64) | 10949995573757251740u, ((__int128) LOW(3751506478934429570) << 64) | 8002304177722711624u, ((__int128) LOW(-6812398775947077487) << 64) | 5835473240400144027u, ((__int128) LOW(3620887478763529574) << 64) | 18005087714524326889u },
	{ 
((__int128) LOW(-7372393957697959146) << 64) | 10886096255172064719u, ((__int128) LOW(-5196345703778797526) << 64) | 10926022134729066062u, ((__int128) LOW(-6242373658011794014) << 64) | 2831731184868126180u, ((__int128) LOW(-130619000170899996) << 64) | 10002783536801615265u, ((__int128) LOW(-5282315708809424740) << 64) | 2947691396034540116u, ((__int128) LOW(5751734681346233882) << 64) | 18188014184304621438u, ((__int128) LOW(3431790639797135185) << 64) | 9578198366312773794u, ((__int128) LOW(-2499064746540303634) << 64) | 4008198047944698137u, ((__int128) LOW(6812398775947077486) << 64) | 12611270833309407589u },
	{ 
((__int128) LOW(8202554657965338943) << 64) | 14704018947796921849u, ((__int128) LOW(-5391971639750680116) << 64) | 9779539648441281409u, ((__int128) LOW(-4478540345266042194) << 64) | 3749627376244432189u, ((__int128) LOW(3380608136149942301) << 64) | 3033072466996633795u, ((__int128) LOW(2319944041549098697) << 64) | 8609815817991847644u, ((__int128) LOW(3301171639626235190) << 64) | 1134237829404837443u, ((__int128) LOW(5065726703607897529) << 64) | 17523505475782100819u, ((__int128) LOW(-5282315708809424740) << 64) | 2947691396034540116u, ((__int128) LOW(2499064746540303633) << 64) | 14438546025764853479u }
		};

static inline void UNROLLED_m1_or_b1_mns128_mod_mult_ext_red(unsigned __int128* restrict Rlo,
	const restrict poly128 A)
{
Rlo[0] = (__int128) ((__int128) A->lo[0] * 2465718322936074467u) + ((__int128) (LOW(A->lo[0] * -3782395725074100582) + LOW(A->hi[0] * 2465718322936074467u)) << 64) + ((__int128) A->lo[1] * 14070451325594369673u) + ((__int128) (LOW(A->lo[1] * -7027447742355023579) + LOW(A->hi[1] * 14070451325594369673u)) << 64) + ((__int128) A->lo[2] * 11191846958764758137u) + ((__int128) (LOW(A->lo[2] * 5932105545211519210) + LOW(A->hi[2] * 11191846958764758137u)) << 64) + ((__int128) A->lo[3] * 6079938802541030291u) + ((__int128) (LOW(A->lo[3] * -8413876633907638672) + LOW(A->hi[3] * 6079938802541030291u)) << 64) + ((__int128) A->lo[4] * 7338976332544115711u) + ((__int128) (LOW(A->lo[4] * -5704398515559373075) + LOW(A->hi[4] * 7338976332544115711u)) << 64) + ((__int128) A->lo[5] * 6695062406516489219u) + ((__int128) (LOW(A->lo[5] * 2170739180344401185) + LOW(A->hi[5] * 6695062406516489219u)) << 64) + ((__int128) A->lo[6] * 10313008870204121024u) + ((__int128) (LOW(A->lo[6] * -7650757043677396476) + LOW(A->hi[6] * 10313008870204121024u)) << 64) + ((__int128) A->lo[7] * 10886096255172064719u) + ((__int128) (LOW(A->lo[7] * -7372393957697959146) + LOW(A->hi[7] * 10886096255172064719u)) << 64) + ((__int128) A->lo[8] * 14704018947796921849u) + ((__int128) (LOW(A->lo[8] * 8202554657965338943) + LOW(A->hi[8] * 14704018947796921849u)) << 64);
Rlo[1] = (__int128) ((__int128) A->lo[0] * 14567831361614986453u) + ((__int128) (LOW(A->lo[0] * 3488802545903172913) + LOW(A->hi[0] * 14567831361614986453u)) << 64) + ((__int128) A->lo[1] * 16173960518434715728u) + ((__int128) (LOW(A->lo[1] * 9170012938247145275) + LOW(A->hi[1] * 16173960518434715728u)) << 64) + ((__int128) A->lo[2] * 5492856948060110898u) + ((__int128) (LOW(A->lo[2] * 7294257493029214539) + LOW(A->hi[2] * 5492856948060110898u)) << 64) + ((__int128) A->lo[3] * 8746299047687344432u) + ((__int128) (LOW(A->lo[3] * -3130302786580283461) + LOW(A->hi[3] * 8746299047687344432u)) << 64) + ((__int128) A->lo[4] * 8732034720423300518u) + ((__int128) (LOW(A->lo[4] * 1019954036805389237) + LOW(A->hi[4] * 8732034720423300518u)) << 64) + ((__int128) A->lo[5] * 13197050834427555535u) + ((__int128) (LOW(A->lo[5] * 1115791907412554986) + LOW(A->hi[5] * 13197050834427555535u)) << 64) + ((__int128) A->lo[6] * 607511640269136020u) + ((__int128) (LOW(A->lo[6] * -1431562437385330873) + LOW(A->hi[6] * 607511640269136020u)) << 64) + ((__int128) A->lo[7] * 10926022134729066062u) + ((__int128) (LOW(A->lo[7] * -5196345703778797526) + LOW(A->hi[7] * 10926022134729066062u)) << 64) + ((__int128) A->lo[8] * 9779539648441281409u) + ((__int128) (LOW(A->lo[8] * -5391971639750680116) + LOW(A->hi[8] * 9779539648441281409u)) << 64);
Rlo[2] = (__int128) ((__int128) A->lo[0] * 798937857257565830u) + ((__int128) (LOW(A->lo[0] * 2694516953012342902) + LOW(A->hi[0] * 798937857257565830u)) << 64) + ((__int128) A->lo[1] * 17872351253508292704u) + ((__int128) (LOW(A->lo[1] * -8454229513803763889) + LOW(A->hi[1] * 17872351253508292704u)) << 64) + ((__int128) A->lo[2] * 8671706812356063064u) + ((__int128) (LOW(A->lo[2] * 4012580318571114630) + LOW(A->hi[2] * 8671706812356063064u)) << 64) + ((__int128) A->lo[3] * 5286558828029335792u) + ((__int128) (LOW(A->lo[3] * 8366540468120777863) + LOW(A->hi[3] * 5286558828029335792u)) << 64) + ((__int128) A->lo[4] * 3278467505244109243u) + ((__int128) (LOW(A->lo[4] * 232487695588736699) + LOW(A->hi[4] * 3278467505244109243u)) << 64) + ((__int128) A->lo[5] * 17775583001629309991u) + ((__int128) (LOW(A->lo[5] * -2966316976424844542) + LOW(A->hi[5] * 17775583001629309991u)) << 64) + ((__int128) A->lo[6] * 7079065579795260827u) + ((__int128) (LOW(A->lo[6] * 8817233182542327100) + LOW(A->hi[6] * 7079065579795260827u)) << 64) + ((__int128) A->lo[7] * 2831731184868126180u) + ((__int128) (LOW(A->lo[7] * -6242373658011794014) + LOW(A->hi[7] * 2831731184868126180u)) << 64) + ((__int128) A->lo[8] * 3749627376244432189u) + ((__int128) (LOW(A->lo[8] * -4478540345266042194) + LOW(A->hi[8] * 3749627376244432189u)) << 64);
Rlo[3] = (__int128) ((__int128) A->lo[0] * 16904264348700927946u) + ((__int128) (LOW(A->lo[0] * -1283330978533796949) + LOW(A->hi[0] * 16904264348700927946u)) << 64) + ((__int128) A->lo[1] * 11122759929559829557u) + ((__int128) (LOW(A->lo[1] * -1745132033545598839) + LOW(A->hi[1] * 11122759929559829557u)) << 64) + ((__int128) A->lo[2] * 2582031140772910493u) + ((__int128) (LOW(A->lo[2] * 3612161503662420513) + LOW(A->hi[2] * 2582031140772910493u)) << 64) + ((__int128) A->lo[3] * 4022462375208742051u) + ((__int128) (LOW(A->lo[3] * -6649321569925976332) + LOW(A->hi[3] * 4022462375208742051u)) << 64) + ((__int128) A->lo[4] * 16929419355739836715u) + ((__int128) (LOW(A->lo[4] * -5378153579416590490) + LOW(A->hi[4] * 16929419355739836715u)) << 64) + ((__int128) A->lo[5] * 2752610938440715543u) + ((__int128) (LOW(A->lo[5] * 4867298386346984557) + LOW(A->hi[5] * 2752610938440715543u)) << 64) + ((__int128) A->lo[6] * 10185710006581909814u) + ((__int128) (LOW(A->lo[6] * 2000228202411804312) + LOW(A->hi[6] * 10185710006581909814u)) << 64) + ((__int128) A->lo[7] * 10002783536801615265u) + ((__int128) (LOW(A->lo[7] * -130619000170899996) + LOW(A->hi[7] * 10002783536801615265u)) << 64) + ((__int128) A->lo[8] * 3033072466996633795u) + ((__int128) (LOW(A->lo[8] * 3380608136149942301) + LOW(A->hi[8] * 3033072466996633795u)) << 64);
Rlo[4] = (__int128) ((__int128) A->lo[0] * 1028738213666144120u) + ((__int128) (LOW(A->lo[0] * -882277531990831170) + LOW(A->hi[0] * 1028738213666144120u)) << 64) + ((__int128) A->lo[1] * 4428150525256915306u) + ((__int128) (LOW(A->lo[1] * 9060249568783384515) + LOW(A->hi[1] * 4428150525256915306u)) << 64) + ((__int128) A->lo[2] * 1971225734037886838u) + ((__int128) (LOW(A->lo[2] * -1348279603001291686) + LOW(A->hi[2] * 1971225734037886838u)) << 64) + ((__int128) A->lo[3] * 63649431811105605u) + ((__int128) (LOW(A->lo[3] * 4397879413810175414) + LOW(A->hi[3] * 63649431811105605u)) << 64) + ((__int128) A->lo[4] * 441656359185224727u) + ((__int128) (LOW(A->lo[4] * -3620887478763529575) + LOW(A->hi[4] * 441656359185224727u)) << 64) + ((__int128) A->lo[5] * 5835473240400144027u) + ((__int128) (LOW(A->lo[5] * -6812398775947077487) + LOW(A->hi[5] * 5835473240400144027u)) << 64) + ((__int128) A->lo[6] * 4008198047944698137u) + ((__int128) (LOW(A->lo[6] * -2499064746540303634) + LOW(A->hi[6] * 4008198047944698137u)) << 64) + ((__int128) A->lo[7] * 2947691396034540116u) + ((__int128) (LOW(A->lo[7] * -5282315708809424740) + LOW(A->hi[7] * 2947691396034540116u)) << 64) + ((__int128) A->lo[8] * 8609815817991847644u) + ((__int128) (LOW(A->lo[8] * 2319944041549098697) + LOW(A->hi[8] * 8609815817991847644u)) << 64);
Rlo[5] = (__int128) ((__int128) A->lo[0] * 10278288971389367307u) + ((__int128) (LOW(A->lo[0] * 4223167419878919915) + LOW(A->hi[0] * 10278288971389367307u)) << 64) + ((__int128) A->lo[1] * 4307658721123828331u) + ((__int128) (LOW(A->lo[1] * -6120413127438261548) + LOW(A->hi[1] * 4307658721123828331u)) << 64) + ((__int128) A->lo[2] * 13459192916645771050u) + ((__int128) (LOW(A->lo[2] * -6517265557982568701) + LOW(A->hi[2] * 13459192916645771050u)) << 64) + ((__int128) A->lo[3] * 15977574625607575938u) + ((__int128) (LOW(A->lo[3] * -7302983468130323602) + LOW(A->hi[3] * 15977574625607575938u)) << 64) + ((__int128) A->lo[4] * 1111636567921541646u) + ((__int128) (LOW(A->lo[4] * 8115326514416781258) + LOW(A->hi[4] * 1111636567921541646u)) << 64) + ((__int128) A->lo[5] * 12205582683261234334u) + ((__int128) (LOW(A->lo[5] * -8897172362762283361) + LOW(A->hi[5] * 12205582683261234334u)) << 64) + ((__int128) A->lo[6] * 10949995573757251740u) + ((__int128) (LOW(A->lo[6] * -1530809229874995170) + LOW(A->hi[6] * 10949995573757251740u)) << 64) + ((__int128) A->lo[7] * 18188014184304621438u) + ((__int128) (LOW(A->lo[7] * 5751734681346233882) + LOW(A->hi[7] * 18188014184304621438u)) << 64) + ((__int128) A->lo[8] * 1134237829404837443u) + ((__int128) (LOW(A->lo[8] * 3301171639626235190) + LOW(A->hi[8] * 1134237829404837443u)) << 64);
Rlo[6] = (__int128) ((__int128) A->lo[0] * 5850138446132452001u) + ((__int128) (LOW(A->lo[0] * -4837082148904464600) + LOW(A->hi[0] * 5850138446132452001u)) << 64) + ((__int128) A->lo[1] * 2336432987085941493u) + ((__int128) (LOW(A->lo[1] * -4772133524436969862) + LOW(A->hi[1] * 2336432987085941493u)) << 64) + ((__int128) A->lo[2] * 13395543484834665445u) + ((__int128) (LOW(A->lo[2] * 7531599101916807501) + LOW(A->hi[2] * 13395543484834665445u)) << 64) + ((__int128) A->lo[3] * 15535918266422351211u) + ((__int128) (LOW(A->lo[3] * -3682095989366794027) + LOW(A->hi[3] * 15535918266422351211u)) << 64) + ((__int128) A->lo[4] * 13722907401230949235u) + ((__int128) (LOW(A->lo[4] * -3519018783345692872) + LOW(A->hi[4] * 13722907401230949235u)) << 64) + ((__int128) A->lo[5] * 8197384635316536197u) + ((__int128) (LOW(A->lo[5] * -6398107616221979727) + LOW(A->hi[5] * 8197384635316536197u)) << 64) + ((__int128) A->lo[6] * 8002304177722711624u) + ((__int128) (LOW(A->lo[6] * 3751506478934429570) + LOW(A->hi[6] * 8002304177722711624u)) << 64) + ((__int128) A->lo[7] * 9578198366312773794u) + ((__int128) (LOW(A->lo[7] * 3431790639797135185) + LOW(A->hi[7] * 9578198366312773794u)) << 64) + ((__int128) A->lo[8] * 17523505475782100819u) + ((__int128) (LOW(A->lo[8] * 5065726703607897529) + LOW(A->hi[8] * 17523505475782100819u)) << 64);
Rlo[7] = (__int128) ((__int128) A->lo[0] * 13528279945850699630u) + ((__int128) (LOW(A->lo[0] * 1159972020774549348) + LOW(A->hi[0] * 13528279945850699630u)) << 64) + ((__int128) A->lo[1] * 1028738213666144120u) + ((__int128) (LOW(A->lo[1] * -882277531990831170) + LOW(A->hi[1] * 1028738213666144120u)) << 64) + ((__int128) A->lo[2] * 4428150525256915306u) + ((__int128) (LOW(A->lo[2] * 9060249568783384515) + LOW(A->hi[2] * 4428150525256915306u)) << 64) + ((__int128) A->lo[3] * 1971225734037886838u) + ((__int128) (LOW(A->lo[3] * -1348279603001291686) + LOW(A->hi[3] * 1971225734037886838u)) << 64) + ((__int128) A->lo[4] * 63649431811105605u) + ((__int128) (LOW(A->lo[4] * 4397879413810175414) + LOW(A->hi[4] * 63649431811105605u)) << 64) + ((__int128) A->lo[5] * 441656359185224727u) + ((__int128) (LOW(A->lo[5] * -3620887478763529575) + LOW(A->hi[5] * 441656359185224727u)) << 64) + ((__int128) A->lo[6] * 5835473240400144027u) + ((__int128) (LOW(A->lo[6] * -6812398775947077487) + LOW(A->hi[6] * 5835473240400144027u)) << 64) + ((__int128) A->lo[7] * 4008198047944698137u) + ((__int128) (LOW(A->lo[7] * -2499064746540303634) + LOW(A->hi[7] * 4008198047944698137u)) << 64) + ((__int128) A->lo[8] * 2947691396034540116u) + ((__int128) (LOW(A->lo[8] * -5282315708809424740) + LOW(A->hi[8] * 2947691396034540116u)) << 64);
Rlo[8] = (__int128) ((__int128) A->lo[0] * 16972898375692281558u) + ((__int128) (LOW(A->lo[0] * -6582214182450063439) + LOW(A->hi[0] * 16972898375692281558u)) << 64) + ((__int128) A->lo[1] * 4918464127858851986u) + ((__int128) (LOW(A->lo[1] * -1159972020774549349) + LOW(A->hi[1] * 4918464127858851986u)) << 64) + ((__int128) A->lo[2] * 17418005860043407496u) + ((__int128) (LOW(A->lo[2] * 882277531990831169) + LOW(A->hi[2] * 17418005860043407496u)) << 64) + ((__int128) A->lo[3] * 14018593548452636310u) + ((__int128) (LOW(A->lo[3] * -9060249568783384516) + LOW(A->hi[3] * 14018593548452636310u)) << 64) + ((__int128) A->lo[4] * 16475518339671664778u) + ((__int128) (LOW(A->lo[4] * 1348279603001291685) + LOW(A->hi[4] * 16475518339671664778u)) << 64) + ((__int128) A->lo[5] * 18383094641898446011u) + ((__int128) (LOW(A->lo[5] * -4397879413810175415) + LOW(A->hi[5] * 18383094641898446011u)) << 64) + ((__int128) A->lo[6] * 18005087714524326889u) + ((__int128) (LOW(A->lo[6] * 3620887478763529574) + LOW(A->hi[6] * 18005087714524326889u)) << 64) + ((__int128) A->lo[7] * 12611270833309407589u) + ((__int128) (LOW(A->lo[7] * 6812398775947077486) + LOW(A->hi[7] * 12611270833309407589u)) << 64) + ((__int128) A->lo[8] * 14438546025764853479u) + ((__int128) (LOW(A->lo[8] * 2499064746540303633) + LOW(A->hi[8] * 14438546025764853479u)) << 64);
}


static inline void UNROLLED_m_or_b_mns128_mod_mult_ext_red(__int128* restrict Rhi, 
	unsigned __int128* restrict Rlo, const restrict poly128 A)
{
	unsigned __int128 A0B0, A1B0, A0B1, tmplo;
	__int128 A1B1, aux2, aux3;

	A1B1 = (__int128) LOW(A->hi[0]) * 20997317070503;
	A1B0 = (__int128) LOW(A->hi[0]) * 6370055460685030535u;
	A0B1 = (__int128) (A->lo[0]) * 20997317070503;
	A0B0 = (__int128) (A->lo[0]) * 6370055460685030535u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[0] += (__int128) aux2 + A1B1 +
		add_overflow(Rlo + 0, tmplo);

	A1B1 = (__int128) LOW(A->hi[1]) * 214124624818590;
	A1B0 = (__int128) LOW(A->hi[1]) * 13305865443945063462u;
	A0B1 = (__int128) (A->lo[1]) * 214124624818590;
	A0B0 = (__int128) (A->lo[1]) * 13305865443945063462u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[0] += (__int128) aux2 + A1B1 +
		add_overflow(Rlo + 0, tmplo);

	A1B1 = (__int128) LOW(A->hi[2]) * 403103842199638;
	A1B0 = (__int128) LOW(A->hi[2]) * 9769231675402790250u;
	A0B1 = (__int128) (A->lo[2]) * 403103842199638;
	A0B0 = (__int128) (A->lo[2]) * 9769231675402790250u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[0] += (__int128) aux2 + A1B1 +
		add_overflow(Rlo + 0, tmplo);

	A1B1 = (__int128) LOW(A->hi[3]) * 64632836851971;
	A1B0 = (__int128) LOW(A->hi[3]) * 3174610913445259831u;
	A0B1 = (__int128) (A->lo[3]) * 64632836851971;
	A0B0 = (__int128) (A->lo[3]) * 3174610913445259831u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[0] += (__int128) aux2 + A1B1 +
		add_overflow(Rlo + 0, tmplo);

	A1B1 = (__int128) LOW(A->hi[4]) * 202554632001157;
	A1B0 = (__int128) LOW(A->hi[4]) * 1659225373052346460u;
	A0B1 = (__int128) (A->lo[4]) * 202554632001157;
	A0B0 = (__int128) (A->lo[4]) * 1659225373052346460u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[0] += (__int128) aux2 + A1B1 +
		add_overflow(Rlo + 0, tmplo);

	A1B1 = (__int128) LOW(A->hi[5]) * 32230645862815;
	A1B0 = (__int128) LOW(A->hi[5]) * 9040699112303724172u;
	A0B1 = (__int128) (A->lo[5]) * 32230645862815;
	A0B0 = (__int128) (A->lo[5]) * 9040699112303724172u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[0] += (__int128) aux2 + A1B1 +
		add_overflow(Rlo + 0, tmplo);

	A1B1 = (__int128) LOW(A->hi[6]) * 917066994082875;
	A1B0 = (__int128) LOW(A->hi[6]) * 4038154741168886054u;
	A0B1 = (__int128) (A->lo[6]) * 917066994082875;
	A0B0 = (__int128) (A->lo[6]) * 4038154741168886054u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[0] += (__int128) aux2 + A1B1 +
		add_overflow(Rlo + 0, tmplo);

	A1B1 = (__int128) LOW(A->hi[7]) * 214865704265530;
	A1B0 = (__int128) LOW(A->hi[7]) * 13427728244865138654u;
	A0B1 = (__int128) (A->lo[7]) * 214865704265530;
	A0B0 = (__int128) (A->lo[7]) * 13427728244865138654u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[0] += (__int128) aux2 + A1B1 +
		add_overflow(Rlo + 0, tmplo);

	A1B1 = (__int128) LOW(A->hi[8]) * -162783218155623;
	A1B0 = (__int128) LOW(A->hi[8]) * 10480355751271327882u;
	A0B1 = (__int128) (A->lo[8]) * -162783218155623;
	A0B0 = (__int128) (A->lo[8]) * 10480355751271327882u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[0] += (__int128) aux2 + A1B1 +
		add_overflow(Rlo + 0, tmplo);

	A1B1 = (__int128) LOW(A->hi[0]) * -465929059694825;
	A1B0 = (__int128) LOW(A->hi[0]) * 16061105918843609624u;
	A0B1 = (__int128) (A->lo[0]) * -465929059694825;
	A0B0 = (__int128) (A->lo[0]) * 16061105918843609624u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[1] += (__int128) aux2 + A1B1 +
		add_overflow(Rlo + 1, tmplo);

	A1B1 = (__int128) LOW(A->hi[1]) * -403103842199639;
	A1B0 = (__int128) LOW(A->hi[1]) * 8677512398306761366u;
	A0B1 = (__int128) (A->lo[1]) * -403103842199639;
	A0B0 = (__int128) (A->lo[1]) * 8677512398306761366u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[1] += (__int128) aux2 + A1B1 +
		add_overflow(Rlo + 1, tmplo);

	A1B1 = (__int128) LOW(A->hi[2]) * -20997317070504;
	A1B0 = (__int128) LOW(A->hi[2]) * 12076688613024521081u;
	A0B1 = (__int128) (A->lo[2]) * -20997317070504;
	A0B0 = (__int128) (A->lo[2]) * 12076688613024521081u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[1] += (__int128) aux2 + A1B1 +
		add_overflow(Rlo + 1, tmplo);

	A1B1 = (__int128) LOW(A->hi[3]) * -204611118580305;
	A1B0 = (__int128) LOW(A->hi[3]) * 5787260658783655059u;
	A0B1 = (__int128) (A->lo[3]) * -204611118580305;
	A0B0 = (__int128) (A->lo[3]) * 5787260658783655059u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[1] += (__int128) aux2 + A1B1 +
		add_overflow(Rlo + 1, tmplo);

	A1B1 = (__int128) LOW(A->hi[4]) * 32230645862815;
	A1B0 = (__int128) LOW(A->hi[4]) * 9040699112303724172u;
	A0B1 = (__int128) (A->lo[4]) * 32230645862815;
	A0B0 = (__int128) (A->lo[4]) * 9040699112303724172u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[1] += (__int128) aux2 + A1B1 +
		add_overflow(Rlo + 1, tmplo);

	A1B1 = (__int128) LOW(A->hi[5]) * 278757461670561;
	A1B0 = (__int128) LOW(A->hi[5]) * 16480476357390323293u;
	A0B1 = (__int128) (A->lo[5]) * 278757461670561;
	A0B0 = (__int128) (A->lo[5]) * 16480476357390323293u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[1] += (__int128) aux2 + A1B1 +
		add_overflow(Rlo + 1, tmplo);

	A1B1 = (__int128) LOW(A->hi[6]) * -193127307748088;
	A1B0 = (__int128) LOW(A->hi[6]) * 11510934090449518689u;
	A0B1 = (__int128) (A->lo[6]) * -193127307748088;
	A0B0 = (__int128) (A->lo[6]) * 11510934090449518689u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[1] += (__int128) aux2 + A1B1 +
		add_overflow(Rlo + 1, tmplo);

	A1B1 = (__int128) LOW(A->hi[7]) * 223551949071660;
	A1B0 = (__int128) LOW(A->hi[7]) * 8029280833737376995u;
	A0B1 = (__int128) (A->lo[7]) * 223551949071660;
	A0B0 = (__int128) (A->lo[7]) * 8029280833737376995u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[1] += (__int128) aux2 + A1B1 +
		add_overflow(Rlo + 1, tmplo);

	A1B1 = (__int128) LOW(A->hi[8]) * -214865704265531;
	A1B0 = (__int128) LOW(A->hi[8]) * 5019015828844412962u;
	A0B1 = (__int128) (A->lo[8]) * -214865704265531;
	A0B0 = (__int128) (A->lo[8]) * 5019015828844412962u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[1] += (__int128) aux2 + A1B1 +
		add_overflow(Rlo + 1, tmplo);

	A1B1 = (__int128) LOW(A->hi[0]) * 4223483164220;
	A1B0 = (__int128) LOW(A->hi[0]) * 4328392234833342812u;
	A0B1 = (__int128) (A->lo[0]) * 4223483164220;
	A0B0 = (__int128) (A->lo[0]) * 4328392234833342812u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[2] += (__int128) aux2 + A1B1 +
		add_overflow(Rlo + 2, tmplo);

	A1B1 = (__int128) LOW(A->hi[1]) * 20997317070503;
	A1B0 = (__int128) LOW(A->hi[1]) * 6370055460685030535u;
	A0B1 = (__int128) (A->lo[1]) * 20997317070503;
	A0B0 = (__int128) (A->lo[1]) * 6370055460685030535u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[2] += (__int128) aux2 + A1B1 +
		add_overflow(Rlo + 2, tmplo);

	A1B1 = (__int128) LOW(A->hi[2]) * 465929059694824;
	A1B0 = (__int128) LOW(A->hi[2]) * 2385638154865941992u;
	A0B1 = (__int128) (A->lo[2]) * 465929059694824;
	A0B0 = (__int128) (A->lo[2]) * 2385638154865941992u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[2] += (__int128) aux2 + A1B1 +
		add_overflow(Rlo + 2, tmplo);

	A1B1 = (__int128) LOW(A->hi[3]) * -697568597866638;
	A1B0 = (__int128) LOW(A->hi[3]) * 591714448126783247u;
	A0B1 = (__int128) (A->lo[3]) * -697568597866638;
	A0B0 = (__int128) (A->lo[3]) * 591714448126783247u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[2] += (__int128) aux2 + A1B1 +
		add_overflow(Rlo + 2, tmplo);

	A1B1 = (__int128) LOW(A->hi[4]) * 278757461670561;
	A1B0 = (__int128) LOW(A->hi[4]) * 16480476357390323293u;
	A0B1 = (__int128) (A->lo[4]) * 278757461670561;
	A0B0 = (__int128) (A->lo[4]) * 16480476357390323293u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[2] += (__int128) aux2 + A1B1 +
		add_overflow(Rlo + 2, tmplo);

	A1B1 = (__int128) LOW(A->hi[5]) * -607714960779944;
	A1B0 = (__int128) LOW(A->hi[5]) * 14464773057090416425u;
	A0B1 = (__int128) (A->lo[5]) * -607714960779944;
	A0B0 = (__int128) (A->lo[5]) * 14464773057090416425u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[2] += (__int128) aux2 + A1B1 +
		add_overflow(Rlo + 2, tmplo);

	A1B1 = (__int128) LOW(A->hi[6]) * -62825217495186;
	A1B0 = (__int128) LOW(A->hi[6]) * 7383593520536848258u;
	A0B1 = (__int128) (A->lo[6]) * -62825217495186;
	A0B0 = (__int128) (A->lo[6]) * 7383593520536848258u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[2] += (__int128) aux2 + A1B1 +
		add_overflow(Rlo + 2, tmplo);

	A1B1 = (__int128) LOW(A->hi[7]) * -433698413832009;
	A1B0 = (__int128) LOW(A->hi[7]) * 6655060957437782180u;
	A0B1 = (__int128) (A->lo[7]) * -433698413832009;
	A0B0 = (__int128) (A->lo[7]) * 6655060957437782180u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[2] += (__int128) aux2 + A1B1 +
		add_overflow(Rlo + 2, tmplo);

	A1B1 = (__int128) LOW(A->hi[8]) * -223551949071661;
	A1B0 = (__int128) LOW(A->hi[8]) * 10417463239972174621u;
	A0B1 = (__int128) (A->lo[8]) * -223551949071661;
	A0B0 = (__int128) (A->lo[8]) * 10417463239972174621u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[2] += (__int128) aux2 + A1B1 +
		add_overflow(Rlo + 2, tmplo);

	A1B1 = (__int128) LOW(A->hi[0]) * -126315848154195;
	A1B0 = (__int128) LOW(A->hi[0]) * 2437698924466096453u;
	A0B1 = (__int128) (A->lo[0]) * -126315848154195;
	A0B0 = (__int128) (A->lo[0]) * 2437698924466096453u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[3] += (__int128) aux2 + A1B1 +
		add_overflow(Rlo + 3, tmplo);

	A1B1 = (__int128) LOW(A->hi[1]) * -465929059694825;
	A1B0 = (__int128) LOW(A->hi[1]) * 16061105918843609624u;
	A0B1 = (__int128) (A->lo[1]) * -465929059694825;
	A0B0 = (__int128) (A->lo[1]) * 16061105918843609624u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[3] += (__int128) aux2 + A1B1 +
		add_overflow(Rlo + 3, tmplo);

	A1B1 = (__int128) LOW(A->hi[2]) * -4223483164221;
	A1B0 = (__int128) LOW(A->hi[2]) * 14118351838876208804u;
	A0B1 = (__int128) (A->lo[2]) * -4223483164221;
	A0B0 = (__int128) (A->lo[2]) * 14118351838876208804u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[3] += (__int128) aux2 + A1B1 +
		add_overflow(Rlo + 3, tmplo);

	A1B1 = (__int128) LOW(A->hi[3]) * 120284745633189;
	A1B0 = (__int128) LOW(A->hi[3]) * 1122448480428004262u;
	A0B1 = (__int128) (A->lo[3]) * 120284745633189;
	A0B0 = (__int128) (A->lo[3]) * 1122448480428004262u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[3] += (__int128) aux2 + A1B1 +
		add_overflow(Rlo + 3, tmplo);

	A1B1 = (__int128) LOW(A->hi[4]) * -607714960779944;
	A1B0 = (__int128) LOW(A->hi[4]) * 14464773057090416425u;
	A0B1 = (__int128) (A->lo[4]) * -607714960779944;
	A0B0 = (__int128) (A->lo[4]) * 14464773057090416425u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[3] += (__int128) aux2 + A1B1 +
		add_overflow(Rlo + 3, tmplo);

	A1B1 = (__int128) LOW(A->hi[5]) * -676571280796135;
	A1B0 = (__int128) LOW(A->hi[5]) * 6961769908811813782u;
	A0B1 = (__int128) (A->lo[5]) * -676571280796135;
	A0B0 = (__int128) (A->lo[5]) * 6961769908811813782u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[3] += (__int128) aux2 + A1B1 +
		add_overflow(Rlo + 3, tmplo);

	A1B1 = (__int128) LOW(A->hi[6]) * -16773833906284;
	A1B0 = (__int128) LOW(A->hi[6]) * 16405080847857863893u;
	A0B1 = (__int128) (A->lo[6]) * -16773833906284;
	A0B0 = (__int128) (A->lo[6]) * 16405080847857863893u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[3] += (__int128) aux2 + A1B1 +
		add_overflow(Rlo + 3, tmplo);

	A1B1 = (__int128) LOW(A->hi[7]) * 282980944834782;
	A1B0 = (__int128) LOW(A->hi[7]) * 2362124518514114489u;
	A0B1 = (__int128) (A->lo[7]) * 282980944834782;
	A0B0 = (__int128) (A->lo[7]) * 2362124518514114489u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[3] += (__int128) aux2 + A1B1 +
		add_overflow(Rlo + 3, tmplo);

	A1B1 = (__int128) LOW(A->hi[8]) * 433698413832008;
	A1B0 = (__int128) LOW(A->hi[8]) * 11791683116271769436u;
	A0B1 = (__int128) (A->lo[8]) * 433698413832008;
	A0B0 = (__int128) (A->lo[8]) * 11791683116271769436u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[3] += (__int128) aux2 + A1B1 +
		add_overflow(Rlo + 3, tmplo);

	A1B1 = (__int128) LOW(A->hi[0]) * 22270859063594;
	A1B0 = (__int128) LOW(A->hi[0]) * 10404600992058258183u;
	A0B1 = (__int128) (A->lo[0]) * 22270859063594;
	A0B0 = (__int128) (A->lo[0]) * 10404600992058258183u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[4] += (__int128) aux2 + A1B1 +
		add_overflow(Rlo + 4, tmplo);

	A1B1 = (__int128) LOW(A->hi[1]) * 4223483164220;
	A1B0 = (__int128) LOW(A->hi[1]) * 4328392234833342812u;
	A0B1 = (__int128) (A->lo[1]) * 4223483164220;
	A0B0 = (__int128) (A->lo[1]) * 4328392234833342812u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[4] += (__int128) aux2 + A1B1 +
		add_overflow(Rlo + 4, tmplo);

	A1B1 = (__int128) LOW(A->hi[2]) * 126315848154194;
	A1B0 = (__int128) LOW(A->hi[2]) * 16009045149243455163u;
	A0B1 = (__int128) (A->lo[2]) * 126315848154194;
	A0B0 = (__int128) (A->lo[2]) * 16009045149243455163u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[4] += (__int128) aux2 + A1B1 +
		add_overflow(Rlo + 4, tmplo);

	A1B1 = (__int128) LOW(A->hi[3]) * 325429941577188;
	A1B0 = (__int128) LOW(A->hi[3]) * 1858846724253229644u;
	A0B1 = (__int128) (A->lo[3]) * 325429941577188;
	A0B0 = (__int128) (A->lo[3]) * 1858846724253229644u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[4] += (__int128) aux2 + A1B1 +
		add_overflow(Rlo + 4, tmplo);

	A1B1 = (__int128) LOW(A->hi[4]) * -676571280796135;
	A1B0 = (__int128) LOW(A->hi[4]) * 6961769908811813782u;
	A0B1 = (__int128) (A->lo[4]) * -676571280796135;
	A0B0 = (__int128) (A->lo[4]) * 6961769908811813782u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[4] += (__int128) aux2 + A1B1 +
		add_overflow(Rlo + 4, tmplo);

	A1B1 = (__int128) LOW(A->hi[5]) * -345644314061636;
	A1B0 = (__int128) LOW(A->hi[5]) * 17183554399271613886u;
	A0B1 = (__int128) (A->lo[5]) * -345644314061636;
	A0B0 = (__int128) (A->lo[5]) * 17183554399271613886u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[4] += (__int128) aux2 + A1B1 +
		add_overflow(Rlo + 4, tmplo);

	A1B1 = (__int128) LOW(A->hi[6]) * 339613211540629;
	A1B0 = (__int128) LOW(A->hi[6]) * 4823337079332038445u;
	A0B1 = (__int128) (A->lo[6]) * 339613211540629;
	A0B0 = (__int128) (A->lo[6]) * 4823337079332038445u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[4] += (__int128) aux2 + A1B1 +
		add_overflow(Rlo + 4, tmplo);

	A1B1 = (__int128) LOW(A->hi[7]) * -734030808934139;
	A1B0 = (__int128) LOW(A->hi[7]) * 16902471981556512878u;
	A0B1 = (__int128) (A->lo[7]) * -734030808934139;
	A0B0 = (__int128) (A->lo[7]) * 16902471981556512878u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[4] += (__int128) aux2 + A1B1 +
		add_overflow(Rlo + 4, tmplo);

	A1B1 = (__int128) LOW(A->hi[8]) * -282980944834783;
	A1B0 = (__int128) LOW(A->hi[8]) * 16084619555195437127u;
	A0B1 = (__int128) (A->lo[8]) * -282980944834783;
	A0B0 = (__int128) (A->lo[8]) * 16084619555195437127u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[4] += (__int128) aux2 + A1B1 +
		add_overflow(Rlo + 4, tmplo);

	A1B1 = (__int128) LOW(A->hi[0]) * 235039382439703;
	A1B0 = (__int128) LOW(A->hi[0]) * 7734529039411988058u;
	A0B1 = (__int128) (A->lo[0]) * 235039382439703;
	A0B0 = (__int128) (A->lo[0]) * 7734529039411988058u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[5] += (__int128) aux2 + A1B1 +
		add_overflow(Rlo + 5, tmplo);

	A1B1 = (__int128) LOW(A->hi[1]) * -126315848154195;
	A1B0 = (__int128) LOW(A->hi[1]) * 2437698924466096453u;
	A0B1 = (__int128) (A->lo[1]) * -126315848154195;
	A0B0 = (__int128) (A->lo[1]) * 2437698924466096453u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[5] += (__int128) aux2 + A1B1 +
		add_overflow(Rlo + 5, tmplo);

	A1B1 = (__int128) LOW(A->hi[2]) * -22270859063595;
	A1B0 = (__int128) LOW(A->hi[2]) * 8042143081651293433u;
	A0B1 = (__int128) (A->lo[2]) * -22270859063595;
	A0B0 = (__int128) (A->lo[2]) * 8042143081651293433u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[5] += (__int128) aux2 + A1B1 +
		add_overflow(Rlo + 5, tmplo);

	A1B1 = (__int128) LOW(A->hi[3]) * 100645144822710;
	A1B0 = (__int128) LOW(A->hi[3]) * 13339306588490035299u;
	A0B1 = (__int128) (A->lo[3]) * 100645144822710;
	A0B0 = (__int128) (A->lo[3]) * 13339306588490035299u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[5] += (__int128) aux2 + A1B1 +
		add_overflow(Rlo + 5, tmplo);

	A1B1 = (__int128) LOW(A->hi[4]) * -345644314061636;
	A1B0 = (__int128) LOW(A->hi[4]) * 17183554399271613886u;
	A0B1 = (__int128) (A->lo[4]) * -345644314061636;
	A0B0 = (__int128) (A->lo[4]) * 17183554399271613886u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[5] += (__int128) aux2 + A1B1 +
		add_overflow(Rlo + 5, tmplo);

	A1B1 = (__int128) LOW(A->hi[5]) * 329653424741408;
	A1B0 = (__int128) LOW(A->hi[5]) * 6187238959086572456u;
	A0B1 = (__int128) (A->lo[5]) * 329653424741408;
	A0B0 = (__int128) (A->lo[5]) * 6187238959086572456u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[5] += (__int128) aux2 + A1B1 +
		add_overflow(Rlo + 5, tmplo);

	A1B1 = (__int128) LOW(A->hi[6]) * 18047375899374;
	A1B0 = (__int128) LOW(A->hi[6]) * 6076208757224915371u;
	A0B1 = (__int128) (A->lo[6]) * 18047375899374;
	A0B0 = (__int128) (A->lo[6]) * 6076208757224915371u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[5] += (__int128) aux2 + A1B1 +
		add_overflow(Rlo + 5, tmplo);

	A1B1 = (__int128) LOW(A->hi[7]) * -654300421732541;
	A1B0 = (__int128) LOW(A->hi[7]) * 17366370900870071965u;
	A0B1 = (__int128) (A->lo[7]) * -654300421732541;
	A0B0 = (__int128) (A->lo[7]) * 17366370900870071965u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[5] += (__int128) aux2 + A1B1 +
		add_overflow(Rlo + 5, tmplo);

	A1B1 = (__int128) LOW(A->hi[8]) * 734030808934138;
	A1B0 = (__int128) LOW(A->hi[8]) * 1544272092153038738u;
	A0B1 = (__int128) (A->lo[8]) * 734030808934138;
	A0B0 = (__int128) (A->lo[8]) * 1544272092153038738u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[5] += (__int128) aux2 + A1B1 +
		add_overflow(Rlo + 5, tmplo);

	A1B1 = (__int128) LOW(A->hi[0]) * -660085418141257;
	A1B0 = (__int128) LOW(A->hi[0]) * 2319678828568937656u;
	A0B1 = (__int128) (A->lo[0]) * -660085418141257;
	A0B0 = (__int128) (A->lo[0]) * 2319678828568937656u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[6] += (__int128) aux2 + A1B1 +
		add_overflow(Rlo + 6, tmplo);

	A1B1 = (__int128) LOW(A->hi[1]) * 22270859063594;
	A1B0 = (__int128) LOW(A->hi[1]) * 10404600992058258183u;
	A0B1 = (__int128) (A->lo[1]) * 22270859063594;
	A0B0 = (__int128) (A->lo[1]) * 10404600992058258183u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[6] += (__int128) aux2 + A1B1 +
		add_overflow(Rlo + 6, tmplo);

	A1B1 = (__int128) LOW(A->hi[2]) * -235039382439704;
	A1B0 = (__int128) LOW(A->hi[2]) * 10712215034297563558u;
	A0B1 = (__int128) (A->lo[2]) * -235039382439704;
	A0B0 = (__int128) (A->lo[2]) * 10712215034297563558u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[6] += (__int128) aux2 + A1B1 +
		add_overflow(Rlo + 6, tmplo);

	A1B1 = (__int128) LOW(A->hi[3]) * 286713914168990;
	A1B0 = (__int128) LOW(A->hi[3]) * 1193878968075706269u;
	A0B1 = (__int128) (A->lo[3]) * 286713914168990;
	A0B0 = (__int128) (A->lo[3]) * 1193878968075706269u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[6] += (__int128) aux2 + A1B1 +
		add_overflow(Rlo + 6, tmplo);

	A1B1 = (__int128) LOW(A->hi[4]) * 329653424741408;
	A1B0 = (__int128) LOW(A->hi[4]) * 6187238959086572456u;
	A0B1 = (__int128) (A->lo[4]) * 329653424741408;
	A0B0 = (__int128) (A->lo[4]) * 6187238959086572456u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[6] += (__int128) aux2 + A1B1 +
		add_overflow(Rlo + 6, tmplo);

	A1B1 = (__int128) LOW(A->hi[5]) * -25670703331485;
	A1B0 = (__int128) LOW(A->hi[5]) * 15777005512956131752u;
	A0B1 = (__int128) (A->lo[5]) * -25670703331485;
	A0B0 = (__int128) (A->lo[5]) * 15777005512956131752u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[6] += (__int128) aux2 + A1B1 +
		add_overflow(Rlo + 6, tmplo);

	A1B1 = (__int128) LOW(A->hi[6]) * 361355230593898;
	A1B0 = (__int128) LOW(A->hi[6]) * 5296830114945891605u;
	A0B1 = (__int128) (A->lo[6]) * 361355230593898;
	A0B0 = (__int128) (A->lo[6]) * 5296830114945891605u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[6] += (__int128) aux2 + A1B1 +
		add_overflow(Rlo + 6, tmplo);

	A1B1 = (__int128) LOW(A->hi[7]) * -110604931621932;
	A1B0 = (__int128) LOW(A->hi[7]) * 6471339364974050328u;
	A0B1 = (__int128) (A->lo[7]) * -110604931621932;
	A0B0 = (__int128) (A->lo[7]) * 6471339364974050328u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[6] += (__int128) aux2 + A1B1 +
		add_overflow(Rlo + 6, tmplo);

	A1B1 = (__int128) LOW(A->hi[8]) * 654300421732540;
	A1B0 = (__int128) LOW(A->hi[8]) * 1080373172839479651u;
	A0B1 = (__int128) (A->lo[8]) * 654300421732540;
	A0B0 = (__int128) (A->lo[8]) * 1080373172839479651u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[6] += (__int128) aux2 + A1B1 +
		add_overflow(Rlo + 6, tmplo);

	A1B1 = (__int128) LOW(A->hi[0]) * 107062312409295;
	A1B0 = (__int128) LOW(A->hi[0]) * 6652932721972531731u;
	A0B1 = (__int128) (A->lo[0]) * 107062312409295;
	A0B0 = (__int128) (A->lo[0]) * 6652932721972531731u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[7] += (__int128) aux2 + A1B1 +
		add_overflow(Rlo + 7, tmplo);

	A1B1 = (__int128) LOW(A->hi[1]) * 235039382439703;
	A1B0 = (__int128) LOW(A->hi[1]) * 7734529039411988058u;
	A0B1 = (__int128) (A->lo[1]) * 235039382439703;
	A0B0 = (__int128) (A->lo[1]) * 7734529039411988058u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[7] += (__int128) aux2 + A1B1 +
		add_overflow(Rlo + 7, tmplo);

	A1B1 = (__int128) LOW(A->hi[2]) * 660085418141256;
	A1B0 = (__int128) LOW(A->hi[2]) * 16127065245140613960u;
	A0B1 = (__int128) (A->lo[2]) * 660085418141256;
	A0B0 = (__int128) (A->lo[2]) * 16127065245140613960u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[7] += (__int128) aux2 + A1B1 +
		add_overflow(Rlo + 7, tmplo);

	A1B1 = (__int128) LOW(A->hi[3]) * -133762066439125;
	A1B0 = (__int128) LOW(A->hi[3]) * 2318455683968960980u;
	A0B1 = (__int128) (A->lo[3]) * -133762066439125;
	A0B0 = (__int128) (A->lo[3]) * 2318455683968960980u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[7] += (__int128) aux2 + A1B1 +
		add_overflow(Rlo + 7, tmplo);

	A1B1 = (__int128) LOW(A->hi[4]) * -25670703331485;
	A1B0 = (__int128) LOW(A->hi[4]) * 15777005512956131752u;
	A0B1 = (__int128) (A->lo[4]) * -25670703331485;
	A0B0 = (__int128) (A->lo[4]) * 15777005512956131752u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[7] += (__int128) aux2 + A1B1 +
		add_overflow(Rlo + 7, tmplo);

	A1B1 = (__int128) LOW(A->hi[5]) * 308984773232584;
	A1B0 = (__int128) LOW(A->hi[5]) * 11598479960133964452u;
	A0B1 = (__int128) (A->lo[5]) * 308984773232584;
	A0B0 = (__int128) (A->lo[5]) * 11598479960133964452u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[7] += (__int128) aux2 + A1B1 +
		add_overflow(Rlo + 7, tmplo);

	A1B1 = (__int128) LOW(A->hi[6]) * -682356277204852;
	A1B0 = (__int128) LOW(A->hi[6]) * 10361821910220231089u;
	A0B1 = (__int128) (A->lo[6]) * -682356277204852;
	A0B0 = (__int128) (A->lo[6]) * 10361821910220231089u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[7] += (__int128) aux2 + A1B1 +
		add_overflow(Rlo + 7, tmplo);

	A1B1 = (__int128) LOW(A->hi[7]) * -330431993399849;
	A1B0 = (__int128) LOW(A->hi[7]) * 8506917787655510112u;
	A0B1 = (__int128) (A->lo[7]) * -330431993399849;
	A0B0 = (__int128) (A->lo[7]) * 8506917787655510112u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[7] += (__int128) aux2 + A1B1 +
		add_overflow(Rlo + 7, tmplo);

	A1B1 = (__int128) LOW(A->hi[8]) * 110604931621931;
	A1B0 = (__int128) LOW(A->hi[8]) * 11975404708735501288u;
	A0B1 = (__int128) (A->lo[8]) * 110604931621931;
	A0B0 = (__int128) (A->lo[8]) * 11975404708735501288u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[7] += (__int128) aux2 + A1B1 +
		add_overflow(Rlo + 7, tmplo);

	A1B1 = (__int128) LOW(A->hi[0]) * -201551921099820;
	A1B0 = (__int128) LOW(A->hi[0]) * 13562128236008156491u;
	A0B1 = (__int128) (A->lo[0]) * -201551921099820;
	A0B0 = (__int128) (A->lo[0]) * 13562128236008156491u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[8] += (__int128) aux2 + A1B1 +
		add_overflow(Rlo + 8, tmplo);

	A1B1 = (__int128) LOW(A->hi[1]) * -660085418141257;
	A1B0 = (__int128) LOW(A->hi[1]) * 2319678828568937656u;
	A0B1 = (__int128) (A->lo[1]) * -660085418141257;
	A0B0 = (__int128) (A->lo[1]) * 2319678828568937656u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[8] += (__int128) aux2 + A1B1 +
		add_overflow(Rlo + 8, tmplo);

	A1B1 = (__int128) LOW(A->hi[2]) * -107062312409296;
	A1B0 = (__int128) LOW(A->hi[2]) * 11793811351737019885u;
	A0B1 = (__int128) (A->lo[2]) * -107062312409296;
	A0B0 = (__int128) (A->lo[2]) * 11793811351737019885u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[8] += (__int128) aux2 + A1B1 +
		add_overflow(Rlo + 8, tmplo);

	A1B1 = (__int128) LOW(A->hi[3]) * 676200741072664;
	A1B0 = (__int128) LOW(A->hi[3]) * 11424042764437700238u;
	A0B1 = (__int128) (A->lo[3]) * 676200741072664;
	A0B0 = (__int128) (A->lo[3]) * 11424042764437700238u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[8] += (__int128) aux2 + A1B1 +
		add_overflow(Rlo + 8, tmplo);

	A1B1 = (__int128) LOW(A->hi[4]) * 308984773232584;
	A1B0 = (__int128) LOW(A->hi[4]) * 11598479960133964452u;
	A0B1 = (__int128) (A->lo[4]) * 308984773232584;
	A0B0 = (__int128) (A->lo[4]) * 11598479960133964452u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[8] += (__int128) aux2 + A1B1 +
		add_overflow(Rlo + 8, tmplo);

	A1B1 = (__int128) LOW(A->hi[5]) * 101277316000578;
	A1B0 = (__int128) LOW(A->hi[5]) * 10052984723380949038u;
	A0B1 = (__int128) (A->lo[5]) * 101277316000578;
	A0B0 = (__int128) (A->lo[5]) * 10052984723380949038u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[8] += (__int128) aux2 + A1B1 +
		add_overflow(Rlo + 8, tmplo);

	A1B1 = (__int128) LOW(A->hi[6]) * -127977070030409;
	A1B0 = (__int128) LOW(A->hi[6]) * 17365147756270095289u;
	A0B1 = (__int128) (A->lo[6]) * -127977070030409;
	A0B0 = (__int128) (A->lo[6]) * 17365147756270095289u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[8] += (__int128) aux2 + A1B1 +
		add_overflow(Rlo + 8, tmplo);

	A1B1 = (__int128) LOW(A->hi[7]) * 81391609077811;
	A1B0 = (__int128) LOW(A->hi[7]) * 3983194161219111867u;
	A0B1 = (__int128) (A->lo[7]) * 81391609077811;
	A0B0 = (__int128) (A->lo[7]) * 3983194161219111867u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[8] += (__int128) aux2 + A1B1 +
		add_overflow(Rlo + 8, tmplo);

	A1B1 = (__int128) LOW(A->hi[8]) * 330431993399848;
	A1B0 = (__int128) LOW(A->hi[8]) * 9939826286054041504u;
	A0B1 = (__int128) (A->lo[8]) * 330431993399848;
	A0B0 = (__int128) (A->lo[8]) * 9939826286054041504u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[8] += (__int128) aux2 + A1B1 +
		add_overflow(Rlo + 8, tmplo);

}


static inline void UNROLLED_mns128_mod_mult_ext_red(__int128* restrict Rhi,
	unsigned __int128* restrict Rlo, const restrict poly128 A,
	const restrict poly128 B)
{
	unsigned __int128 A0B0, A1B0_A0B1, tmplo;
	__int128 A1B1;

	A1B1 = (__int128) A->hi[1] * B->hi[8] * LAMBDA;
	A0B0 = (__int128) A->lo[1] * B->lo[8] * LAMBDA;
	A1B0_A0B1 = (__int128) ((__int128) ((__int128) A->hi[1] *
		B->lo[8] * LAMBDA) + ((__int128) A->lo[1] *
		B->hi[8] * LAMBDA)) + HIGH(A0B0);
tmplo = (__int128) LOW(A0B0) | ((__int128)A1B0_A0B1 << 64);
	Rhi[0] += (__int128) A1B1 + HIGH(A1B0_A0B1) +
		add_overflow(Rlo + 0, tmplo);

	A1B1 = (__int128) A->hi[2] * B->hi[7] * LAMBDA;
	A0B0 = (__int128) A->lo[2] * B->lo[7] * LAMBDA;
	A1B0_A0B1 = (__int128) ((__int128) ((__int128) A->hi[2] *
		B->lo[7] * LAMBDA) + ((__int128) A->lo[2] *
		B->hi[7] * LAMBDA)) + HIGH(A0B0);
tmplo = (__int128) LOW(A0B0) | ((__int128)A1B0_A0B1 << 64);
	Rhi[0] += (__int128) A1B1 + HIGH(A1B0_A0B1) +
		add_overflow(Rlo + 0, tmplo);

	A1B1 = (__int128) A->hi[3] * B->hi[6] * LAMBDA;
	A0B0 = (__int128) A->lo[3] * B->lo[6] * LAMBDA;
	A1B0_A0B1 = (__int128) ((__int128) ((__int128) A->hi[3] *
		B->lo[6] * LAMBDA) + ((__int128) A->lo[3] *
		B->hi[6] * LAMBDA)) + HIGH(A0B0);
tmplo = (__int128) LOW(A0B0) | ((__int128)A1B0_A0B1 << 64);
	Rhi[0] += (__int128) A1B1 + HIGH(A1B0_A0B1) +
		add_overflow(Rlo + 0, tmplo);

	A1B1 = (__int128) A->hi[4] * B->hi[5] * LAMBDA;
	A0B0 = (__int128) A->lo[4] * B->lo[5] * LAMBDA;
	A1B0_A0B1 = (__int128) ((__int128) ((__int128) A->hi[4] *
		B->lo[5] * LAMBDA) + ((__int128) A->lo[4] *
		B->hi[5] * LAMBDA)) + HIGH(A0B0);
tmplo = (__int128) LOW(A0B0) | ((__int128)A1B0_A0B1 << 64);
	Rhi[0] += (__int128) A1B1 + HIGH(A1B0_A0B1) +
		add_overflow(Rlo + 0, tmplo);

	A1B1 = (__int128) A->hi[5] * B->hi[4] * LAMBDA;
	A0B0 = (__int128) A->lo[5] * B->lo[4] * LAMBDA;
	A1B0_A0B1 = (__int128) ((__int128) ((__int128) A->hi[5] *
		B->lo[4] * LAMBDA) + ((__int128) A->lo[5] *
		B->hi[4] * LAMBDA)) + HIGH(A0B0);
tmplo = (__int128) LOW(A0B0) | ((__int128)A1B0_A0B1 << 64);
	Rhi[0] += (__int128) A1B1 + HIGH(A1B0_A0B1) +
		add_overflow(Rlo + 0, tmplo);

	A1B1 = (__int128) A->hi[6] * B->hi[3] * LAMBDA;
	A0B0 = (__int128) A->lo[6] * B->lo[3] * LAMBDA;
	A1B0_A0B1 = (__int128) ((__int128) ((__int128) A->hi[6] *
		B->lo[3] * LAMBDA) + ((__int128) A->lo[6] *
		B->hi[3] * LAMBDA)) + HIGH(A0B0);
tmplo = (__int128) LOW(A0B0) | ((__int128)A1B0_A0B1 << 64);
	Rhi[0] += (__int128) A1B1 + HIGH(A1B0_A0B1) +
		add_overflow(Rlo + 0, tmplo);

	A1B1 = (__int128) A->hi[7] * B->hi[2] * LAMBDA;
	A0B0 = (__int128) A->lo[7] * B->lo[2] * LAMBDA;
	A1B0_A0B1 = (__int128) ((__int128) ((__int128) A->hi[7] *
		B->lo[2] * LAMBDA) + ((__int128) A->lo[7] *
		B->hi[2] * LAMBDA)) + HIGH(A0B0);
tmplo = (__int128) LOW(A0B0) | ((__int128)A1B0_A0B1 << 64);
	Rhi[0] += (__int128) A1B1 + HIGH(A1B0_A0B1) +
		add_overflow(Rlo + 0, tmplo);

	A1B1 = (__int128) A->hi[8] * B->hi[1] * LAMBDA;
	A0B0 = (__int128) A->lo[8] * B->lo[1] * LAMBDA;
	A1B0_A0B1 = (__int128) ((__int128) ((__int128) A->hi[8] *
		B->lo[1] * LAMBDA) + ((__int128) A->lo[8] *
		B->hi[1] * LAMBDA)) + HIGH(A0B0);
tmplo = (__int128) LOW(A0B0) | ((__int128)A1B0_A0B1 << 64);
	Rhi[0] += (__int128) A1B1 + HIGH(A1B0_A0B1) +
		add_overflow(Rlo + 0, tmplo);

	A1B1 = (__int128) A->hi[0] * B->hi[0];
	A0B0 = (__int128) A->lo[0] * B->lo[0];
	A1B0_A0B1 = (__int128) ((__int128) ((__int128) A->hi[0] *
		B->lo[0]) + ((__int128) A->lo[0] *
		B->hi[0])) + HIGH(A0B0);
tmplo = (__int128) LOW(A0B0) | ((__int128)A1B0_A0B1 << 64);
	Rhi[0] += (__int128) A1B1 + HIGH(A1B0_A0B1) +
		add_overflow(Rlo + 0, tmplo);

	A1B1 = (__int128) A->hi[2] * B->hi[8] * LAMBDA;
	A0B0 = (__int128) A->lo[2] * B->lo[8] * LAMBDA;
	A1B0_A0B1 = (__int128) ((__int128) ((__int128) A->hi[2] *
		B->lo[8] * LAMBDA) + ((__int128) A->lo[2] *
		B->hi[8] * LAMBDA)) + HIGH(A0B0);
tmplo = (__int128) LOW(A0B0) | ((__int128)A1B0_A0B1 << 64);
	Rhi[1] += (__int128) A1B1 + HIGH(A1B0_A0B1) +
		add_overflow(Rlo + 1, tmplo);

	A1B1 = (__int128) A->hi[3] * B->hi[7] * LAMBDA;
	A0B0 = (__int128) A->lo[3] * B->lo[7] * LAMBDA;
	A1B0_A0B1 = (__int128) ((__int128) ((__int128) A->hi[3] *
		B->lo[7] * LAMBDA) + ((__int128) A->lo[3] *
		B->hi[7] * LAMBDA)) + HIGH(A0B0);
tmplo = (__int128) LOW(A0B0) | ((__int128)A1B0_A0B1 << 64);
	Rhi[1] += (__int128) A1B1 + HIGH(A1B0_A0B1) +
		add_overflow(Rlo + 1, tmplo);

	A1B1 = (__int128) A->hi[4] * B->hi[6] * LAMBDA;
	A0B0 = (__int128) A->lo[4] * B->lo[6] * LAMBDA;
	A1B0_A0B1 = (__int128) ((__int128) ((__int128) A->hi[4] *
		B->lo[6] * LAMBDA) + ((__int128) A->lo[4] *
		B->hi[6] * LAMBDA)) + HIGH(A0B0);
tmplo = (__int128) LOW(A0B0) | ((__int128)A1B0_A0B1 << 64);
	Rhi[1] += (__int128) A1B1 + HIGH(A1B0_A0B1) +
		add_overflow(Rlo + 1, tmplo);

	A1B1 = (__int128) A->hi[5] * B->hi[5] * LAMBDA;
	A0B0 = (__int128) A->lo[5] * B->lo[5] * LAMBDA;
	A1B0_A0B1 = (__int128) ((__int128) ((__int128) A->hi[5] *
		B->lo[5] * LAMBDA) + ((__int128) A->lo[5] *
		B->hi[5] * LAMBDA)) + HIGH(A0B0);
tmplo = (__int128) LOW(A0B0) | ((__int128)A1B0_A0B1 << 64);
	Rhi[1] += (__int128) A1B1 + HIGH(A1B0_A0B1) +
		add_overflow(Rlo + 1, tmplo);

	A1B1 = (__int128) A->hi[6] * B->hi[4] * LAMBDA;
	A0B0 = (__int128) A->lo[6] * B->lo[4] * LAMBDA;
	A1B0_A0B1 = (__int128) ((__int128) ((__int128) A->hi[6] *
		B->lo[4] * LAMBDA) + ((__int128) A->lo[6] *
		B->hi[4] * LAMBDA)) + HIGH(A0B0);
tmplo = (__int128) LOW(A0B0) | ((__int128)A1B0_A0B1 << 64);
	Rhi[1] += (__int128) A1B1 + HIGH(A1B0_A0B1) +
		add_overflow(Rlo + 1, tmplo);

	A1B1 = (__int128) A->hi[7] * B->hi[3] * LAMBDA;
	A0B0 = (__int128) A->lo[7] * B->lo[3] * LAMBDA;
	A1B0_A0B1 = (__int128) ((__int128) ((__int128) A->hi[7] *
		B->lo[3] * LAMBDA) + ((__int128) A->lo[7] *
		B->hi[3] * LAMBDA)) + HIGH(A0B0);
tmplo = (__int128) LOW(A0B0) | ((__int128)A1B0_A0B1 << 64);
	Rhi[1] += (__int128) A1B1 + HIGH(A1B0_A0B1) +
		add_overflow(Rlo + 1, tmplo);

	A1B1 = (__int128) A->hi[8] * B->hi[2] * LAMBDA;
	A0B0 = (__int128) A->lo[8] * B->lo[2] * LAMBDA;
	A1B0_A0B1 = (__int128) ((__int128) ((__int128) A->hi[8] *
		B->lo[2] * LAMBDA) + ((__int128) A->lo[8] *
		B->hi[2] * LAMBDA)) + HIGH(A0B0);
tmplo = (__int128) LOW(A0B0) | ((__int128)A1B0_A0B1 << 64);
	Rhi[1] += (__int128) A1B1 + HIGH(A1B0_A0B1) +
		add_overflow(Rlo + 1, tmplo);

	A1B1 = (__int128) A->hi[0] * B->hi[1];
	A0B0 = (__int128) A->lo[0] * B->lo[1];
	A1B0_A0B1 = (__int128) ((__int128) ((__int128) A->hi[0] *
		B->lo[1]) + ((__int128) A->lo[0] *
		B->hi[1])) + HIGH(A0B0);
tmplo = (__int128) LOW(A0B0) | ((__int128)A1B0_A0B1 << 64);
	Rhi[1] += (__int128) A1B1 + HIGH(A1B0_A0B1) +
		add_overflow(Rlo + 1, tmplo);

	A1B1 = (__int128) A->hi[1] * B->hi[0];
	A0B0 = (__int128) A->lo[1] * B->lo[0];
	A1B0_A0B1 = (__int128) ((__int128) ((__int128) A->hi[1] *
		B->lo[0]) + ((__int128) A->lo[1] *
		B->hi[0])) + HIGH(A0B0);
tmplo = (__int128) LOW(A0B0) | ((__int128)A1B0_A0B1 << 64);
	Rhi[1] += (__int128) A1B1 + HIGH(A1B0_A0B1) +
		add_overflow(Rlo + 1, tmplo);

	A1B1 = (__int128) A->hi[3] * B->hi[8] * LAMBDA;
	A0B0 = (__int128) A->lo[3] * B->lo[8] * LAMBDA;
	A1B0_A0B1 = (__int128) ((__int128) ((__int128) A->hi[3] *
		B->lo[8] * LAMBDA) + ((__int128) A->lo[3] *
		B->hi[8] * LAMBDA)) + HIGH(A0B0);
tmplo = (__int128) LOW(A0B0) | ((__int128)A1B0_A0B1 << 64);
	Rhi[2] += (__int128) A1B1 + HIGH(A1B0_A0B1) +
		add_overflow(Rlo + 2, tmplo);

	A1B1 = (__int128) A->hi[4] * B->hi[7] * LAMBDA;
	A0B0 = (__int128) A->lo[4] * B->lo[7] * LAMBDA;
	A1B0_A0B1 = (__int128) ((__int128) ((__int128) A->hi[4] *
		B->lo[7] * LAMBDA) + ((__int128) A->lo[4] *
		B->hi[7] * LAMBDA)) + HIGH(A0B0);
tmplo = (__int128) LOW(A0B0) | ((__int128)A1B0_A0B1 << 64);
	Rhi[2] += (__int128) A1B1 + HIGH(A1B0_A0B1) +
		add_overflow(Rlo + 2, tmplo);

	A1B1 = (__int128) A->hi[5] * B->hi[6] * LAMBDA;
	A0B0 = (__int128) A->lo[5] * B->lo[6] * LAMBDA;
	A1B0_A0B1 = (__int128) ((__int128) ((__int128) A->hi[5] *
		B->lo[6] * LAMBDA) + ((__int128) A->lo[5] *
		B->hi[6] * LAMBDA)) + HIGH(A0B0);
tmplo = (__int128) LOW(A0B0) | ((__int128)A1B0_A0B1 << 64);
	Rhi[2] += (__int128) A1B1 + HIGH(A1B0_A0B1) +
		add_overflow(Rlo + 2, tmplo);

	A1B1 = (__int128) A->hi[6] * B->hi[5] * LAMBDA;
	A0B0 = (__int128) A->lo[6] * B->lo[5] * LAMBDA;
	A1B0_A0B1 = (__int128) ((__int128) ((__int128) A->hi[6] *
		B->lo[5] * LAMBDA) + ((__int128) A->lo[6] *
		B->hi[5] * LAMBDA)) + HIGH(A0B0);
tmplo = (__int128) LOW(A0B0) | ((__int128)A1B0_A0B1 << 64);
	Rhi[2] += (__int128) A1B1 + HIGH(A1B0_A0B1) +
		add_overflow(Rlo + 2, tmplo);

	A1B1 = (__int128) A->hi[7] * B->hi[4] * LAMBDA;
	A0B0 = (__int128) A->lo[7] * B->lo[4] * LAMBDA;
	A1B0_A0B1 = (__int128) ((__int128) ((__int128) A->hi[7] *
		B->lo[4] * LAMBDA) + ((__int128) A->lo[7] *
		B->hi[4] * LAMBDA)) + HIGH(A0B0);
tmplo = (__int128) LOW(A0B0) | ((__int128)A1B0_A0B1 << 64);
	Rhi[2] += (__int128) A1B1 + HIGH(A1B0_A0B1) +
		add_overflow(Rlo + 2, tmplo);

	A1B1 = (__int128) A->hi[8] * B->hi[3] * LAMBDA;
	A0B0 = (__int128) A->lo[8] * B->lo[3] * LAMBDA;
	A1B0_A0B1 = (__int128) ((__int128) ((__int128) A->hi[8] *
		B->lo[3] * LAMBDA) + ((__int128) A->lo[8] *
		B->hi[3] * LAMBDA)) + HIGH(A0B0);
tmplo = (__int128) LOW(A0B0) | ((__int128)A1B0_A0B1 << 64);
	Rhi[2] += (__int128) A1B1 + HIGH(A1B0_A0B1) +
		add_overflow(Rlo + 2, tmplo);

	A1B1 = (__int128) A->hi[0] * B->hi[2];
	A0B0 = (__int128) A->lo[0] * B->lo[2];
	A1B0_A0B1 = (__int128) ((__int128) ((__int128) A->hi[0] *
		B->lo[2]) + ((__int128) A->lo[0] *
		B->hi[2])) + HIGH(A0B0);
tmplo = (__int128) LOW(A0B0) | ((__int128)A1B0_A0B1 << 64);
	Rhi[2] += (__int128) A1B1 + HIGH(A1B0_A0B1) +
		add_overflow(Rlo + 2, tmplo);

	A1B1 = (__int128) A->hi[1] * B->hi[1];
	A0B0 = (__int128) A->lo[1] * B->lo[1];
	A1B0_A0B1 = (__int128) ((__int128) ((__int128) A->hi[1] *
		B->lo[1]) + ((__int128) A->lo[1] *
		B->hi[1])) + HIGH(A0B0);
tmplo = (__int128) LOW(A0B0) | ((__int128)A1B0_A0B1 << 64);
	Rhi[2] += (__int128) A1B1 + HIGH(A1B0_A0B1) +
		add_overflow(Rlo + 2, tmplo);

	A1B1 = (__int128) A->hi[2] * B->hi[0];
	A0B0 = (__int128) A->lo[2] * B->lo[0];
	A1B0_A0B1 = (__int128) ((__int128) ((__int128) A->hi[2] *
		B->lo[0]) + ((__int128) A->lo[2] *
		B->hi[0])) + HIGH(A0B0);
tmplo = (__int128) LOW(A0B0) | ((__int128)A1B0_A0B1 << 64);
	Rhi[2] += (__int128) A1B1 + HIGH(A1B0_A0B1) +
		add_overflow(Rlo + 2, tmplo);

	A1B1 = (__int128) A->hi[4] * B->hi[8] * LAMBDA;
	A0B0 = (__int128) A->lo[4] * B->lo[8] * LAMBDA;
	A1B0_A0B1 = (__int128) ((__int128) ((__int128) A->hi[4] *
		B->lo[8] * LAMBDA) + ((__int128) A->lo[4] *
		B->hi[8] * LAMBDA)) + HIGH(A0B0);
tmplo = (__int128) LOW(A0B0) | ((__int128)A1B0_A0B1 << 64);
	Rhi[3] += (__int128) A1B1 + HIGH(A1B0_A0B1) +
		add_overflow(Rlo + 3, tmplo);

	A1B1 = (__int128) A->hi[5] * B->hi[7] * LAMBDA;
	A0B0 = (__int128) A->lo[5] * B->lo[7] * LAMBDA;
	A1B0_A0B1 = (__int128) ((__int128) ((__int128) A->hi[5] *
		B->lo[7] * LAMBDA) + ((__int128) A->lo[5] *
		B->hi[7] * LAMBDA)) + HIGH(A0B0);
tmplo = (__int128) LOW(A0B0) | ((__int128)A1B0_A0B1 << 64);
	Rhi[3] += (__int128) A1B1 + HIGH(A1B0_A0B1) +
		add_overflow(Rlo + 3, tmplo);

	A1B1 = (__int128) A->hi[6] * B->hi[6] * LAMBDA;
	A0B0 = (__int128) A->lo[6] * B->lo[6] * LAMBDA;
	A1B0_A0B1 = (__int128) ((__int128) ((__int128) A->hi[6] *
		B->lo[6] * LAMBDA) + ((__int128) A->lo[6] *
		B->hi[6] * LAMBDA)) + HIGH(A0B0);
tmplo = (__int128) LOW(A0B0) | ((__int128)A1B0_A0B1 << 64);
	Rhi[3] += (__int128) A1B1 + HIGH(A1B0_A0B1) +
		add_overflow(Rlo + 3, tmplo);

	A1B1 = (__int128) A->hi[7] * B->hi[5] * LAMBDA;
	A0B0 = (__int128) A->lo[7] * B->lo[5] * LAMBDA;
	A1B0_A0B1 = (__int128) ((__int128) ((__int128) A->hi[7] *
		B->lo[5] * LAMBDA) + ((__int128) A->lo[7] *
		B->hi[5] * LAMBDA)) + HIGH(A0B0);
tmplo = (__int128) LOW(A0B0) | ((__int128)A1B0_A0B1 << 64);
	Rhi[3] += (__int128) A1B1 + HIGH(A1B0_A0B1) +
		add_overflow(Rlo + 3, tmplo);

	A1B1 = (__int128) A->hi[8] * B->hi[4] * LAMBDA;
	A0B0 = (__int128) A->lo[8] * B->lo[4] * LAMBDA;
	A1B0_A0B1 = (__int128) ((__int128) ((__int128) A->hi[8] *
		B->lo[4] * LAMBDA) + ((__int128) A->lo[8] *
		B->hi[4] * LAMBDA)) + HIGH(A0B0);
tmplo = (__int128) LOW(A0B0) | ((__int128)A1B0_A0B1 << 64);
	Rhi[3] += (__int128) A1B1 + HIGH(A1B0_A0B1) +
		add_overflow(Rlo + 3, tmplo);

	A1B1 = (__int128) A->hi[0] * B->hi[3];
	A0B0 = (__int128) A->lo[0] * B->lo[3];
	A1B0_A0B1 = (__int128) ((__int128) ((__int128) A->hi[0] *
		B->lo[3]) + ((__int128) A->lo[0] *
		B->hi[3])) + HIGH(A0B0);
tmplo = (__int128) LOW(A0B0) | ((__int128)A1B0_A0B1 << 64);
	Rhi[3] += (__int128) A1B1 + HIGH(A1B0_A0B1) +
		add_overflow(Rlo + 3, tmplo);

	A1B1 = (__int128) A->hi[1] * B->hi[2];
	A0B0 = (__int128) A->lo[1] * B->lo[2];
	A1B0_A0B1 = (__int128) ((__int128) ((__int128) A->hi[1] *
		B->lo[2]) + ((__int128) A->lo[1] *
		B->hi[2])) + HIGH(A0B0);
tmplo = (__int128) LOW(A0B0) | ((__int128)A1B0_A0B1 << 64);
	Rhi[3] += (__int128) A1B1 + HIGH(A1B0_A0B1) +
		add_overflow(Rlo + 3, tmplo);

	A1B1 = (__int128) A->hi[2] * B->hi[1];
	A0B0 = (__int128) A->lo[2] * B->lo[1];
	A1B0_A0B1 = (__int128) ((__int128) ((__int128) A->hi[2] *
		B->lo[1]) + ((__int128) A->lo[2] *
		B->hi[1])) + HIGH(A0B0);
tmplo = (__int128) LOW(A0B0) | ((__int128)A1B0_A0B1 << 64);
	Rhi[3] += (__int128) A1B1 + HIGH(A1B0_A0B1) +
		add_overflow(Rlo + 3, tmplo);

	A1B1 = (__int128) A->hi[3] * B->hi[0];
	A0B0 = (__int128) A->lo[3] * B->lo[0];
	A1B0_A0B1 = (__int128) ((__int128) ((__int128) A->hi[3] *
		B->lo[0]) + ((__int128) A->lo[3] *
		B->hi[0])) + HIGH(A0B0);
tmplo = (__int128) LOW(A0B0) | ((__int128)A1B0_A0B1 << 64);
	Rhi[3] += (__int128) A1B1 + HIGH(A1B0_A0B1) +
		add_overflow(Rlo + 3, tmplo);

	A1B1 = (__int128) A->hi[5] * B->hi[8] * LAMBDA;
	A0B0 = (__int128) A->lo[5] * B->lo[8] * LAMBDA;
	A1B0_A0B1 = (__int128) ((__int128) ((__int128) A->hi[5] *
		B->lo[8] * LAMBDA) + ((__int128) A->lo[5] *
		B->hi[8] * LAMBDA)) + HIGH(A0B0);
tmplo = (__int128) LOW(A0B0) | ((__int128)A1B0_A0B1 << 64);
	Rhi[4] += (__int128) A1B1 + HIGH(A1B0_A0B1) +
		add_overflow(Rlo + 4, tmplo);

	A1B1 = (__int128) A->hi[6] * B->hi[7] * LAMBDA;
	A0B0 = (__int128) A->lo[6] * B->lo[7] * LAMBDA;
	A1B0_A0B1 = (__int128) ((__int128) ((__int128) A->hi[6] *
		B->lo[7] * LAMBDA) + ((__int128) A->lo[6] *
		B->hi[7] * LAMBDA)) + HIGH(A0B0);
tmplo = (__int128) LOW(A0B0) | ((__int128)A1B0_A0B1 << 64);
	Rhi[4] += (__int128) A1B1 + HIGH(A1B0_A0B1) +
		add_overflow(Rlo + 4, tmplo);

	A1B1 = (__int128) A->hi[7] * B->hi[6] * LAMBDA;
	A0B0 = (__int128) A->lo[7] * B->lo[6] * LAMBDA;
	A1B0_A0B1 = (__int128) ((__int128) ((__int128) A->hi[7] *
		B->lo[6] * LAMBDA) + ((__int128) A->lo[7] *
		B->hi[6] * LAMBDA)) + HIGH(A0B0);
tmplo = (__int128) LOW(A0B0) | ((__int128)A1B0_A0B1 << 64);
	Rhi[4] += (__int128) A1B1 + HIGH(A1B0_A0B1) +
		add_overflow(Rlo + 4, tmplo);

	A1B1 = (__int128) A->hi[8] * B->hi[5] * LAMBDA;
	A0B0 = (__int128) A->lo[8] * B->lo[5] * LAMBDA;
	A1B0_A0B1 = (__int128) ((__int128) ((__int128) A->hi[8] *
		B->lo[5] * LAMBDA) + ((__int128) A->lo[8] *
		B->hi[5] * LAMBDA)) + HIGH(A0B0);
tmplo = (__int128) LOW(A0B0) | ((__int128)A1B0_A0B1 << 64);
	Rhi[4] += (__int128) A1B1 + HIGH(A1B0_A0B1) +
		add_overflow(Rlo + 4, tmplo);

	A1B1 = (__int128) A->hi[0] * B->hi[4];
	A0B0 = (__int128) A->lo[0] * B->lo[4];
	A1B0_A0B1 = (__int128) ((__int128) ((__int128) A->hi[0] *
		B->lo[4]) + ((__int128) A->lo[0] *
		B->hi[4])) + HIGH(A0B0);
tmplo = (__int128) LOW(A0B0) | ((__int128)A1B0_A0B1 << 64);
	Rhi[4] += (__int128) A1B1 + HIGH(A1B0_A0B1) +
		add_overflow(Rlo + 4, tmplo);

	A1B1 = (__int128) A->hi[1] * B->hi[3];
	A0B0 = (__int128) A->lo[1] * B->lo[3];
	A1B0_A0B1 = (__int128) ((__int128) ((__int128) A->hi[1] *
		B->lo[3]) + ((__int128) A->lo[1] *
		B->hi[3])) + HIGH(A0B0);
tmplo = (__int128) LOW(A0B0) | ((__int128)A1B0_A0B1 << 64);
	Rhi[4] += (__int128) A1B1 + HIGH(A1B0_A0B1) +
		add_overflow(Rlo + 4, tmplo);

	A1B1 = (__int128) A->hi[2] * B->hi[2];
	A0B0 = (__int128) A->lo[2] * B->lo[2];
	A1B0_A0B1 = (__int128) ((__int128) ((__int128) A->hi[2] *
		B->lo[2]) + ((__int128) A->lo[2] *
		B->hi[2])) + HIGH(A0B0);
tmplo = (__int128) LOW(A0B0) | ((__int128)A1B0_A0B1 << 64);
	Rhi[4] += (__int128) A1B1 + HIGH(A1B0_A0B1) +
		add_overflow(Rlo + 4, tmplo);

	A1B1 = (__int128) A->hi[3] * B->hi[1];
	A0B0 = (__int128) A->lo[3] * B->lo[1];
	A1B0_A0B1 = (__int128) ((__int128) ((__int128) A->hi[3] *
		B->lo[1]) + ((__int128) A->lo[3] *
		B->hi[1])) + HIGH(A0B0);
tmplo = (__int128) LOW(A0B0) | ((__int128)A1B0_A0B1 << 64);
	Rhi[4] += (__int128) A1B1 + HIGH(A1B0_A0B1) +
		add_overflow(Rlo + 4, tmplo);

	A1B1 = (__int128) A->hi[4] * B->hi[0];
	A0B0 = (__int128) A->lo[4] * B->lo[0];
	A1B0_A0B1 = (__int128) ((__int128) ((__int128) A->hi[4] *
		B->lo[0]) + ((__int128) A->lo[4] *
		B->hi[0])) + HIGH(A0B0);
tmplo = (__int128) LOW(A0B0) | ((__int128)A1B0_A0B1 << 64);
	Rhi[4] += (__int128) A1B1 + HIGH(A1B0_A0B1) +
		add_overflow(Rlo + 4, tmplo);

	A1B1 = (__int128) A->hi[6] * B->hi[8] * LAMBDA;
	A0B0 = (__int128) A->lo[6] * B->lo[8] * LAMBDA;
	A1B0_A0B1 = (__int128) ((__int128) ((__int128) A->hi[6] *
		B->lo[8] * LAMBDA) + ((__int128) A->lo[6] *
		B->hi[8] * LAMBDA)) + HIGH(A0B0);
tmplo = (__int128) LOW(A0B0) | ((__int128)A1B0_A0B1 << 64);
	Rhi[5] += (__int128) A1B1 + HIGH(A1B0_A0B1) +
		add_overflow(Rlo + 5, tmplo);

	A1B1 = (__int128) A->hi[7] * B->hi[7] * LAMBDA;
	A0B0 = (__int128) A->lo[7] * B->lo[7] * LAMBDA;
	A1B0_A0B1 = (__int128) ((__int128) ((__int128) A->hi[7] *
		B->lo[7] * LAMBDA) + ((__int128) A->lo[7] *
		B->hi[7] * LAMBDA)) + HIGH(A0B0);
tmplo = (__int128) LOW(A0B0) | ((__int128)A1B0_A0B1 << 64);
	Rhi[5] += (__int128) A1B1 + HIGH(A1B0_A0B1) +
		add_overflow(Rlo + 5, tmplo);

	A1B1 = (__int128) A->hi[8] * B->hi[6] * LAMBDA;
	A0B0 = (__int128) A->lo[8] * B->lo[6] * LAMBDA;
	A1B0_A0B1 = (__int128) ((__int128) ((__int128) A->hi[8] *
		B->lo[6] * LAMBDA) + ((__int128) A->lo[8] *
		B->hi[6] * LAMBDA)) + HIGH(A0B0);
tmplo = (__int128) LOW(A0B0) | ((__int128)A1B0_A0B1 << 64);
	Rhi[5] += (__int128) A1B1 + HIGH(A1B0_A0B1) +
		add_overflow(Rlo + 5, tmplo);

	A1B1 = (__int128) A->hi[0] * B->hi[5];
	A0B0 = (__int128) A->lo[0] * B->lo[5];
	A1B0_A0B1 = (__int128) ((__int128) ((__int128) A->hi[0] *
		B->lo[5]) + ((__int128) A->lo[0] *
		B->hi[5])) + HIGH(A0B0);
tmplo = (__int128) LOW(A0B0) | ((__int128)A1B0_A0B1 << 64);
	Rhi[5] += (__int128) A1B1 + HIGH(A1B0_A0B1) +
		add_overflow(Rlo + 5, tmplo);

	A1B1 = (__int128) A->hi[1] * B->hi[4];
	A0B0 = (__int128) A->lo[1] * B->lo[4];
	A1B0_A0B1 = (__int128) ((__int128) ((__int128) A->hi[1] *
		B->lo[4]) + ((__int128) A->lo[1] *
		B->hi[4])) + HIGH(A0B0);
tmplo = (__int128) LOW(A0B0) | ((__int128)A1B0_A0B1 << 64);
	Rhi[5] += (__int128) A1B1 + HIGH(A1B0_A0B1) +
		add_overflow(Rlo + 5, tmplo);

	A1B1 = (__int128) A->hi[2] * B->hi[3];
	A0B0 = (__int128) A->lo[2] * B->lo[3];
	A1B0_A0B1 = (__int128) ((__int128) ((__int128) A->hi[2] *
		B->lo[3]) + ((__int128) A->lo[2] *
		B->hi[3])) + HIGH(A0B0);
tmplo = (__int128) LOW(A0B0) | ((__int128)A1B0_A0B1 << 64);
	Rhi[5] += (__int128) A1B1 + HIGH(A1B0_A0B1) +
		add_overflow(Rlo + 5, tmplo);

	A1B1 = (__int128) A->hi[3] * B->hi[2];
	A0B0 = (__int128) A->lo[3] * B->lo[2];
	A1B0_A0B1 = (__int128) ((__int128) ((__int128) A->hi[3] *
		B->lo[2]) + ((__int128) A->lo[3] *
		B->hi[2])) + HIGH(A0B0);
tmplo = (__int128) LOW(A0B0) | ((__int128)A1B0_A0B1 << 64);
	Rhi[5] += (__int128) A1B1 + HIGH(A1B0_A0B1) +
		add_overflow(Rlo + 5, tmplo);

	A1B1 = (__int128) A->hi[4] * B->hi[1];
	A0B0 = (__int128) A->lo[4] * B->lo[1];
	A1B0_A0B1 = (__int128) ((__int128) ((__int128) A->hi[4] *
		B->lo[1]) + ((__int128) A->lo[4] *
		B->hi[1])) + HIGH(A0B0);
tmplo = (__int128) LOW(A0B0) | ((__int128)A1B0_A0B1 << 64);
	Rhi[5] += (__int128) A1B1 + HIGH(A1B0_A0B1) +
		add_overflow(Rlo + 5, tmplo);

	A1B1 = (__int128) A->hi[5] * B->hi[0];
	A0B0 = (__int128) A->lo[5] * B->lo[0];
	A1B0_A0B1 = (__int128) ((__int128) ((__int128) A->hi[5] *
		B->lo[0]) + ((__int128) A->lo[5] *
		B->hi[0])) + HIGH(A0B0);
tmplo = (__int128) LOW(A0B0) | ((__int128)A1B0_A0B1 << 64);
	Rhi[5] += (__int128) A1B1 + HIGH(A1B0_A0B1) +
		add_overflow(Rlo + 5, tmplo);

	A1B1 = (__int128) A->hi[7] * B->hi[8] * LAMBDA;
	A0B0 = (__int128) A->lo[7] * B->lo[8] * LAMBDA;
	A1B0_A0B1 = (__int128) ((__int128) ((__int128) A->hi[7] *
		B->lo[8] * LAMBDA) + ((__int128) A->lo[7] *
		B->hi[8] * LAMBDA)) + HIGH(A0B0);
tmplo = (__int128) LOW(A0B0) | ((__int128)A1B0_A0B1 << 64);
	Rhi[6] += (__int128) A1B1 + HIGH(A1B0_A0B1) +
		add_overflow(Rlo + 6, tmplo);

	A1B1 = (__int128) A->hi[8] * B->hi[7] * LAMBDA;
	A0B0 = (__int128) A->lo[8] * B->lo[7] * LAMBDA;
	A1B0_A0B1 = (__int128) ((__int128) ((__int128) A->hi[8] *
		B->lo[7] * LAMBDA) + ((__int128) A->lo[8] *
		B->hi[7] * LAMBDA)) + HIGH(A0B0);
tmplo = (__int128) LOW(A0B0) | ((__int128)A1B0_A0B1 << 64);
	Rhi[6] += (__int128) A1B1 + HIGH(A1B0_A0B1) +
		add_overflow(Rlo + 6, tmplo);

	A1B1 = (__int128) A->hi[0] * B->hi[6];
	A0B0 = (__int128) A->lo[0] * B->lo[6];
	A1B0_A0B1 = (__int128) ((__int128) ((__int128) A->hi[0] *
		B->lo[6]) + ((__int128) A->lo[0] *
		B->hi[6])) + HIGH(A0B0);
tmplo = (__int128) LOW(A0B0) | ((__int128)A1B0_A0B1 << 64);
	Rhi[6] += (__int128) A1B1 + HIGH(A1B0_A0B1) +
		add_overflow(Rlo + 6, tmplo);

	A1B1 = (__int128) A->hi[1] * B->hi[5];
	A0B0 = (__int128) A->lo[1] * B->lo[5];
	A1B0_A0B1 = (__int128) ((__int128) ((__int128) A->hi[1] *
		B->lo[5]) + ((__int128) A->lo[1] *
		B->hi[5])) + HIGH(A0B0);
tmplo = (__int128) LOW(A0B0) | ((__int128)A1B0_A0B1 << 64);
	Rhi[6] += (__int128) A1B1 + HIGH(A1B0_A0B1) +
		add_overflow(Rlo + 6, tmplo);

	A1B1 = (__int128) A->hi[2] * B->hi[4];
	A0B0 = (__int128) A->lo[2] * B->lo[4];
	A1B0_A0B1 = (__int128) ((__int128) ((__int128) A->hi[2] *
		B->lo[4]) + ((__int128) A->lo[2] *
		B->hi[4])) + HIGH(A0B0);
tmplo = (__int128) LOW(A0B0) | ((__int128)A1B0_A0B1 << 64);
	Rhi[6] += (__int128) A1B1 + HIGH(A1B0_A0B1) +
		add_overflow(Rlo + 6, tmplo);

	A1B1 = (__int128) A->hi[3] * B->hi[3];
	A0B0 = (__int128) A->lo[3] * B->lo[3];
	A1B0_A0B1 = (__int128) ((__int128) ((__int128) A->hi[3] *
		B->lo[3]) + ((__int128) A->lo[3] *
		B->hi[3])) + HIGH(A0B0);
tmplo = (__int128) LOW(A0B0) | ((__int128)A1B0_A0B1 << 64);
	Rhi[6] += (__int128) A1B1 + HIGH(A1B0_A0B1) +
		add_overflow(Rlo + 6, tmplo);

	A1B1 = (__int128) A->hi[4] * B->hi[2];
	A0B0 = (__int128) A->lo[4] * B->lo[2];
	A1B0_A0B1 = (__int128) ((__int128) ((__int128) A->hi[4] *
		B->lo[2]) + ((__int128) A->lo[4] *
		B->hi[2])) + HIGH(A0B0);
tmplo = (__int128) LOW(A0B0) | ((__int128)A1B0_A0B1 << 64);
	Rhi[6] += (__int128) A1B1 + HIGH(A1B0_A0B1) +
		add_overflow(Rlo + 6, tmplo);

	A1B1 = (__int128) A->hi[5] * B->hi[1];
	A0B0 = (__int128) A->lo[5] * B->lo[1];
	A1B0_A0B1 = (__int128) ((__int128) ((__int128) A->hi[5] *
		B->lo[1]) + ((__int128) A->lo[5] *
		B->hi[1])) + HIGH(A0B0);
tmplo = (__int128) LOW(A0B0) | ((__int128)A1B0_A0B1 << 64);
	Rhi[6] += (__int128) A1B1 + HIGH(A1B0_A0B1) +
		add_overflow(Rlo + 6, tmplo);

	A1B1 = (__int128) A->hi[6] * B->hi[0];
	A0B0 = (__int128) A->lo[6] * B->lo[0];
	A1B0_A0B1 = (__int128) ((__int128) ((__int128) A->hi[6] *
		B->lo[0]) + ((__int128) A->lo[6] *
		B->hi[0])) + HIGH(A0B0);
tmplo = (__int128) LOW(A0B0) | ((__int128)A1B0_A0B1 << 64);
	Rhi[6] += (__int128) A1B1 + HIGH(A1B0_A0B1) +
		add_overflow(Rlo + 6, tmplo);

	A1B1 = (__int128) A->hi[8] * B->hi[8] * LAMBDA;
	A0B0 = (__int128) A->lo[8] * B->lo[8] * LAMBDA;
	A1B0_A0B1 = (__int128) ((__int128) ((__int128) A->hi[8] *
		B->lo[8] * LAMBDA) + ((__int128) A->lo[8] *
		B->hi[8] * LAMBDA)) + HIGH(A0B0);
tmplo = (__int128) LOW(A0B0) | ((__int128)A1B0_A0B1 << 64);
	Rhi[7] += (__int128) A1B1 + HIGH(A1B0_A0B1) +
		add_overflow(Rlo + 7, tmplo);

	A1B1 = (__int128) A->hi[0] * B->hi[7];
	A0B0 = (__int128) A->lo[0] * B->lo[7];
	A1B0_A0B1 = (__int128) ((__int128) ((__int128) A->hi[0] *
		B->lo[7]) + ((__int128) A->lo[0] *
		B->hi[7])) + HIGH(A0B0);
tmplo = (__int128) LOW(A0B0) | ((__int128)A1B0_A0B1 << 64);
	Rhi[7] += (__int128) A1B1 + HIGH(A1B0_A0B1) +
		add_overflow(Rlo + 7, tmplo);

	A1B1 = (__int128) A->hi[1] * B->hi[6];
	A0B0 = (__int128) A->lo[1] * B->lo[6];
	A1B0_A0B1 = (__int128) ((__int128) ((__int128) A->hi[1] *
		B->lo[6]) + ((__int128) A->lo[1] *
		B->hi[6])) + HIGH(A0B0);
tmplo = (__int128) LOW(A0B0) | ((__int128)A1B0_A0B1 << 64);
	Rhi[7] += (__int128) A1B1 + HIGH(A1B0_A0B1) +
		add_overflow(Rlo + 7, tmplo);

	A1B1 = (__int128) A->hi[2] * B->hi[5];
	A0B0 = (__int128) A->lo[2] * B->lo[5];
	A1B0_A0B1 = (__int128) ((__int128) ((__int128) A->hi[2] *
		B->lo[5]) + ((__int128) A->lo[2] *
		B->hi[5])) + HIGH(A0B0);
tmplo = (__int128) LOW(A0B0) | ((__int128)A1B0_A0B1 << 64);
	Rhi[7] += (__int128) A1B1 + HIGH(A1B0_A0B1) +
		add_overflow(Rlo + 7, tmplo);

	A1B1 = (__int128) A->hi[3] * B->hi[4];
	A0B0 = (__int128) A->lo[3] * B->lo[4];
	A1B0_A0B1 = (__int128) ((__int128) ((__int128) A->hi[3] *
		B->lo[4]) + ((__int128) A->lo[3] *
		B->hi[4])) + HIGH(A0B0);
tmplo = (__int128) LOW(A0B0) | ((__int128)A1B0_A0B1 << 64);
	Rhi[7] += (__int128) A1B1 + HIGH(A1B0_A0B1) +
		add_overflow(Rlo + 7, tmplo);

	A1B1 = (__int128) A->hi[4] * B->hi[3];
	A0B0 = (__int128) A->lo[4] * B->lo[3];
	A1B0_A0B1 = (__int128) ((__int128) ((__int128) A->hi[4] *
		B->lo[3]) + ((__int128) A->lo[4] *
		B->hi[3])) + HIGH(A0B0);
tmplo = (__int128) LOW(A0B0) | ((__int128)A1B0_A0B1 << 64);
	Rhi[7] += (__int128) A1B1 + HIGH(A1B0_A0B1) +
		add_overflow(Rlo + 7, tmplo);

	A1B1 = (__int128) A->hi[5] * B->hi[2];
	A0B0 = (__int128) A->lo[5] * B->lo[2];
	A1B0_A0B1 = (__int128) ((__int128) ((__int128) A->hi[5] *
		B->lo[2]) + ((__int128) A->lo[5] *
		B->hi[2])) + HIGH(A0B0);
tmplo = (__int128) LOW(A0B0) | ((__int128)A1B0_A0B1 << 64);
	Rhi[7] += (__int128) A1B1 + HIGH(A1B0_A0B1) +
		add_overflow(Rlo + 7, tmplo);

	A1B1 = (__int128) A->hi[6] * B->hi[1];
	A0B0 = (__int128) A->lo[6] * B->lo[1];
	A1B0_A0B1 = (__int128) ((__int128) ((__int128) A->hi[6] *
		B->lo[1]) + ((__int128) A->lo[6] *
		B->hi[1])) + HIGH(A0B0);
tmplo = (__int128) LOW(A0B0) | ((__int128)A1B0_A0B1 << 64);
	Rhi[7] += (__int128) A1B1 + HIGH(A1B0_A0B1) +
		add_overflow(Rlo + 7, tmplo);

	A1B1 = (__int128) A->hi[7] * B->hi[0];
	A0B0 = (__int128) A->lo[7] * B->lo[0];
	A1B0_A0B1 = (__int128) ((__int128) ((__int128) A->hi[7] *
		B->lo[0]) + ((__int128) A->lo[7] *
		B->hi[0])) + HIGH(A0B0);
tmplo = (__int128) LOW(A0B0) | ((__int128)A1B0_A0B1 << 64);
	Rhi[7] += (__int128) A1B1 + HIGH(A1B0_A0B1) +
		add_overflow(Rlo + 7, tmplo);

	A1B1 = (__int128) A->hi[0] * B->hi[8];
	A0B0 = (__int128) A->lo[0] * B->lo[8];
	A1B0_A0B1 = (__int128) ((__int128) ((__int128) A->hi[0] *
		B->lo[8]) + ((__int128) A->lo[0] *
		B->hi[8])) + HIGH(A0B0);
tmplo = (__int128) LOW(A0B0) | ((__int128)A1B0_A0B1 << 64);
	Rhi[8] += (__int128) A1B1 + HIGH(A1B0_A0B1) +
		add_overflow(Rlo + 8, tmplo);

	A1B1 = (__int128) A->hi[1] * B->hi[7];
	A0B0 = (__int128) A->lo[1] * B->lo[7];
	A1B0_A0B1 = (__int128) ((__int128) ((__int128) A->hi[1] *
		B->lo[7]) + ((__int128) A->lo[1] *
		B->hi[7])) + HIGH(A0B0);
tmplo = (__int128) LOW(A0B0) | ((__int128)A1B0_A0B1 << 64);
	Rhi[8] += (__int128) A1B1 + HIGH(A1B0_A0B1) +
		add_overflow(Rlo + 8, tmplo);

	A1B1 = (__int128) A->hi[2] * B->hi[6];
	A0B0 = (__int128) A->lo[2] * B->lo[6];
	A1B0_A0B1 = (__int128) ((__int128) ((__int128) A->hi[2] *
		B->lo[6]) + ((__int128) A->lo[2] *
		B->hi[6])) + HIGH(A0B0);
tmplo = (__int128) LOW(A0B0) | ((__int128)A1B0_A0B1 << 64);
	Rhi[8] += (__int128) A1B1 + HIGH(A1B0_A0B1) +
		add_overflow(Rlo + 8, tmplo);

	A1B1 = (__int128) A->hi[3] * B->hi[5];
	A0B0 = (__int128) A->lo[3] * B->lo[5];
	A1B0_A0B1 = (__int128) ((__int128) ((__int128) A->hi[3] *
		B->lo[5]) + ((__int128) A->lo[3] *
		B->hi[5])) + HIGH(A0B0);
tmplo = (__int128) LOW(A0B0) | ((__int128)A1B0_A0B1 << 64);
	Rhi[8] += (__int128) A1B1 + HIGH(A1B0_A0B1) +
		add_overflow(Rlo + 8, tmplo);

	A1B1 = (__int128) A->hi[4] * B->hi[4];
	A0B0 = (__int128) A->lo[4] * B->lo[4];
	A1B0_A0B1 = (__int128) ((__int128) ((__int128) A->hi[4] *
		B->lo[4]) + ((__int128) A->lo[4] *
		B->hi[4])) + HIGH(A0B0);
tmplo = (__int128) LOW(A0B0) | ((__int128)A1B0_A0B1 << 64);
	Rhi[8] += (__int128) A1B1 + HIGH(A1B0_A0B1) +
		add_overflow(Rlo + 8, tmplo);

	A1B1 = (__int128) A->hi[5] * B->hi[3];
	A0B0 = (__int128) A->lo[5] * B->lo[3];
	A1B0_A0B1 = (__int128) ((__int128) ((__int128) A->hi[5] *
		B->lo[3]) + ((__int128) A->lo[5] *
		B->hi[3])) + HIGH(A0B0);
tmplo = (__int128) LOW(A0B0) | ((__int128)A1B0_A0B1 << 64);
	Rhi[8] += (__int128) A1B1 + HIGH(A1B0_A0B1) +
		add_overflow(Rlo + 8, tmplo);

	A1B1 = (__int128) A->hi[6] * B->hi[2];
	A0B0 = (__int128) A->lo[6] * B->lo[2];
	A1B0_A0B1 = (__int128) ((__int128) ((__int128) A->hi[6] *
		B->lo[2]) + ((__int128) A->lo[6] *
		B->hi[2])) + HIGH(A0B0);
tmplo = (__int128) LOW(A0B0) | ((__int128)A1B0_A0B1 << 64);
	Rhi[8] += (__int128) A1B1 + HIGH(A1B0_A0B1) +
		add_overflow(Rlo + 8, tmplo);

	A1B1 = (__int128) A->hi[7] * B->hi[1];
	A0B0 = (__int128) A->lo[7] * B->lo[1];
	A1B0_A0B1 = (__int128) ((__int128) ((__int128) A->hi[7] *
		B->lo[1]) + ((__int128) A->lo[7] *
		B->hi[1])) + HIGH(A0B0);
tmplo = (__int128) LOW(A0B0) | ((__int128)A1B0_A0B1 << 64);
	Rhi[8] += (__int128) A1B1 + HIGH(A1B0_A0B1) +
		add_overflow(Rlo + 8, tmplo);

	A1B1 = (__int128) A->hi[8] * B->hi[0];
	A0B0 = (__int128) A->lo[8] * B->lo[0];
	A1B0_A0B1 = (__int128) ((__int128) ((__int128) A->hi[8] *
		B->lo[0]) + ((__int128) A->lo[8] *
		B->hi[0])) + HIGH(A0B0);
tmplo = (__int128) LOW(A0B0) | ((__int128)A1B0_A0B1 << 64);
	Rhi[8] += (__int128) A1B1 + HIGH(A1B0_A0B1) +
		add_overflow(Rlo + 8, tmplo);

}


static const uint64_t __Pilo__[N][N] = {
		{878217169046030744u, 2575199716896560907u, 4502550581714852294u, 8570240191145452651u, 4046997871299258615u, 8102155770753839971u, 9455398362073659687u, 6775919941875111972u, 9126747783363538830u},
		{11266032472902525987u, 1090349619329662149u, 10983234377935306618u, 12979923848807839706u, 5506745749407327198u, 38089162232371471u, 16937320256746810281u, 9226178527083799748u, 16983440846016902737u},
		{12744486610062781242u, 8818500827374833305u, 7082698580806667410u, 6426176857076919365u, 13672635611028464210u, 535949994715395562u, 11096216741479876163u, 428104878967488760u, 15156707869485004115u},
		{15893581417688631838u, 9453106244989096983u, 9733220307976626965u, 13481881902572091756u, 4283108652154153769u, 1728432012881102746u, 17260028037312154210u, 5498079950481182246u, 8735620901695114089u},
		{13892423681102104468u, 17451941848029974855u, 9281505155353612495u, 8478508257366317186u, 17362852386860368938u, 2505928835893197562u, 18369959602215124543u, 10586057772629502190u, 1639286666866838303u},
		{569923103063542406u, 11544869059624430232u, 9116174823935893042u, 5493623999240396315u, 14085804256995429147u, 13609836121114142788u, 11940470836789222696u, 18430872296727056332u, 15222172842965393091u},
		{10757384010820489930u, 4790342363536783124u, 15043055064084898070u, 1708131624665841159u, 5585551641665829695u, 16401341107767252560u, 4394184736529893392u, 3943194159484169569u, 7969068136387147177u},
		{18135495248413038998u, 14288969863559954597u, 13788019451026781496u, 9537430920744534354u, 2819760299875929599u, 9545439262570730023u, 11273846925520694491u, 10471339174315585620u, 6850870096240798033u},
		{13799667346690851372u, 18241541454541742531u, 4624580841191608378u, 6211031367685613869u, 2633513284884204981u, 8299096531300666833u, 2815887821235598825u, 4273520320132164842u, 13451468186335203728u}
	};


static const int64_t __Pihi__[N][N] = {
		{-932547265248382, 10256404110573, 1311899471291966, 530637072152031, 491464651642161, -81314735512616, -404309631936840, 237182843245273, -573094766218290},
		{-508633473523911, 99142561412848, 725419472399253, 609174550719250, 569323853964746, -371810005534706, -54559807556264, -441150737887208, -338525627093949},
		{-1013956814066532, 730159289702261, 408765501516482, 970149697229082, 396378713035384, -146469869830463, -169981004361481, -116785165690943, -36170033847943},
		{-875118142737607, 398839343126424, 980272409086648, 691621859680428, 1305423897483029, -575790848660727, -524753365833504, -18754091785170, -726788589602006},
		{-1122700137321110, 440991583882114, 481981861949356, 935372594461488, 1074748480066678, 277042010269368, -132600792055329, 219874959998908, 118429020406073},
		{-817040834959965, 747713105201645, 758125603612085, 534410967520766, 715020703043733, -493931119834218, -457495987174431, -532286700708244, -222005422565634},
		{-758475774384608, 232808816658104, 864221979595956, 327744950187384, 567945582435190, -177701020460421, -192808811762591, -116408301482216, -374136493369405},
		{-1121122521943772, 484757274103317, 550469369097087, 1038733515942210, 1307296655318726, -147730832427462, -73033244755104, -596658608116167, 64755159185790},
		{-737726734302079, 86458178015823, 327664792915313, 819099770737640, 999677327555809, 426238017058259, 81725877259632, -442175171309305, -260002986938066}
	};

static _mpnum __P__ = { .deg = 16,
		.sign = 1,
		.t = (uint64_t[]) {0xd38a4aa5f0d15c0d, 0x1a492619bacb053b, 0xa756c4c8676a2cc7, 0xf6aa607a79d82cb5, 0xcffaf035c7912dcf, 0x578088fb546e8053, 0x39f9e77fc5a7d519, 0x1d781509c1649be8, 0xe9d5984919726224, 0xdda2ff47cb3732fc, 0xfc82a0bbecb47552, 0xa681dd40133a7bee, 0xca9098d4c870e97f, 0x8e8ad494318a1464, 0x7505298b399c3183, 0xd7d330786f4f8808} },
	Gi[] = { { .deg = 16,
		.sign = 1,
		.t = (uint64_t[]) {0x67d40bec1f54996e, 0xd032c67bf364ea67, 0xdc6e4f68c5a4e96b, 0x87dc1b84d238bc16, 0x14f9685b82cb4154, 0x69ad1fb7e8105b47, 0x9a60d78e98a606bc, 0xa7cd5ab8336eb024, 0x9802c7810c7056b0, 0xd5d93499aec86e4a, 0xb7213a68ad240eda, 0x43d2716cc48b7aac, 0x5ea7513456dc013b, 0xd621adb8da1f0b76, 0xa40db0441026687d, 0x6d1e1a7da5a1e474} },
	{ .deg = 16,
		.sign = 1,
		.t = (uint64_t[]) {0xcecf9ccd3dfb6921, 0xed36be42b5e0deca, 0xde3655b80fd2aabb, 0x65d767500030700b, 0xba66fa50fc07d0e3, 0xefbf406fc06066ad, 0x6d579cd12673a5fb, 0xe9b3368f9f8d2384, 0x12c23ddbdd0651fc, 0x99d165e16b596f67, 0x3144fbb811e5131b, 0x2f0393fcdc279c84, 0xf5dc54feda070a30, 0x17bea1c773cce886, 0x6cd71b896d5e8b4, 0xab6a25daf30995a6} },
	{ .deg = 16,
		.sign = 1,
		.t = (uint64_t[]) {0x7a8026fdc97f490b, 0x8954c5f52bb40a86, 0xe57f79c7e9c1aed3, 0xdfb87bedb67b2b2b, 0xc03f398fdf6efdf6, 0x59345d1ff74f0a5e, 0xd9cf5c2a4e392fb6, 0x386ef6c2d4d0a726, 0xa7b38f9b726ea65a, 0x159eb5693021a36a, 0x8257d6f6ab3b82db, 0x4b417d559f6263c9, 0xee24e7c73bbe804c, 0xa26844209045a002, 0x6eee84a820223068, 0x8faf97ec2b8c7b92} },
	{ .deg = 16,
		.sign = 1,
		.t = (uint64_t[]) {0x86073bd2e6caee34, 0x74e908bd733573fc, 0x8973763fb65857d0, 0xfd66dc85e1204da9, 0x47232571f4397fb7, 0x7476b98894e4c9ef, 0xfd504042ed3b6e7a, 0x84b5b48f064f1f25, 0x3509cc3b6a5bf94b, 0x9bfc33ea5563d3da, 0xf30def00a34b422d, 0x8d0dab8b9ec97ae5, 0x294be0c2d8f9552e, 0x8e6b4f70d5c8ff1, 0x4139a8cd5b3d6c14, 0x4967bdd8c9aad21d} },
	{ .deg = 16,
		.sign = 1,
		.t = (uint64_t[]) {0xb5e04d9db593b6de, 0x596415809b174c57, 0xab1d41bbe11a7266, 0x59f6ac0bd6df8d2a, 0x13acbcc2df438199, 0x618e28a2c503f261, 0x783c0ca43368c556, 0xb2a44af476d5aaa2, 0x2824a035842326b5, 0xf9c66d040298da04, 0xb75e833ba2f00eb8, 0x87a3932225f78c12, 0x746d1a6dc368cc72, 0x8eee0fc1ce8246f8, 0x6a09db805b472174, 0x9c2f7c46ad3b0427} },
	{ .deg = 16,
		.sign = 1,
		.t = (uint64_t[]) {0x566c6aaad9299e89, 0x9d4c44131e597198, 0xd1f1454c2a4fd49f, 0x7b6e4a842d6eefd7, 0xe75e9a14ec34863d, 0xf4ed7983a73fcfd5, 0x784b72fe3ac85c20, 0x17096a8c32d5a5aa, 0x5e9adf4d829a8b9d, 0xcc7cb3f553c8a14e, 0x8b1c64455798712e, 0xb0d33b21ed3948e2, 0x83b1641cf2dc6387, 0x2e3d3d58c8d35c17, 0xccf37a5fe91811c8, 0x926d94379705a4bf} },
	{ .deg = 16,
		.sign = 1,
		.t = (uint64_t[]) {0xc348c27198939285, 0x9e127a75ce41e742, 0x48d77e43e7679486, 0x1b20b14b591432fb, 0xae5b2c70ca2397c, 0x67a2466864f54567, 0xb934d456fa10ec42, 0xf74ec76ce0bf0dc4, 0xaf3252196dd97d91, 0xa9d2107d1d8d6ad9, 0xa8900e2b24277218, 0x50fac445af344b34, 0x2e1a453e938abf98, 0xb0c8d5a34de35152, 0x8607024515a3b1f8, 0x457a50444a90d8d} },
	{ .deg = 16,
		.sign = 1,
		.t = (uint64_t[]) {0xbf8d989b6e8c33e, 0xe154264c8a4d908c, 0xae2a2733feb3272a, 0x9e5c9ce8b597a3be, 0x701753c59f3d786, 0xcf43eea06a8b2571, 0x1ca66156a2b57833, 0xc3e7f6e450af0f1c, 0x4db388eb377f0a2d, 0x95b35d9cbebeb805, 0xc9736881b86d4a02, 0x8733b7c44bf2f758, 0xc2f40fffe2546b63, 0x401b63ee8db5e9df, 0x33b486b7c8edb2b2, 0x4009b8a397dd9f32} }};

static _poly128 __theta__ = { .deg = 9,
	.hi = (int64_t[]) { -0x3e097d0a52d96, 0x37821a5bffb75, 0x28601e27ff4c7, 0xefb586a837a8, 0x2c2763727102, -0x1b42fb8195f1c, -0x23ad8d3d79cb6, -0xcf44dd46a3e, -0xad8a2deca077 },
	.lo = (uint64_t[]) { 0x4bdd449dde6ab3b5, 0xa81971eaddc7a190, 0xedd8c4db0e123581, 0xd983571f92184408, 0x7c2a990c697c0ec6, 0x131d72f9ec1b2ec4, 0xfa28cacd764344d6, 0x3041c845c1104435, 0x8ec3736e52ce8daf } };
#endif
