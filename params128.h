#ifndef PMNS_PARAMS128_H_INCLUDED
#define PMNS_PARAMS128_H_INCLUDED

#define RHO 119
#define N 9
#define LAMBDA 2


static inline _Bool add_overflow(unsigned __int128* restrict a, const unsigned __int128 b)
{
	//return __builtin_add_overflow(*a, b, a);
	const unsigned __int128 tmp = *a;
	*a += b;
	return *a < tmp;
}

// Various values you can get from precalc
#define M_or_B_is_M

static const uint64_t Mlo[] = {12462784520147880691u, 13626999274903513193u, 13445600365610154569u, 12235810214155833421u, 15541443829738529327u, 13027413588265404880u, 4962818898172568042u, 15302004069325240843u, 15670408009949270478u},
	M1lo[N] = {11927938443671157563u, 13745070355519544775u, 4010001739289508296u, 11515281687893023292u, 9348271767396413450u, 1434249778270493681u, 16830359142008825297u, 11025919907489690155u, 15928601452089250366u},
	MLambdalo[N] = {6478824966586209766u, 8807254476097474770u, 8444456657510757522u, 6024876354602115226u, 12636143585767507038u, 7608083102821258144u, 9925637796345136084u, 12157264064940930070u, 12894071946188989340u},
	M1Lambdalo[N] = {5409132813632763510u, 9043396637329537934u, 8020003478579016592u, 4583819302076494968u, 249799461083275284u, 2868499556540987362u, 15213974210308098978u, 3605095741269828694u, 13410458830468949116u};
static const int64_t Mhi[N] = {94200677330482, -321511948529749, 472467840254209, 20648697793755, 218723136461562, 327258330543715, 570953757503124, 159830231253601, -13278153286499},
	M1hi[N] = {-5009028682262161687, -1896943540966861478, 2162592902155876999, 5509999412294356080, 495223240243277860, -7608538317730340419, -4482962895077112411, 6615885866714018482, -6183666920653485762},
	MLambdahi[N] = {188401354660965, -643023897059497, 944935680508419, 41297395587511, 437446272923125, 654516661087431, 1141907515006248, 319660462507203, -26556306572997},
	M1Lambdahi[N] = {8428686709185228243, -3793887081933722955, 4325185804311753998, -7426745249120839455, 990446480486555721, 3229667438248870778, -8965925790154224821, -5214972340281514651, 6079410232402580093};
static const __int128 M1[N] = { ((__int128) LOW(-5009028682262161687) << 64) | 11927938443671157563u, ((__int128) LOW(-1896943540966861478) << 64) | 13745070355519544775u, ((__int128) LOW(2162592902155876999) << 64) | 4010001739289508296u, ((__int128) LOW(5509999412294356080) << 64) | 11515281687893023292u, ((__int128) LOW(495223240243277860) << 64) | 9348271767396413450u, ((__int128) LOW(-7608538317730340419) << 64) | 1434249778270493681u, ((__int128) LOW(-4482962895077112411) << 64) | 16830359142008825297u, ((__int128) LOW(6615885866714018482) << 64) | 11025919907489690155u, ((__int128) LOW(-6183666920653485762) << 64) | 15928601452089250366u },
	M1Lambda[] = { ((__int128) LOW(8428686709185228243) << 64) | 5409132813632763510u, ((__int128) LOW(-3793887081933722955) << 64) | 9043396637329537934u, ((__int128) LOW(4325185804311753998) << 64) | 8020003478579016592u, ((__int128) LOW(-7426745249120839455) << 64) | 4583819302076494968u, ((__int128) LOW(990446480486555721) << 64) | 249799461083275284u, ((__int128) LOW(3229667438248870778) << 64) | 2868499556540987362u, ((__int128) LOW(-8965925790154224821) << 64) | 15213974210308098978u, ((__int128) LOW(-5214972340281514651) << 64) | 3605095741269828694u, ((__int128) LOW(6079410232402580093) << 64) | 13410458830468949116u };

static inline void m1_or_b1_mns128_mod_mult_ext_red_pre(unsigned __int128* restrict Rlo,
	const restrict poly128 A)
{

Rlo[0] = (__int128) ((__int128) A->lo[1] * 13410458830468949116u) + ((__int128) (LOW(A->lo[1] * 6079410232402580093) + LOW(A->hi[1] * 13410458830468949116u)) << 64) + ((__int128) A->lo[2] * 3605095741269828694u) + ((__int128) (LOW(A->lo[2] * -5214972340281514651) + LOW(A->hi[2] * 3605095741269828694u)) << 64) + ((__int128) A->lo[3] * 15213974210308098978u) + ((__int128) (LOW(A->lo[3] * -8965925790154224821) + LOW(A->hi[3] * 15213974210308098978u)) << 64) + ((__int128) A->lo[4] * 2868499556540987362u) + ((__int128) (LOW(A->lo[4] * 3229667438248870778) + LOW(A->hi[4] * 2868499556540987362u)) << 64) + ((__int128) A->lo[5] * 249799461083275284u) + ((__int128) (LOW(A->lo[5] * 990446480486555721) + LOW(A->hi[5] * 249799461083275284u)) << 64) + ((__int128) A->lo[6] * 4583819302076494968u) + ((__int128) (LOW(A->lo[6] * -7426745249120839455) + LOW(A->hi[6] * 4583819302076494968u)) << 64) + ((__int128) A->lo[7] * 8020003478579016592u) + ((__int128) (LOW(A->lo[7] * 4325185804311753998) + LOW(A->hi[7] * 8020003478579016592u)) << 64) + ((__int128) A->lo[8] * 9043396637329537934u) + ((__int128) (LOW(A->lo[8] * -3793887081933722955) + LOW(A->hi[8] * 9043396637329537934u)) << 64) + ((__int128) A->lo[0] * 11927938443671157563u) + ((__int128) (LOW(A->lo[0] * -5009028682262161687) + LOW(A->hi[0] * 11927938443671157563u)) << 64);
Rlo[1] = (__int128) ((__int128) A->lo[2] * 13410458830468949116u) + ((__int128) (LOW(A->lo[2] * 6079410232402580093) + LOW(A->hi[2] * 13410458830468949116u)) << 64) + ((__int128) A->lo[3] * 3605095741269828694u) + ((__int128) (LOW(A->lo[3] * -5214972340281514651) + LOW(A->hi[3] * 3605095741269828694u)) << 64) + ((__int128) A->lo[4] * 15213974210308098978u) + ((__int128) (LOW(A->lo[4] * -8965925790154224821) + LOW(A->hi[4] * 15213974210308098978u)) << 64) + ((__int128) A->lo[5] * 2868499556540987362u) + ((__int128) (LOW(A->lo[5] * 3229667438248870778) + LOW(A->hi[5] * 2868499556540987362u)) << 64) + ((__int128) A->lo[6] * 249799461083275284u) + ((__int128) (LOW(A->lo[6] * 990446480486555721) + LOW(A->hi[6] * 249799461083275284u)) << 64) + ((__int128) A->lo[7] * 4583819302076494968u) + ((__int128) (LOW(A->lo[7] * -7426745249120839455) + LOW(A->hi[7] * 4583819302076494968u)) << 64) + ((__int128) A->lo[8] * 8020003478579016592u) + ((__int128) (LOW(A->lo[8] * 4325185804311753998) + LOW(A->hi[8] * 8020003478579016592u)) << 64) + ((__int128) A->lo[0] * 13745070355519544775u) + ((__int128) (LOW(A->lo[0] * -1896943540966861478) + LOW(A->hi[0] * 13745070355519544775u)) << 64) + ((__int128) A->lo[1] * 11927938443671157563u) + ((__int128) (LOW(A->lo[1] * -5009028682262161687) + LOW(A->hi[1] * 11927938443671157563u)) << 64);
Rlo[2] = (__int128) ((__int128) A->lo[3] * 13410458830468949116u) + ((__int128) (LOW(A->lo[3] * 6079410232402580093) + LOW(A->hi[3] * 13410458830468949116u)) << 64) + ((__int128) A->lo[4] * 3605095741269828694u) + ((__int128) (LOW(A->lo[4] * -5214972340281514651) + LOW(A->hi[4] * 3605095741269828694u)) << 64) + ((__int128) A->lo[5] * 15213974210308098978u) + ((__int128) (LOW(A->lo[5] * -8965925790154224821) + LOW(A->hi[5] * 15213974210308098978u)) << 64) + ((__int128) A->lo[6] * 2868499556540987362u) + ((__int128) (LOW(A->lo[6] * 3229667438248870778) + LOW(A->hi[6] * 2868499556540987362u)) << 64) + ((__int128) A->lo[7] * 249799461083275284u) + ((__int128) (LOW(A->lo[7] * 990446480486555721) + LOW(A->hi[7] * 249799461083275284u)) << 64) + ((__int128) A->lo[8] * 4583819302076494968u) + ((__int128) (LOW(A->lo[8] * -7426745249120839455) + LOW(A->hi[8] * 4583819302076494968u)) << 64) + ((__int128) A->lo[0] * 4010001739289508296u) + ((__int128) (LOW(A->lo[0] * 2162592902155876999) + LOW(A->hi[0] * 4010001739289508296u)) << 64) + ((__int128) A->lo[1] * 13745070355519544775u) + ((__int128) (LOW(A->lo[1] * -1896943540966861478) + LOW(A->hi[1] * 13745070355519544775u)) << 64) + ((__int128) A->lo[2] * 11927938443671157563u) + ((__int128) (LOW(A->lo[2] * -5009028682262161687) + LOW(A->hi[2] * 11927938443671157563u)) << 64);
Rlo[3] = (__int128) ((__int128) A->lo[4] * 13410458830468949116u) + ((__int128) (LOW(A->lo[4] * 6079410232402580093) + LOW(A->hi[4] * 13410458830468949116u)) << 64) + ((__int128) A->lo[5] * 3605095741269828694u) + ((__int128) (LOW(A->lo[5] * -5214972340281514651) + LOW(A->hi[5] * 3605095741269828694u)) << 64) + ((__int128) A->lo[6] * 15213974210308098978u) + ((__int128) (LOW(A->lo[6] * -8965925790154224821) + LOW(A->hi[6] * 15213974210308098978u)) << 64) + ((__int128) A->lo[7] * 2868499556540987362u) + ((__int128) (LOW(A->lo[7] * 3229667438248870778) + LOW(A->hi[7] * 2868499556540987362u)) << 64) + ((__int128) A->lo[8] * 249799461083275284u) + ((__int128) (LOW(A->lo[8] * 990446480486555721) + LOW(A->hi[8] * 249799461083275284u)) << 64) + ((__int128) A->lo[0] * 11515281687893023292u) + ((__int128) (LOW(A->lo[0] * 5509999412294356080) + LOW(A->hi[0] * 11515281687893023292u)) << 64) + ((__int128) A->lo[1] * 4010001739289508296u) + ((__int128) (LOW(A->lo[1] * 2162592902155876999) + LOW(A->hi[1] * 4010001739289508296u)) << 64) + ((__int128) A->lo[2] * 13745070355519544775u) + ((__int128) (LOW(A->lo[2] * -1896943540966861478) + LOW(A->hi[2] * 13745070355519544775u)) << 64) + ((__int128) A->lo[3] * 11927938443671157563u) + ((__int128) (LOW(A->lo[3] * -5009028682262161687) + LOW(A->hi[3] * 11927938443671157563u)) << 64);
Rlo[4] = (__int128) ((__int128) A->lo[5] * 13410458830468949116u) + ((__int128) (LOW(A->lo[5] * 6079410232402580093) + LOW(A->hi[5] * 13410458830468949116u)) << 64) + ((__int128) A->lo[6] * 3605095741269828694u) + ((__int128) (LOW(A->lo[6] * -5214972340281514651) + LOW(A->hi[6] * 3605095741269828694u)) << 64) + ((__int128) A->lo[7] * 15213974210308098978u) + ((__int128) (LOW(A->lo[7] * -8965925790154224821) + LOW(A->hi[7] * 15213974210308098978u)) << 64) + ((__int128) A->lo[8] * 2868499556540987362u) + ((__int128) (LOW(A->lo[8] * 3229667438248870778) + LOW(A->hi[8] * 2868499556540987362u)) << 64) + ((__int128) A->lo[0] * 9348271767396413450u) + ((__int128) (LOW(A->lo[0] * 495223240243277860) + LOW(A->hi[0] * 9348271767396413450u)) << 64) + ((__int128) A->lo[1] * 11515281687893023292u) + ((__int128) (LOW(A->lo[1] * 5509999412294356080) + LOW(A->hi[1] * 11515281687893023292u)) << 64) + ((__int128) A->lo[2] * 4010001739289508296u) + ((__int128) (LOW(A->lo[2] * 2162592902155876999) + LOW(A->hi[2] * 4010001739289508296u)) << 64) + ((__int128) A->lo[3] * 13745070355519544775u) + ((__int128) (LOW(A->lo[3] * -1896943540966861478) + LOW(A->hi[3] * 13745070355519544775u)) << 64) + ((__int128) A->lo[4] * 11927938443671157563u) + ((__int128) (LOW(A->lo[4] * -5009028682262161687) + LOW(A->hi[4] * 11927938443671157563u)) << 64);
Rlo[5] = (__int128) ((__int128) A->lo[6] * 13410458830468949116u) + ((__int128) (LOW(A->lo[6] * 6079410232402580093) + LOW(A->hi[6] * 13410458830468949116u)) << 64) + ((__int128) A->lo[7] * 3605095741269828694u) + ((__int128) (LOW(A->lo[7] * -5214972340281514651) + LOW(A->hi[7] * 3605095741269828694u)) << 64) + ((__int128) A->lo[8] * 15213974210308098978u) + ((__int128) (LOW(A->lo[8] * -8965925790154224821) + LOW(A->hi[8] * 15213974210308098978u)) << 64) + ((__int128) A->lo[0] * 1434249778270493681u) + ((__int128) (LOW(A->lo[0] * -7608538317730340419) + LOW(A->hi[0] * 1434249778270493681u)) << 64) + ((__int128) A->lo[1] * 9348271767396413450u) + ((__int128) (LOW(A->lo[1] * 495223240243277860) + LOW(A->hi[1] * 9348271767396413450u)) << 64) + ((__int128) A->lo[2] * 11515281687893023292u) + ((__int128) (LOW(A->lo[2] * 5509999412294356080) + LOW(A->hi[2] * 11515281687893023292u)) << 64) + ((__int128) A->lo[3] * 4010001739289508296u) + ((__int128) (LOW(A->lo[3] * 2162592902155876999) + LOW(A->hi[3] * 4010001739289508296u)) << 64) + ((__int128) A->lo[4] * 13745070355519544775u) + ((__int128) (LOW(A->lo[4] * -1896943540966861478) + LOW(A->hi[4] * 13745070355519544775u)) << 64) + ((__int128) A->lo[5] * 11927938443671157563u) + ((__int128) (LOW(A->lo[5] * -5009028682262161687) + LOW(A->hi[5] * 11927938443671157563u)) << 64);
Rlo[6] = (__int128) ((__int128) A->lo[7] * 13410458830468949116u) + ((__int128) (LOW(A->lo[7] * 6079410232402580093) + LOW(A->hi[7] * 13410458830468949116u)) << 64) + ((__int128) A->lo[8] * 3605095741269828694u) + ((__int128) (LOW(A->lo[8] * -5214972340281514651) + LOW(A->hi[8] * 3605095741269828694u)) << 64) + ((__int128) A->lo[0] * 16830359142008825297u) + ((__int128) (LOW(A->lo[0] * -4482962895077112411) + LOW(A->hi[0] * 16830359142008825297u)) << 64) + ((__int128) A->lo[1] * 1434249778270493681u) + ((__int128) (LOW(A->lo[1] * -7608538317730340419) + LOW(A->hi[1] * 1434249778270493681u)) << 64) + ((__int128) A->lo[2] * 9348271767396413450u) + ((__int128) (LOW(A->lo[2] * 495223240243277860) + LOW(A->hi[2] * 9348271767396413450u)) << 64) + ((__int128) A->lo[3] * 11515281687893023292u) + ((__int128) (LOW(A->lo[3] * 5509999412294356080) + LOW(A->hi[3] * 11515281687893023292u)) << 64) + ((__int128) A->lo[4] * 4010001739289508296u) + ((__int128) (LOW(A->lo[4] * 2162592902155876999) + LOW(A->hi[4] * 4010001739289508296u)) << 64) + ((__int128) A->lo[5] * 13745070355519544775u) + ((__int128) (LOW(A->lo[5] * -1896943540966861478) + LOW(A->hi[5] * 13745070355519544775u)) << 64) + ((__int128) A->lo[6] * 11927938443671157563u) + ((__int128) (LOW(A->lo[6] * -5009028682262161687) + LOW(A->hi[6] * 11927938443671157563u)) << 64);
Rlo[7] = (__int128) ((__int128) A->lo[8] * 13410458830468949116u) + ((__int128) (LOW(A->lo[8] * 6079410232402580093) + LOW(A->hi[8] * 13410458830468949116u)) << 64) + ((__int128) A->lo[0] * 11025919907489690155u) + ((__int128) (LOW(A->lo[0] * 6615885866714018482) + LOW(A->hi[0] * 11025919907489690155u)) << 64) + ((__int128) A->lo[1] * 16830359142008825297u) + ((__int128) (LOW(A->lo[1] * -4482962895077112411) + LOW(A->hi[1] * 16830359142008825297u)) << 64) + ((__int128) A->lo[2] * 1434249778270493681u) + ((__int128) (LOW(A->lo[2] * -7608538317730340419) + LOW(A->hi[2] * 1434249778270493681u)) << 64) + ((__int128) A->lo[3] * 9348271767396413450u) + ((__int128) (LOW(A->lo[3] * 495223240243277860) + LOW(A->hi[3] * 9348271767396413450u)) << 64) + ((__int128) A->lo[4] * 11515281687893023292u) + ((__int128) (LOW(A->lo[4] * 5509999412294356080) + LOW(A->hi[4] * 11515281687893023292u)) << 64) + ((__int128) A->lo[5] * 4010001739289508296u) + ((__int128) (LOW(A->lo[5] * 2162592902155876999) + LOW(A->hi[5] * 4010001739289508296u)) << 64) + ((__int128) A->lo[6] * 13745070355519544775u) + ((__int128) (LOW(A->lo[6] * -1896943540966861478) + LOW(A->hi[6] * 13745070355519544775u)) << 64) + ((__int128) A->lo[7] * 11927938443671157563u) + ((__int128) (LOW(A->lo[7] * -5009028682262161687) + LOW(A->hi[7] * 11927938443671157563u)) << 64);
Rlo[8] = (__int128) ((__int128) A->lo[0] * 15928601452089250366u) + ((__int128) (LOW(A->lo[0] * -6183666920653485762) + LOW(A->hi[0] * 15928601452089250366u)) << 64) + ((__int128) A->lo[1] * 11025919907489690155u) + ((__int128) (LOW(A->lo[1] * 6615885866714018482) + LOW(A->hi[1] * 11025919907489690155u)) << 64) + ((__int128) A->lo[2] * 16830359142008825297u) + ((__int128) (LOW(A->lo[2] * -4482962895077112411) + LOW(A->hi[2] * 16830359142008825297u)) << 64) + ((__int128) A->lo[3] * 1434249778270493681u) + ((__int128) (LOW(A->lo[3] * -7608538317730340419) + LOW(A->hi[3] * 1434249778270493681u)) << 64) + ((__int128) A->lo[4] * 9348271767396413450u) + ((__int128) (LOW(A->lo[4] * 495223240243277860) + LOW(A->hi[4] * 9348271767396413450u)) << 64) + ((__int128) A->lo[5] * 11515281687893023292u) + ((__int128) (LOW(A->lo[5] * 5509999412294356080) + LOW(A->hi[5] * 11515281687893023292u)) << 64) + ((__int128) A->lo[6] * 4010001739289508296u) + ((__int128) (LOW(A->lo[6] * 2162592902155876999) + LOW(A->hi[6] * 4010001739289508296u)) << 64) + ((__int128) A->lo[7] * 13745070355519544775u) + ((__int128) (LOW(A->lo[7] * -1896943540966861478) + LOW(A->hi[7] * 13745070355519544775u)) << 64) + ((__int128) A->lo[8] * 11927938443671157563u) + ((__int128) (LOW(A->lo[8] * -5009028682262161687) + LOW(A->hi[8] * 11927938443671157563u)) << 64);
}


static inline void m_or_b_mns128_mod_mult_ext_red_pre(__int128* restrict Rhi, 
	unsigned __int128* restrict Rlo, const restrict poly128 A)
{
	unsigned __int128 A0B0, A1B0, A0B1, tmplo;
	__int128 A1B1, aux2, aux3;

	A1B1 = (__int128) LOW(A->hi[1]) * -26556306572997;
	A1B0 = (__int128) LOW(A->hi[1]) * 12894071946188989340u;
	A0B1 = (__int128) (A->lo[1]) * -26556306572997;
	A0B0 = (__int128) (A->lo[1]) * 12894071946188989340u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[0] += (__int128) aux2 + A1B1 +
		add_overflow(Rlo + 0, tmplo);

	A1B1 = (__int128) LOW(A->hi[2]) * 319660462507203;
	A1B0 = (__int128) LOW(A->hi[2]) * 12157264064940930070u;
	A0B1 = (__int128) (A->lo[2]) * 319660462507203;
	A0B0 = (__int128) (A->lo[2]) * 12157264064940930070u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[0] += (__int128) aux2 + A1B1 +
		add_overflow(Rlo + 0, tmplo);

	A1B1 = (__int128) LOW(A->hi[3]) * 1141907515006248;
	A1B0 = (__int128) LOW(A->hi[3]) * 9925637796345136084u;
	A0B1 = (__int128) (A->lo[3]) * 1141907515006248;
	A0B0 = (__int128) (A->lo[3]) * 9925637796345136084u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[0] += (__int128) aux2 + A1B1 +
		add_overflow(Rlo + 0, tmplo);

	A1B1 = (__int128) LOW(A->hi[4]) * 654516661087431;
	A1B0 = (__int128) LOW(A->hi[4]) * 7608083102821258144u;
	A0B1 = (__int128) (A->lo[4]) * 654516661087431;
	A0B0 = (__int128) (A->lo[4]) * 7608083102821258144u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[0] += (__int128) aux2 + A1B1 +
		add_overflow(Rlo + 0, tmplo);

	A1B1 = (__int128) LOW(A->hi[5]) * 437446272923125;
	A1B0 = (__int128) LOW(A->hi[5]) * 12636143585767507038u;
	A0B1 = (__int128) (A->lo[5]) * 437446272923125;
	A0B0 = (__int128) (A->lo[5]) * 12636143585767507038u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[0] += (__int128) aux2 + A1B1 +
		add_overflow(Rlo + 0, tmplo);

	A1B1 = (__int128) LOW(A->hi[6]) * 41297395587511;
	A1B0 = (__int128) LOW(A->hi[6]) * 6024876354602115226u;
	A0B1 = (__int128) (A->lo[6]) * 41297395587511;
	A0B0 = (__int128) (A->lo[6]) * 6024876354602115226u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[0] += (__int128) aux2 + A1B1 +
		add_overflow(Rlo + 0, tmplo);

	A1B1 = (__int128) LOW(A->hi[7]) * 944935680508419;
	A1B0 = (__int128) LOW(A->hi[7]) * 8444456657510757522u;
	A0B1 = (__int128) (A->lo[7]) * 944935680508419;
	A0B0 = (__int128) (A->lo[7]) * 8444456657510757522u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[0] += (__int128) aux2 + A1B1 +
		add_overflow(Rlo + 0, tmplo);

	A1B1 = (__int128) LOW(A->hi[8]) * -643023897059497;
	A1B0 = (__int128) LOW(A->hi[8]) * 8807254476097474770u;
	A0B1 = (__int128) (A->lo[8]) * -643023897059497;
	A0B0 = (__int128) (A->lo[8]) * 8807254476097474770u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[0] += (__int128) aux2 + A1B1 +
		add_overflow(Rlo + 0, tmplo);

	A1B1 = (__int128) LOW(A->hi[0]) * 94200677330482;
	A1B0 = (__int128) LOW(A->hi[0]) * 12462784520147880691u;
	A0B1 = (__int128) (A->lo[0]) * 94200677330482;
	A0B0 = (__int128) (A->lo[0]) * 12462784520147880691u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[0] += (__int128) aux2 + A1B1 +
		add_overflow(Rlo + 0, tmplo);

	A1B1 = (__int128) LOW(A->hi[2]) * -26556306572997;
	A1B0 = (__int128) LOW(A->hi[2]) * 12894071946188989340u;
	A0B1 = (__int128) (A->lo[2]) * -26556306572997;
	A0B0 = (__int128) (A->lo[2]) * 12894071946188989340u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[1] += (__int128) aux2 + A1B1 +
		add_overflow(Rlo + 1, tmplo);

	A1B1 = (__int128) LOW(A->hi[3]) * 319660462507203;
	A1B0 = (__int128) LOW(A->hi[3]) * 12157264064940930070u;
	A0B1 = (__int128) (A->lo[3]) * 319660462507203;
	A0B0 = (__int128) (A->lo[3]) * 12157264064940930070u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[1] += (__int128) aux2 + A1B1 +
		add_overflow(Rlo + 1, tmplo);

	A1B1 = (__int128) LOW(A->hi[4]) * 1141907515006248;
	A1B0 = (__int128) LOW(A->hi[4]) * 9925637796345136084u;
	A0B1 = (__int128) (A->lo[4]) * 1141907515006248;
	A0B0 = (__int128) (A->lo[4]) * 9925637796345136084u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[1] += (__int128) aux2 + A1B1 +
		add_overflow(Rlo + 1, tmplo);

	A1B1 = (__int128) LOW(A->hi[5]) * 654516661087431;
	A1B0 = (__int128) LOW(A->hi[5]) * 7608083102821258144u;
	A0B1 = (__int128) (A->lo[5]) * 654516661087431;
	A0B0 = (__int128) (A->lo[5]) * 7608083102821258144u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[1] += (__int128) aux2 + A1B1 +
		add_overflow(Rlo + 1, tmplo);

	A1B1 = (__int128) LOW(A->hi[6]) * 437446272923125;
	A1B0 = (__int128) LOW(A->hi[6]) * 12636143585767507038u;
	A0B1 = (__int128) (A->lo[6]) * 437446272923125;
	A0B0 = (__int128) (A->lo[6]) * 12636143585767507038u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[1] += (__int128) aux2 + A1B1 +
		add_overflow(Rlo + 1, tmplo);

	A1B1 = (__int128) LOW(A->hi[7]) * 41297395587511;
	A1B0 = (__int128) LOW(A->hi[7]) * 6024876354602115226u;
	A0B1 = (__int128) (A->lo[7]) * 41297395587511;
	A0B0 = (__int128) (A->lo[7]) * 6024876354602115226u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[1] += (__int128) aux2 + A1B1 +
		add_overflow(Rlo + 1, tmplo);

	A1B1 = (__int128) LOW(A->hi[8]) * 944935680508419;
	A1B0 = (__int128) LOW(A->hi[8]) * 8444456657510757522u;
	A0B1 = (__int128) (A->lo[8]) * 944935680508419;
	A0B0 = (__int128) (A->lo[8]) * 8444456657510757522u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[1] += (__int128) aux2 + A1B1 +
		add_overflow(Rlo + 1, tmplo);

	A1B1 = (__int128) LOW(A->hi[0]) * -321511948529749;
	A1B0 = (__int128) LOW(A->hi[0]) * 13626999274903513193u;
	A0B1 = (__int128) (A->lo[0]) * -321511948529749;
	A0B0 = (__int128) (A->lo[0]) * 13626999274903513193u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[1] += (__int128) aux2 + A1B1 +
		add_overflow(Rlo + 1, tmplo);

	A1B1 = (__int128) LOW(A->hi[1]) * 94200677330482;
	A1B0 = (__int128) LOW(A->hi[1]) * 12462784520147880691u;
	A0B1 = (__int128) (A->lo[1]) * 94200677330482;
	A0B0 = (__int128) (A->lo[1]) * 12462784520147880691u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[1] += (__int128) aux2 + A1B1 +
		add_overflow(Rlo + 1, tmplo);

	A1B1 = (__int128) LOW(A->hi[3]) * -26556306572997;
	A1B0 = (__int128) LOW(A->hi[3]) * 12894071946188989340u;
	A0B1 = (__int128) (A->lo[3]) * -26556306572997;
	A0B0 = (__int128) (A->lo[3]) * 12894071946188989340u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[2] += (__int128) aux2 + A1B1 +
		add_overflow(Rlo + 2, tmplo);

	A1B1 = (__int128) LOW(A->hi[4]) * 319660462507203;
	A1B0 = (__int128) LOW(A->hi[4]) * 12157264064940930070u;
	A0B1 = (__int128) (A->lo[4]) * 319660462507203;
	A0B0 = (__int128) (A->lo[4]) * 12157264064940930070u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[2] += (__int128) aux2 + A1B1 +
		add_overflow(Rlo + 2, tmplo);

	A1B1 = (__int128) LOW(A->hi[5]) * 1141907515006248;
	A1B0 = (__int128) LOW(A->hi[5]) * 9925637796345136084u;
	A0B1 = (__int128) (A->lo[5]) * 1141907515006248;
	A0B0 = (__int128) (A->lo[5]) * 9925637796345136084u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[2] += (__int128) aux2 + A1B1 +
		add_overflow(Rlo + 2, tmplo);

	A1B1 = (__int128) LOW(A->hi[6]) * 654516661087431;
	A1B0 = (__int128) LOW(A->hi[6]) * 7608083102821258144u;
	A0B1 = (__int128) (A->lo[6]) * 654516661087431;
	A0B0 = (__int128) (A->lo[6]) * 7608083102821258144u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[2] += (__int128) aux2 + A1B1 +
		add_overflow(Rlo + 2, tmplo);

	A1B1 = (__int128) LOW(A->hi[7]) * 437446272923125;
	A1B0 = (__int128) LOW(A->hi[7]) * 12636143585767507038u;
	A0B1 = (__int128) (A->lo[7]) * 437446272923125;
	A0B0 = (__int128) (A->lo[7]) * 12636143585767507038u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[2] += (__int128) aux2 + A1B1 +
		add_overflow(Rlo + 2, tmplo);

	A1B1 = (__int128) LOW(A->hi[8]) * 41297395587511;
	A1B0 = (__int128) LOW(A->hi[8]) * 6024876354602115226u;
	A0B1 = (__int128) (A->lo[8]) * 41297395587511;
	A0B0 = (__int128) (A->lo[8]) * 6024876354602115226u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[2] += (__int128) aux2 + A1B1 +
		add_overflow(Rlo + 2, tmplo);

	A1B1 = (__int128) LOW(A->hi[0]) * 472467840254209;
	A1B0 = (__int128) LOW(A->hi[0]) * 13445600365610154569u;
	A0B1 = (__int128) (A->lo[0]) * 472467840254209;
	A0B0 = (__int128) (A->lo[0]) * 13445600365610154569u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[2] += (__int128) aux2 + A1B1 +
		add_overflow(Rlo + 2, tmplo);

	A1B1 = (__int128) LOW(A->hi[1]) * -321511948529749;
	A1B0 = (__int128) LOW(A->hi[1]) * 13626999274903513193u;
	A0B1 = (__int128) (A->lo[1]) * -321511948529749;
	A0B0 = (__int128) (A->lo[1]) * 13626999274903513193u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[2] += (__int128) aux2 + A1B1 +
		add_overflow(Rlo + 2, tmplo);

	A1B1 = (__int128) LOW(A->hi[2]) * 94200677330482;
	A1B0 = (__int128) LOW(A->hi[2]) * 12462784520147880691u;
	A0B1 = (__int128) (A->lo[2]) * 94200677330482;
	A0B0 = (__int128) (A->lo[2]) * 12462784520147880691u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[2] += (__int128) aux2 + A1B1 +
		add_overflow(Rlo + 2, tmplo);

	A1B1 = (__int128) LOW(A->hi[4]) * -26556306572997;
	A1B0 = (__int128) LOW(A->hi[4]) * 12894071946188989340u;
	A0B1 = (__int128) (A->lo[4]) * -26556306572997;
	A0B0 = (__int128) (A->lo[4]) * 12894071946188989340u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[3] += (__int128) aux2 + A1B1 +
		add_overflow(Rlo + 3, tmplo);

	A1B1 = (__int128) LOW(A->hi[5]) * 319660462507203;
	A1B0 = (__int128) LOW(A->hi[5]) * 12157264064940930070u;
	A0B1 = (__int128) (A->lo[5]) * 319660462507203;
	A0B0 = (__int128) (A->lo[5]) * 12157264064940930070u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[3] += (__int128) aux2 + A1B1 +
		add_overflow(Rlo + 3, tmplo);

	A1B1 = (__int128) LOW(A->hi[6]) * 1141907515006248;
	A1B0 = (__int128) LOW(A->hi[6]) * 9925637796345136084u;
	A0B1 = (__int128) (A->lo[6]) * 1141907515006248;
	A0B0 = (__int128) (A->lo[6]) * 9925637796345136084u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[3] += (__int128) aux2 + A1B1 +
		add_overflow(Rlo + 3, tmplo);

	A1B1 = (__int128) LOW(A->hi[7]) * 654516661087431;
	A1B0 = (__int128) LOW(A->hi[7]) * 7608083102821258144u;
	A0B1 = (__int128) (A->lo[7]) * 654516661087431;
	A0B0 = (__int128) (A->lo[7]) * 7608083102821258144u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[3] += (__int128) aux2 + A1B1 +
		add_overflow(Rlo + 3, tmplo);

	A1B1 = (__int128) LOW(A->hi[8]) * 437446272923125;
	A1B0 = (__int128) LOW(A->hi[8]) * 12636143585767507038u;
	A0B1 = (__int128) (A->lo[8]) * 437446272923125;
	A0B0 = (__int128) (A->lo[8]) * 12636143585767507038u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[3] += (__int128) aux2 + A1B1 +
		add_overflow(Rlo + 3, tmplo);

	A1B1 = (__int128) LOW(A->hi[0]) * 20648697793755;
	A1B0 = (__int128) LOW(A->hi[0]) * 12235810214155833421u;
	A0B1 = (__int128) (A->lo[0]) * 20648697793755;
	A0B0 = (__int128) (A->lo[0]) * 12235810214155833421u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[3] += (__int128) aux2 + A1B1 +
		add_overflow(Rlo + 3, tmplo);

	A1B1 = (__int128) LOW(A->hi[1]) * 472467840254209;
	A1B0 = (__int128) LOW(A->hi[1]) * 13445600365610154569u;
	A0B1 = (__int128) (A->lo[1]) * 472467840254209;
	A0B0 = (__int128) (A->lo[1]) * 13445600365610154569u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[3] += (__int128) aux2 + A1B1 +
		add_overflow(Rlo + 3, tmplo);

	A1B1 = (__int128) LOW(A->hi[2]) * -321511948529749;
	A1B0 = (__int128) LOW(A->hi[2]) * 13626999274903513193u;
	A0B1 = (__int128) (A->lo[2]) * -321511948529749;
	A0B0 = (__int128) (A->lo[2]) * 13626999274903513193u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[3] += (__int128) aux2 + A1B1 +
		add_overflow(Rlo + 3, tmplo);

	A1B1 = (__int128) LOW(A->hi[3]) * 94200677330482;
	A1B0 = (__int128) LOW(A->hi[3]) * 12462784520147880691u;
	A0B1 = (__int128) (A->lo[3]) * 94200677330482;
	A0B0 = (__int128) (A->lo[3]) * 12462784520147880691u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[3] += (__int128) aux2 + A1B1 +
		add_overflow(Rlo + 3, tmplo);

	A1B1 = (__int128) LOW(A->hi[5]) * -26556306572997;
	A1B0 = (__int128) LOW(A->hi[5]) * 12894071946188989340u;
	A0B1 = (__int128) (A->lo[5]) * -26556306572997;
	A0B0 = (__int128) (A->lo[5]) * 12894071946188989340u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[4] += (__int128) aux2 + A1B1 +
		add_overflow(Rlo + 4, tmplo);

	A1B1 = (__int128) LOW(A->hi[6]) * 319660462507203;
	A1B0 = (__int128) LOW(A->hi[6]) * 12157264064940930070u;
	A0B1 = (__int128) (A->lo[6]) * 319660462507203;
	A0B0 = (__int128) (A->lo[6]) * 12157264064940930070u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[4] += (__int128) aux2 + A1B1 +
		add_overflow(Rlo + 4, tmplo);

	A1B1 = (__int128) LOW(A->hi[7]) * 1141907515006248;
	A1B0 = (__int128) LOW(A->hi[7]) * 9925637796345136084u;
	A0B1 = (__int128) (A->lo[7]) * 1141907515006248;
	A0B0 = (__int128) (A->lo[7]) * 9925637796345136084u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[4] += (__int128) aux2 + A1B1 +
		add_overflow(Rlo + 4, tmplo);

	A1B1 = (__int128) LOW(A->hi[8]) * 654516661087431;
	A1B0 = (__int128) LOW(A->hi[8]) * 7608083102821258144u;
	A0B1 = (__int128) (A->lo[8]) * 654516661087431;
	A0B0 = (__int128) (A->lo[8]) * 7608083102821258144u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[4] += (__int128) aux2 + A1B1 +
		add_overflow(Rlo + 4, tmplo);

	A1B1 = (__int128) LOW(A->hi[0]) * 218723136461562;
	A1B0 = (__int128) LOW(A->hi[0]) * 15541443829738529327u;
	A0B1 = (__int128) (A->lo[0]) * 218723136461562;
	A0B0 = (__int128) (A->lo[0]) * 15541443829738529327u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[4] += (__int128) aux2 + A1B1 +
		add_overflow(Rlo + 4, tmplo);

	A1B1 = (__int128) LOW(A->hi[1]) * 20648697793755;
	A1B0 = (__int128) LOW(A->hi[1]) * 12235810214155833421u;
	A0B1 = (__int128) (A->lo[1]) * 20648697793755;
	A0B0 = (__int128) (A->lo[1]) * 12235810214155833421u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[4] += (__int128) aux2 + A1B1 +
		add_overflow(Rlo + 4, tmplo);

	A1B1 = (__int128) LOW(A->hi[2]) * 472467840254209;
	A1B0 = (__int128) LOW(A->hi[2]) * 13445600365610154569u;
	A0B1 = (__int128) (A->lo[2]) * 472467840254209;
	A0B0 = (__int128) (A->lo[2]) * 13445600365610154569u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[4] += (__int128) aux2 + A1B1 +
		add_overflow(Rlo + 4, tmplo);

	A1B1 = (__int128) LOW(A->hi[3]) * -321511948529749;
	A1B0 = (__int128) LOW(A->hi[3]) * 13626999274903513193u;
	A0B1 = (__int128) (A->lo[3]) * -321511948529749;
	A0B0 = (__int128) (A->lo[3]) * 13626999274903513193u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[4] += (__int128) aux2 + A1B1 +
		add_overflow(Rlo + 4, tmplo);

	A1B1 = (__int128) LOW(A->hi[4]) * 94200677330482;
	A1B0 = (__int128) LOW(A->hi[4]) * 12462784520147880691u;
	A0B1 = (__int128) (A->lo[4]) * 94200677330482;
	A0B0 = (__int128) (A->lo[4]) * 12462784520147880691u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[4] += (__int128) aux2 + A1B1 +
		add_overflow(Rlo + 4, tmplo);

	A1B1 = (__int128) LOW(A->hi[6]) * -26556306572997;
	A1B0 = (__int128) LOW(A->hi[6]) * 12894071946188989340u;
	A0B1 = (__int128) (A->lo[6]) * -26556306572997;
	A0B0 = (__int128) (A->lo[6]) * 12894071946188989340u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[5] += (__int128) aux2 + A1B1 +
		add_overflow(Rlo + 5, tmplo);

	A1B1 = (__int128) LOW(A->hi[7]) * 319660462507203;
	A1B0 = (__int128) LOW(A->hi[7]) * 12157264064940930070u;
	A0B1 = (__int128) (A->lo[7]) * 319660462507203;
	A0B0 = (__int128) (A->lo[7]) * 12157264064940930070u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[5] += (__int128) aux2 + A1B1 +
		add_overflow(Rlo + 5, tmplo);

	A1B1 = (__int128) LOW(A->hi[8]) * 1141907515006248;
	A1B0 = (__int128) LOW(A->hi[8]) * 9925637796345136084u;
	A0B1 = (__int128) (A->lo[8]) * 1141907515006248;
	A0B0 = (__int128) (A->lo[8]) * 9925637796345136084u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[5] += (__int128) aux2 + A1B1 +
		add_overflow(Rlo + 5, tmplo);

	A1B1 = (__int128) LOW(A->hi[0]) * 327258330543715;
	A1B0 = (__int128) LOW(A->hi[0]) * 13027413588265404880u;
	A0B1 = (__int128) (A->lo[0]) * 327258330543715;
	A0B0 = (__int128) (A->lo[0]) * 13027413588265404880u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[5] += (__int128) aux2 + A1B1 +
		add_overflow(Rlo + 5, tmplo);

	A1B1 = (__int128) LOW(A->hi[1]) * 218723136461562;
	A1B0 = (__int128) LOW(A->hi[1]) * 15541443829738529327u;
	A0B1 = (__int128) (A->lo[1]) * 218723136461562;
	A0B0 = (__int128) (A->lo[1]) * 15541443829738529327u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[5] += (__int128) aux2 + A1B1 +
		add_overflow(Rlo + 5, tmplo);

	A1B1 = (__int128) LOW(A->hi[2]) * 20648697793755;
	A1B0 = (__int128) LOW(A->hi[2]) * 12235810214155833421u;
	A0B1 = (__int128) (A->lo[2]) * 20648697793755;
	A0B0 = (__int128) (A->lo[2]) * 12235810214155833421u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[5] += (__int128) aux2 + A1B1 +
		add_overflow(Rlo + 5, tmplo);

	A1B1 = (__int128) LOW(A->hi[3]) * 472467840254209;
	A1B0 = (__int128) LOW(A->hi[3]) * 13445600365610154569u;
	A0B1 = (__int128) (A->lo[3]) * 472467840254209;
	A0B0 = (__int128) (A->lo[3]) * 13445600365610154569u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[5] += (__int128) aux2 + A1B1 +
		add_overflow(Rlo + 5, tmplo);

	A1B1 = (__int128) LOW(A->hi[4]) * -321511948529749;
	A1B0 = (__int128) LOW(A->hi[4]) * 13626999274903513193u;
	A0B1 = (__int128) (A->lo[4]) * -321511948529749;
	A0B0 = (__int128) (A->lo[4]) * 13626999274903513193u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[5] += (__int128) aux2 + A1B1 +
		add_overflow(Rlo + 5, tmplo);

	A1B1 = (__int128) LOW(A->hi[5]) * 94200677330482;
	A1B0 = (__int128) LOW(A->hi[5]) * 12462784520147880691u;
	A0B1 = (__int128) (A->lo[5]) * 94200677330482;
	A0B0 = (__int128) (A->lo[5]) * 12462784520147880691u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[5] += (__int128) aux2 + A1B1 +
		add_overflow(Rlo + 5, tmplo);

	A1B1 = (__int128) LOW(A->hi[7]) * -26556306572997;
	A1B0 = (__int128) LOW(A->hi[7]) * 12894071946188989340u;
	A0B1 = (__int128) (A->lo[7]) * -26556306572997;
	A0B0 = (__int128) (A->lo[7]) * 12894071946188989340u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[6] += (__int128) aux2 + A1B1 +
		add_overflow(Rlo + 6, tmplo);

	A1B1 = (__int128) LOW(A->hi[8]) * 319660462507203;
	A1B0 = (__int128) LOW(A->hi[8]) * 12157264064940930070u;
	A0B1 = (__int128) (A->lo[8]) * 319660462507203;
	A0B0 = (__int128) (A->lo[8]) * 12157264064940930070u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[6] += (__int128) aux2 + A1B1 +
		add_overflow(Rlo + 6, tmplo);

	A1B1 = (__int128) LOW(A->hi[0]) * 570953757503124;
	A1B0 = (__int128) LOW(A->hi[0]) * 4962818898172568042u;
	A0B1 = (__int128) (A->lo[0]) * 570953757503124;
	A0B0 = (__int128) (A->lo[0]) * 4962818898172568042u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[6] += (__int128) aux2 + A1B1 +
		add_overflow(Rlo + 6, tmplo);

	A1B1 = (__int128) LOW(A->hi[1]) * 327258330543715;
	A1B0 = (__int128) LOW(A->hi[1]) * 13027413588265404880u;
	A0B1 = (__int128) (A->lo[1]) * 327258330543715;
	A0B0 = (__int128) (A->lo[1]) * 13027413588265404880u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[6] += (__int128) aux2 + A1B1 +
		add_overflow(Rlo + 6, tmplo);

	A1B1 = (__int128) LOW(A->hi[2]) * 218723136461562;
	A1B0 = (__int128) LOW(A->hi[2]) * 15541443829738529327u;
	A0B1 = (__int128) (A->lo[2]) * 218723136461562;
	A0B0 = (__int128) (A->lo[2]) * 15541443829738529327u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[6] += (__int128) aux2 + A1B1 +
		add_overflow(Rlo + 6, tmplo);

	A1B1 = (__int128) LOW(A->hi[3]) * 20648697793755;
	A1B0 = (__int128) LOW(A->hi[3]) * 12235810214155833421u;
	A0B1 = (__int128) (A->lo[3]) * 20648697793755;
	A0B0 = (__int128) (A->lo[3]) * 12235810214155833421u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[6] += (__int128) aux2 + A1B1 +
		add_overflow(Rlo + 6, tmplo);

	A1B1 = (__int128) LOW(A->hi[4]) * 472467840254209;
	A1B0 = (__int128) LOW(A->hi[4]) * 13445600365610154569u;
	A0B1 = (__int128) (A->lo[4]) * 472467840254209;
	A0B0 = (__int128) (A->lo[4]) * 13445600365610154569u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[6] += (__int128) aux2 + A1B1 +
		add_overflow(Rlo + 6, tmplo);

	A1B1 = (__int128) LOW(A->hi[5]) * -321511948529749;
	A1B0 = (__int128) LOW(A->hi[5]) * 13626999274903513193u;
	A0B1 = (__int128) (A->lo[5]) * -321511948529749;
	A0B0 = (__int128) (A->lo[5]) * 13626999274903513193u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[6] += (__int128) aux2 + A1B1 +
		add_overflow(Rlo + 6, tmplo);

	A1B1 = (__int128) LOW(A->hi[6]) * 94200677330482;
	A1B0 = (__int128) LOW(A->hi[6]) * 12462784520147880691u;
	A0B1 = (__int128) (A->lo[6]) * 94200677330482;
	A0B0 = (__int128) (A->lo[6]) * 12462784520147880691u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[6] += (__int128) aux2 + A1B1 +
		add_overflow(Rlo + 6, tmplo);

	A1B1 = (__int128) LOW(A->hi[8]) * -26556306572997;
	A1B0 = (__int128) LOW(A->hi[8]) * 12894071946188989340u;
	A0B1 = (__int128) (A->lo[8]) * -26556306572997;
	A0B0 = (__int128) (A->lo[8]) * 12894071946188989340u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[7] += (__int128) aux2 + A1B1 +
		add_overflow(Rlo + 7, tmplo);

	A1B1 = (__int128) LOW(A->hi[0]) * 159830231253601;
	A1B0 = (__int128) LOW(A->hi[0]) * 15302004069325240843u;
	A0B1 = (__int128) (A->lo[0]) * 159830231253601;
	A0B0 = (__int128) (A->lo[0]) * 15302004069325240843u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[7] += (__int128) aux2 + A1B1 +
		add_overflow(Rlo + 7, tmplo);

	A1B1 = (__int128) LOW(A->hi[1]) * 570953757503124;
	A1B0 = (__int128) LOW(A->hi[1]) * 4962818898172568042u;
	A0B1 = (__int128) (A->lo[1]) * 570953757503124;
	A0B0 = (__int128) (A->lo[1]) * 4962818898172568042u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[7] += (__int128) aux2 + A1B1 +
		add_overflow(Rlo + 7, tmplo);

	A1B1 = (__int128) LOW(A->hi[2]) * 327258330543715;
	A1B0 = (__int128) LOW(A->hi[2]) * 13027413588265404880u;
	A0B1 = (__int128) (A->lo[2]) * 327258330543715;
	A0B0 = (__int128) (A->lo[2]) * 13027413588265404880u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[7] += (__int128) aux2 + A1B1 +
		add_overflow(Rlo + 7, tmplo);

	A1B1 = (__int128) LOW(A->hi[3]) * 218723136461562;
	A1B0 = (__int128) LOW(A->hi[3]) * 15541443829738529327u;
	A0B1 = (__int128) (A->lo[3]) * 218723136461562;
	A0B0 = (__int128) (A->lo[3]) * 15541443829738529327u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[7] += (__int128) aux2 + A1B1 +
		add_overflow(Rlo + 7, tmplo);

	A1B1 = (__int128) LOW(A->hi[4]) * 20648697793755;
	A1B0 = (__int128) LOW(A->hi[4]) * 12235810214155833421u;
	A0B1 = (__int128) (A->lo[4]) * 20648697793755;
	A0B0 = (__int128) (A->lo[4]) * 12235810214155833421u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[7] += (__int128) aux2 + A1B1 +
		add_overflow(Rlo + 7, tmplo);

	A1B1 = (__int128) LOW(A->hi[5]) * 472467840254209;
	A1B0 = (__int128) LOW(A->hi[5]) * 13445600365610154569u;
	A0B1 = (__int128) (A->lo[5]) * 472467840254209;
	A0B0 = (__int128) (A->lo[5]) * 13445600365610154569u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[7] += (__int128) aux2 + A1B1 +
		add_overflow(Rlo + 7, tmplo);

	A1B1 = (__int128) LOW(A->hi[6]) * -321511948529749;
	A1B0 = (__int128) LOW(A->hi[6]) * 13626999274903513193u;
	A0B1 = (__int128) (A->lo[6]) * -321511948529749;
	A0B0 = (__int128) (A->lo[6]) * 13626999274903513193u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[7] += (__int128) aux2 + A1B1 +
		add_overflow(Rlo + 7, tmplo);

	A1B1 = (__int128) LOW(A->hi[7]) * 94200677330482;
	A1B0 = (__int128) LOW(A->hi[7]) * 12462784520147880691u;
	A0B1 = (__int128) (A->lo[7]) * 94200677330482;
	A0B0 = (__int128) (A->lo[7]) * 12462784520147880691u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[7] += (__int128) aux2 + A1B1 +
		add_overflow(Rlo + 7, tmplo);

	A1B1 = (__int128) LOW(A->hi[0]) * -13278153286499;
	A1B0 = (__int128) LOW(A->hi[0]) * 15670408009949270478u;
	A0B1 = (__int128) (A->lo[0]) * -13278153286499;
	A0B0 = (__int128) (A->lo[0]) * 15670408009949270478u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[8] += (__int128) aux2 + A1B1 +
		add_overflow(Rlo + 8, tmplo);

	A1B1 = (__int128) LOW(A->hi[1]) * 159830231253601;
	A1B0 = (__int128) LOW(A->hi[1]) * 15302004069325240843u;
	A0B1 = (__int128) (A->lo[1]) * 159830231253601;
	A0B0 = (__int128) (A->lo[1]) * 15302004069325240843u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[8] += (__int128) aux2 + A1B1 +
		add_overflow(Rlo + 8, tmplo);

	A1B1 = (__int128) LOW(A->hi[2]) * 570953757503124;
	A1B0 = (__int128) LOW(A->hi[2]) * 4962818898172568042u;
	A0B1 = (__int128) (A->lo[2]) * 570953757503124;
	A0B0 = (__int128) (A->lo[2]) * 4962818898172568042u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[8] += (__int128) aux2 + A1B1 +
		add_overflow(Rlo + 8, tmplo);

	A1B1 = (__int128) LOW(A->hi[3]) * 327258330543715;
	A1B0 = (__int128) LOW(A->hi[3]) * 13027413588265404880u;
	A0B1 = (__int128) (A->lo[3]) * 327258330543715;
	A0B0 = (__int128) (A->lo[3]) * 13027413588265404880u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[8] += (__int128) aux2 + A1B1 +
		add_overflow(Rlo + 8, tmplo);

	A1B1 = (__int128) LOW(A->hi[4]) * 218723136461562;
	A1B0 = (__int128) LOW(A->hi[4]) * 15541443829738529327u;
	A0B1 = (__int128) (A->lo[4]) * 218723136461562;
	A0B0 = (__int128) (A->lo[4]) * 15541443829738529327u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[8] += (__int128) aux2 + A1B1 +
		add_overflow(Rlo + 8, tmplo);

	A1B1 = (__int128) LOW(A->hi[5]) * 20648697793755;
	A1B0 = (__int128) LOW(A->hi[5]) * 12235810214155833421u;
	A0B1 = (__int128) (A->lo[5]) * 20648697793755;
	A0B0 = (__int128) (A->lo[5]) * 12235810214155833421u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[8] += (__int128) aux2 + A1B1 +
		add_overflow(Rlo + 8, tmplo);

	A1B1 = (__int128) LOW(A->hi[6]) * 472467840254209;
	A1B0 = (__int128) LOW(A->hi[6]) * 13445600365610154569u;
	A0B1 = (__int128) (A->lo[6]) * 472467840254209;
	A0B0 = (__int128) (A->lo[6]) * 13445600365610154569u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[8] += (__int128) aux2 + A1B1 +
		add_overflow(Rlo + 8, tmplo);

	A1B1 = (__int128) LOW(A->hi[7]) * -321511948529749;
	A1B0 = (__int128) LOW(A->hi[7]) * 13626999274903513193u;
	A0B1 = (__int128) (A->lo[7]) * -321511948529749;
	A0B0 = (__int128) (A->lo[7]) * 13626999274903513193u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[8] += (__int128) aux2 + A1B1 +
		add_overflow(Rlo + 8, tmplo);

	A1B1 = (__int128) LOW(A->hi[8]) * 94200677330482;
	A1B0 = (__int128) LOW(A->hi[8]) * 12462784520147880691u;
	A0B1 = (__int128) (A->lo[8]) * 94200677330482;
	A0B0 = (__int128) (A->lo[8]) * 12462784520147880691u;
	aux3 = (__int128) HIGH(A0B0) + LOW(A0B1) + LOW(A1B0);
	aux2 = (__int128) HIGH(aux3) + HIGH(A0B1) + HIGH(A1B0);
	
	tmplo = (__int128) LOW(A0B0) | (aux3 << 64);
	Rhi[8] += (__int128) aux2 + A1B1 +
		add_overflow(Rlo + 8, tmplo);

}


static inline void mns128_mod_mult_ext_red_pre(__int128* restrict Rhi,
	unsigned __int128* restrict Rlo, const restrict poly128 A,
	const restrict poly128 B)
{
	unsigned __int128 A0B0, A1B0_A0B1, tmplo;
	__int128 A1B1;

	A1B1 = (__int128) A->hi[1] * B->hi[8] * LAMBDA;
	A0B0 = (__int128) A->lo[1] * B->lo[8] * LAMBDA;
	A1B0_A0B1 = (__int128) ((__int128) ((__int128) A->hi[1] *
		B->lo[8] * LAMBDA) + ((__int128) A->lo[1] *
		B->hi[8] * LAMBDA)) + HIGH(A0B0);
tmplo = (__int128) LOW(A0B0) | ((__int128)A1B0_A0B1 << 64);
	Rhi[0] += (__int128) A1B1 + HIGH(A1B0_A0B1) +
		add_overflow(Rlo + 0, tmplo);

	A1B1 = (__int128) A->hi[2] * B->hi[7] * LAMBDA;
	A0B0 = (__int128) A->lo[2] * B->lo[7] * LAMBDA;
	A1B0_A0B1 = (__int128) ((__int128) ((__int128) A->hi[2] *
		B->lo[7] * LAMBDA) + ((__int128) A->lo[2] *
		B->hi[7] * LAMBDA)) + HIGH(A0B0);
tmplo = (__int128) LOW(A0B0) | ((__int128)A1B0_A0B1 << 64);
	Rhi[0] += (__int128) A1B1 + HIGH(A1B0_A0B1) +
		add_overflow(Rlo + 0, tmplo);

	A1B1 = (__int128) A->hi[3] * B->hi[6] * LAMBDA;
	A0B0 = (__int128) A->lo[3] * B->lo[6] * LAMBDA;
	A1B0_A0B1 = (__int128) ((__int128) ((__int128) A->hi[3] *
		B->lo[6] * LAMBDA) + ((__int128) A->lo[3] *
		B->hi[6] * LAMBDA)) + HIGH(A0B0);
tmplo = (__int128) LOW(A0B0) | ((__int128)A1B0_A0B1 << 64);
	Rhi[0] += (__int128) A1B1 + HIGH(A1B0_A0B1) +
		add_overflow(Rlo + 0, tmplo);

	A1B1 = (__int128) A->hi[4] * B->hi[5] * LAMBDA;
	A0B0 = (__int128) A->lo[4] * B->lo[5] * LAMBDA;
	A1B0_A0B1 = (__int128) ((__int128) ((__int128) A->hi[4] *
		B->lo[5] * LAMBDA) + ((__int128) A->lo[4] *
		B->hi[5] * LAMBDA)) + HIGH(A0B0);
tmplo = (__int128) LOW(A0B0) | ((__int128)A1B0_A0B1 << 64);
	Rhi[0] += (__int128) A1B1 + HIGH(A1B0_A0B1) +
		add_overflow(Rlo + 0, tmplo);

	A1B1 = (__int128) A->hi[5] * B->hi[4] * LAMBDA;
	A0B0 = (__int128) A->lo[5] * B->lo[4] * LAMBDA;
	A1B0_A0B1 = (__int128) ((__int128) ((__int128) A->hi[5] *
		B->lo[4] * LAMBDA) + ((__int128) A->lo[5] *
		B->hi[4] * LAMBDA)) + HIGH(A0B0);
tmplo = (__int128) LOW(A0B0) | ((__int128)A1B0_A0B1 << 64);
	Rhi[0] += (__int128) A1B1 + HIGH(A1B0_A0B1) +
		add_overflow(Rlo + 0, tmplo);

	A1B1 = (__int128) A->hi[6] * B->hi[3] * LAMBDA;
	A0B0 = (__int128) A->lo[6] * B->lo[3] * LAMBDA;
	A1B0_A0B1 = (__int128) ((__int128) ((__int128) A->hi[6] *
		B->lo[3] * LAMBDA) + ((__int128) A->lo[6] *
		B->hi[3] * LAMBDA)) + HIGH(A0B0);
tmplo = (__int128) LOW(A0B0) | ((__int128)A1B0_A0B1 << 64);
	Rhi[0] += (__int128) A1B1 + HIGH(A1B0_A0B1) +
		add_overflow(Rlo + 0, tmplo);

	A1B1 = (__int128) A->hi[7] * B->hi[2] * LAMBDA;
	A0B0 = (__int128) A->lo[7] * B->lo[2] * LAMBDA;
	A1B0_A0B1 = (__int128) ((__int128) ((__int128) A->hi[7] *
		B->lo[2] * LAMBDA) + ((__int128) A->lo[7] *
		B->hi[2] * LAMBDA)) + HIGH(A0B0);
tmplo = (__int128) LOW(A0B0) | ((__int128)A1B0_A0B1 << 64);
	Rhi[0] += (__int128) A1B1 + HIGH(A1B0_A0B1) +
		add_overflow(Rlo + 0, tmplo);

	A1B1 = (__int128) A->hi[8] * B->hi[1] * LAMBDA;
	A0B0 = (__int128) A->lo[8] * B->lo[1] * LAMBDA;
	A1B0_A0B1 = (__int128) ((__int128) ((__int128) A->hi[8] *
		B->lo[1] * LAMBDA) + ((__int128) A->lo[8] *
		B->hi[1] * LAMBDA)) + HIGH(A0B0);
tmplo = (__int128) LOW(A0B0) | ((__int128)A1B0_A0B1 << 64);
	Rhi[0] += (__int128) A1B1 + HIGH(A1B0_A0B1) +
		add_overflow(Rlo + 0, tmplo);

	A1B1 = (__int128) A->hi[0] * B->hi[0];
	A0B0 = (__int128) A->lo[0] * B->lo[0];
	A1B0_A0B1 = (__int128) ((__int128) ((__int128) A->hi[0] *
		B->lo[0]) + ((__int128) A->lo[0] *
		B->hi[0])) + HIGH(A0B0);
tmplo = (__int128) LOW(A0B0) | ((__int128)A1B0_A0B1 << 64);
	Rhi[0] += (__int128) A1B1 + HIGH(A1B0_A0B1) +
		add_overflow(Rlo + 0, tmplo);

	A1B1 = (__int128) A->hi[2] * B->hi[8] * LAMBDA;
	A0B0 = (__int128) A->lo[2] * B->lo[8] * LAMBDA;
	A1B0_A0B1 = (__int128) ((__int128) ((__int128) A->hi[2] *
		B->lo[8] * LAMBDA) + ((__int128) A->lo[2] *
		B->hi[8] * LAMBDA)) + HIGH(A0B0);
tmplo = (__int128) LOW(A0B0) | ((__int128)A1B0_A0B1 << 64);
	Rhi[1] += (__int128) A1B1 + HIGH(A1B0_A0B1) +
		add_overflow(Rlo + 1, tmplo);

	A1B1 = (__int128) A->hi[3] * B->hi[7] * LAMBDA;
	A0B0 = (__int128) A->lo[3] * B->lo[7] * LAMBDA;
	A1B0_A0B1 = (__int128) ((__int128) ((__int128) A->hi[3] *
		B->lo[7] * LAMBDA) + ((__int128) A->lo[3] *
		B->hi[7] * LAMBDA)) + HIGH(A0B0);
tmplo = (__int128) LOW(A0B0) | ((__int128)A1B0_A0B1 << 64);
	Rhi[1] += (__int128) A1B1 + HIGH(A1B0_A0B1) +
		add_overflow(Rlo + 1, tmplo);

	A1B1 = (__int128) A->hi[4] * B->hi[6] * LAMBDA;
	A0B0 = (__int128) A->lo[4] * B->lo[6] * LAMBDA;
	A1B0_A0B1 = (__int128) ((__int128) ((__int128) A->hi[4] *
		B->lo[6] * LAMBDA) + ((__int128) A->lo[4] *
		B->hi[6] * LAMBDA)) + HIGH(A0B0);
tmplo = (__int128) LOW(A0B0) | ((__int128)A1B0_A0B1 << 64);
	Rhi[1] += (__int128) A1B1 + HIGH(A1B0_A0B1) +
		add_overflow(Rlo + 1, tmplo);

	A1B1 = (__int128) A->hi[5] * B->hi[5] * LAMBDA;
	A0B0 = (__int128) A->lo[5] * B->lo[5] * LAMBDA;
	A1B0_A0B1 = (__int128) ((__int128) ((__int128) A->hi[5] *
		B->lo[5] * LAMBDA) + ((__int128) A->lo[5] *
		B->hi[5] * LAMBDA)) + HIGH(A0B0);
tmplo = (__int128) LOW(A0B0) | ((__int128)A1B0_A0B1 << 64);
	Rhi[1] += (__int128) A1B1 + HIGH(A1B0_A0B1) +
		add_overflow(Rlo + 1, tmplo);

	A1B1 = (__int128) A->hi[6] * B->hi[4] * LAMBDA;
	A0B0 = (__int128) A->lo[6] * B->lo[4] * LAMBDA;
	A1B0_A0B1 = (__int128) ((__int128) ((__int128) A->hi[6] *
		B->lo[4] * LAMBDA) + ((__int128) A->lo[6] *
		B->hi[4] * LAMBDA)) + HIGH(A0B0);
tmplo = (__int128) LOW(A0B0) | ((__int128)A1B0_A0B1 << 64);
	Rhi[1] += (__int128) A1B1 + HIGH(A1B0_A0B1) +
		add_overflow(Rlo + 1, tmplo);

	A1B1 = (__int128) A->hi[7] * B->hi[3] * LAMBDA;
	A0B0 = (__int128) A->lo[7] * B->lo[3] * LAMBDA;
	A1B0_A0B1 = (__int128) ((__int128) ((__int128) A->hi[7] *
		B->lo[3] * LAMBDA) + ((__int128) A->lo[7] *
		B->hi[3] * LAMBDA)) + HIGH(A0B0);
tmplo = (__int128) LOW(A0B0) | ((__int128)A1B0_A0B1 << 64);
	Rhi[1] += (__int128) A1B1 + HIGH(A1B0_A0B1) +
		add_overflow(Rlo + 1, tmplo);

	A1B1 = (__int128) A->hi[8] * B->hi[2] * LAMBDA;
	A0B0 = (__int128) A->lo[8] * B->lo[2] * LAMBDA;
	A1B0_A0B1 = (__int128) ((__int128) ((__int128) A->hi[8] *
		B->lo[2] * LAMBDA) + ((__int128) A->lo[8] *
		B->hi[2] * LAMBDA)) + HIGH(A0B0);
tmplo = (__int128) LOW(A0B0) | ((__int128)A1B0_A0B1 << 64);
	Rhi[1] += (__int128) A1B1 + HIGH(A1B0_A0B1) +
		add_overflow(Rlo + 1, tmplo);

	A1B1 = (__int128) A->hi[0] * B->hi[1];
	A0B0 = (__int128) A->lo[0] * B->lo[1];
	A1B0_A0B1 = (__int128) ((__int128) ((__int128) A->hi[0] *
		B->lo[1]) + ((__int128) A->lo[0] *
		B->hi[1])) + HIGH(A0B0);
tmplo = (__int128) LOW(A0B0) | ((__int128)A1B0_A0B1 << 64);
	Rhi[1] += (__int128) A1B1 + HIGH(A1B0_A0B1) +
		add_overflow(Rlo + 1, tmplo);

	A1B1 = (__int128) A->hi[1] * B->hi[0];
	A0B0 = (__int128) A->lo[1] * B->lo[0];
	A1B0_A0B1 = (__int128) ((__int128) ((__int128) A->hi[1] *
		B->lo[0]) + ((__int128) A->lo[1] *
		B->hi[0])) + HIGH(A0B0);
tmplo = (__int128) LOW(A0B0) | ((__int128)A1B0_A0B1 << 64);
	Rhi[1] += (__int128) A1B1 + HIGH(A1B0_A0B1) +
		add_overflow(Rlo + 1, tmplo);

	A1B1 = (__int128) A->hi[3] * B->hi[8] * LAMBDA;
	A0B0 = (__int128) A->lo[3] * B->lo[8] * LAMBDA;
	A1B0_A0B1 = (__int128) ((__int128) ((__int128) A->hi[3] *
		B->lo[8] * LAMBDA) + ((__int128) A->lo[3] *
		B->hi[8] * LAMBDA)) + HIGH(A0B0);
tmplo = (__int128) LOW(A0B0) | ((__int128)A1B0_A0B1 << 64);
	Rhi[2] += (__int128) A1B1 + HIGH(A1B0_A0B1) +
		add_overflow(Rlo + 2, tmplo);

	A1B1 = (__int128) A->hi[4] * B->hi[7] * LAMBDA;
	A0B0 = (__int128) A->lo[4] * B->lo[7] * LAMBDA;
	A1B0_A0B1 = (__int128) ((__int128) ((__int128) A->hi[4] *
		B->lo[7] * LAMBDA) + ((__int128) A->lo[4] *
		B->hi[7] * LAMBDA)) + HIGH(A0B0);
tmplo = (__int128) LOW(A0B0) | ((__int128)A1B0_A0B1 << 64);
	Rhi[2] += (__int128) A1B1 + HIGH(A1B0_A0B1) +
		add_overflow(Rlo + 2, tmplo);

	A1B1 = (__int128) A->hi[5] * B->hi[6] * LAMBDA;
	A0B0 = (__int128) A->lo[5] * B->lo[6] * LAMBDA;
	A1B0_A0B1 = (__int128) ((__int128) ((__int128) A->hi[5] *
		B->lo[6] * LAMBDA) + ((__int128) A->lo[5] *
		B->hi[6] * LAMBDA)) + HIGH(A0B0);
tmplo = (__int128) LOW(A0B0) | ((__int128)A1B0_A0B1 << 64);
	Rhi[2] += (__int128) A1B1 + HIGH(A1B0_A0B1) +
		add_overflow(Rlo + 2, tmplo);

	A1B1 = (__int128) A->hi[6] * B->hi[5] * LAMBDA;
	A0B0 = (__int128) A->lo[6] * B->lo[5] * LAMBDA;
	A1B0_A0B1 = (__int128) ((__int128) ((__int128) A->hi[6] *
		B->lo[5] * LAMBDA) + ((__int128) A->lo[6] *
		B->hi[5] * LAMBDA)) + HIGH(A0B0);
tmplo = (__int128) LOW(A0B0) | ((__int128)A1B0_A0B1 << 64);
	Rhi[2] += (__int128) A1B1 + HIGH(A1B0_A0B1) +
		add_overflow(Rlo + 2, tmplo);

	A1B1 = (__int128) A->hi[7] * B->hi[4] * LAMBDA;
	A0B0 = (__int128) A->lo[7] * B->lo[4] * LAMBDA;
	A1B0_A0B1 = (__int128) ((__int128) ((__int128) A->hi[7] *
		B->lo[4] * LAMBDA) + ((__int128) A->lo[7] *
		B->hi[4] * LAMBDA)) + HIGH(A0B0);
tmplo = (__int128) LOW(A0B0) | ((__int128)A1B0_A0B1 << 64);
	Rhi[2] += (__int128) A1B1 + HIGH(A1B0_A0B1) +
		add_overflow(Rlo + 2, tmplo);

	A1B1 = (__int128) A->hi[8] * B->hi[3] * LAMBDA;
	A0B0 = (__int128) A->lo[8] * B->lo[3] * LAMBDA;
	A1B0_A0B1 = (__int128) ((__int128) ((__int128) A->hi[8] *
		B->lo[3] * LAMBDA) + ((__int128) A->lo[8] *
		B->hi[3] * LAMBDA)) + HIGH(A0B0);
tmplo = (__int128) LOW(A0B0) | ((__int128)A1B0_A0B1 << 64);
	Rhi[2] += (__int128) A1B1 + HIGH(A1B0_A0B1) +
		add_overflow(Rlo + 2, tmplo);

	A1B1 = (__int128) A->hi[0] * B->hi[2];
	A0B0 = (__int128) A->lo[0] * B->lo[2];
	A1B0_A0B1 = (__int128) ((__int128) ((__int128) A->hi[0] *
		B->lo[2]) + ((__int128) A->lo[0] *
		B->hi[2])) + HIGH(A0B0);
tmplo = (__int128) LOW(A0B0) | ((__int128)A1B0_A0B1 << 64);
	Rhi[2] += (__int128) A1B1 + HIGH(A1B0_A0B1) +
		add_overflow(Rlo + 2, tmplo);

	A1B1 = (__int128) A->hi[1] * B->hi[1];
	A0B0 = (__int128) A->lo[1] * B->lo[1];
	A1B0_A0B1 = (__int128) ((__int128) ((__int128) A->hi[1] *
		B->lo[1]) + ((__int128) A->lo[1] *
		B->hi[1])) + HIGH(A0B0);
tmplo = (__int128) LOW(A0B0) | ((__int128)A1B0_A0B1 << 64);
	Rhi[2] += (__int128) A1B1 + HIGH(A1B0_A0B1) +
		add_overflow(Rlo + 2, tmplo);

	A1B1 = (__int128) A->hi[2] * B->hi[0];
	A0B0 = (__int128) A->lo[2] * B->lo[0];
	A1B0_A0B1 = (__int128) ((__int128) ((__int128) A->hi[2] *
		B->lo[0]) + ((__int128) A->lo[2] *
		B->hi[0])) + HIGH(A0B0);
tmplo = (__int128) LOW(A0B0) | ((__int128)A1B0_A0B1 << 64);
	Rhi[2] += (__int128) A1B1 + HIGH(A1B0_A0B1) +
		add_overflow(Rlo + 2, tmplo);

	A1B1 = (__int128) A->hi[4] * B->hi[8] * LAMBDA;
	A0B0 = (__int128) A->lo[4] * B->lo[8] * LAMBDA;
	A1B0_A0B1 = (__int128) ((__int128) ((__int128) A->hi[4] *
		B->lo[8] * LAMBDA) + ((__int128) A->lo[4] *
		B->hi[8] * LAMBDA)) + HIGH(A0B0);
tmplo = (__int128) LOW(A0B0) | ((__int128)A1B0_A0B1 << 64);
	Rhi[3] += (__int128) A1B1 + HIGH(A1B0_A0B1) +
		add_overflow(Rlo + 3, tmplo);

	A1B1 = (__int128) A->hi[5] * B->hi[7] * LAMBDA;
	A0B0 = (__int128) A->lo[5] * B->lo[7] * LAMBDA;
	A1B0_A0B1 = (__int128) ((__int128) ((__int128) A->hi[5] *
		B->lo[7] * LAMBDA) + ((__int128) A->lo[5] *
		B->hi[7] * LAMBDA)) + HIGH(A0B0);
tmplo = (__int128) LOW(A0B0) | ((__int128)A1B0_A0B1 << 64);
	Rhi[3] += (__int128) A1B1 + HIGH(A1B0_A0B1) +
		add_overflow(Rlo + 3, tmplo);

	A1B1 = (__int128) A->hi[6] * B->hi[6] * LAMBDA;
	A0B0 = (__int128) A->lo[6] * B->lo[6] * LAMBDA;
	A1B0_A0B1 = (__int128) ((__int128) ((__int128) A->hi[6] *
		B->lo[6] * LAMBDA) + ((__int128) A->lo[6] *
		B->hi[6] * LAMBDA)) + HIGH(A0B0);
tmplo = (__int128) LOW(A0B0) | ((__int128)A1B0_A0B1 << 64);
	Rhi[3] += (__int128) A1B1 + HIGH(A1B0_A0B1) +
		add_overflow(Rlo + 3, tmplo);

	A1B1 = (__int128) A->hi[7] * B->hi[5] * LAMBDA;
	A0B0 = (__int128) A->lo[7] * B->lo[5] * LAMBDA;
	A1B0_A0B1 = (__int128) ((__int128) ((__int128) A->hi[7] *
		B->lo[5] * LAMBDA) + ((__int128) A->lo[7] *
		B->hi[5] * LAMBDA)) + HIGH(A0B0);
tmplo = (__int128) LOW(A0B0) | ((__int128)A1B0_A0B1 << 64);
	Rhi[3] += (__int128) A1B1 + HIGH(A1B0_A0B1) +
		add_overflow(Rlo + 3, tmplo);

	A1B1 = (__int128) A->hi[8] * B->hi[4] * LAMBDA;
	A0B0 = (__int128) A->lo[8] * B->lo[4] * LAMBDA;
	A1B0_A0B1 = (__int128) ((__int128) ((__int128) A->hi[8] *
		B->lo[4] * LAMBDA) + ((__int128) A->lo[8] *
		B->hi[4] * LAMBDA)) + HIGH(A0B0);
tmplo = (__int128) LOW(A0B0) | ((__int128)A1B0_A0B1 << 64);
	Rhi[3] += (__int128) A1B1 + HIGH(A1B0_A0B1) +
		add_overflow(Rlo + 3, tmplo);

	A1B1 = (__int128) A->hi[0] * B->hi[3];
	A0B0 = (__int128) A->lo[0] * B->lo[3];
	A1B0_A0B1 = (__int128) ((__int128) ((__int128) A->hi[0] *
		B->lo[3]) + ((__int128) A->lo[0] *
		B->hi[3])) + HIGH(A0B0);
tmplo = (__int128) LOW(A0B0) | ((__int128)A1B0_A0B1 << 64);
	Rhi[3] += (__int128) A1B1 + HIGH(A1B0_A0B1) +
		add_overflow(Rlo + 3, tmplo);

	A1B1 = (__int128) A->hi[1] * B->hi[2];
	A0B0 = (__int128) A->lo[1] * B->lo[2];
	A1B0_A0B1 = (__int128) ((__int128) ((__int128) A->hi[1] *
		B->lo[2]) + ((__int128) A->lo[1] *
		B->hi[2])) + HIGH(A0B0);
tmplo = (__int128) LOW(A0B0) | ((__int128)A1B0_A0B1 << 64);
	Rhi[3] += (__int128) A1B1 + HIGH(A1B0_A0B1) +
		add_overflow(Rlo + 3, tmplo);

	A1B1 = (__int128) A->hi[2] * B->hi[1];
	A0B0 = (__int128) A->lo[2] * B->lo[1];
	A1B0_A0B1 = (__int128) ((__int128) ((__int128) A->hi[2] *
		B->lo[1]) + ((__int128) A->lo[2] *
		B->hi[1])) + HIGH(A0B0);
tmplo = (__int128) LOW(A0B0) | ((__int128)A1B0_A0B1 << 64);
	Rhi[3] += (__int128) A1B1 + HIGH(A1B0_A0B1) +
		add_overflow(Rlo + 3, tmplo);

	A1B1 = (__int128) A->hi[3] * B->hi[0];
	A0B0 = (__int128) A->lo[3] * B->lo[0];
	A1B0_A0B1 = (__int128) ((__int128) ((__int128) A->hi[3] *
		B->lo[0]) + ((__int128) A->lo[3] *
		B->hi[0])) + HIGH(A0B0);
tmplo = (__int128) LOW(A0B0) | ((__int128)A1B0_A0B1 << 64);
	Rhi[3] += (__int128) A1B1 + HIGH(A1B0_A0B1) +
		add_overflow(Rlo + 3, tmplo);

	A1B1 = (__int128) A->hi[5] * B->hi[8] * LAMBDA;
	A0B0 = (__int128) A->lo[5] * B->lo[8] * LAMBDA;
	A1B0_A0B1 = (__int128) ((__int128) ((__int128) A->hi[5] *
		B->lo[8] * LAMBDA) + ((__int128) A->lo[5] *
		B->hi[8] * LAMBDA)) + HIGH(A0B0);
tmplo = (__int128) LOW(A0B0) | ((__int128)A1B0_A0B1 << 64);
	Rhi[4] += (__int128) A1B1 + HIGH(A1B0_A0B1) +
		add_overflow(Rlo + 4, tmplo);

	A1B1 = (__int128) A->hi[6] * B->hi[7] * LAMBDA;
	A0B0 = (__int128) A->lo[6] * B->lo[7] * LAMBDA;
	A1B0_A0B1 = (__int128) ((__int128) ((__int128) A->hi[6] *
		B->lo[7] * LAMBDA) + ((__int128) A->lo[6] *
		B->hi[7] * LAMBDA)) + HIGH(A0B0);
tmplo = (__int128) LOW(A0B0) | ((__int128)A1B0_A0B1 << 64);
	Rhi[4] += (__int128) A1B1 + HIGH(A1B0_A0B1) +
		add_overflow(Rlo + 4, tmplo);

	A1B1 = (__int128) A->hi[7] * B->hi[6] * LAMBDA;
	A0B0 = (__int128) A->lo[7] * B->lo[6] * LAMBDA;
	A1B0_A0B1 = (__int128) ((__int128) ((__int128) A->hi[7] *
		B->lo[6] * LAMBDA) + ((__int128) A->lo[7] *
		B->hi[6] * LAMBDA)) + HIGH(A0B0);
tmplo = (__int128) LOW(A0B0) | ((__int128)A1B0_A0B1 << 64);
	Rhi[4] += (__int128) A1B1 + HIGH(A1B0_A0B1) +
		add_overflow(Rlo + 4, tmplo);

	A1B1 = (__int128) A->hi[8] * B->hi[5] * LAMBDA;
	A0B0 = (__int128) A->lo[8] * B->lo[5] * LAMBDA;
	A1B0_A0B1 = (__int128) ((__int128) ((__int128) A->hi[8] *
		B->lo[5] * LAMBDA) + ((__int128) A->lo[8] *
		B->hi[5] * LAMBDA)) + HIGH(A0B0);
tmplo = (__int128) LOW(A0B0) | ((__int128)A1B0_A0B1 << 64);
	Rhi[4] += (__int128) A1B1 + HIGH(A1B0_A0B1) +
		add_overflow(Rlo + 4, tmplo);

	A1B1 = (__int128) A->hi[0] * B->hi[4];
	A0B0 = (__int128) A->lo[0] * B->lo[4];
	A1B0_A0B1 = (__int128) ((__int128) ((__int128) A->hi[0] *
		B->lo[4]) + ((__int128) A->lo[0] *
		B->hi[4])) + HIGH(A0B0);
tmplo = (__int128) LOW(A0B0) | ((__int128)A1B0_A0B1 << 64);
	Rhi[4] += (__int128) A1B1 + HIGH(A1B0_A0B1) +
		add_overflow(Rlo + 4, tmplo);

	A1B1 = (__int128) A->hi[1] * B->hi[3];
	A0B0 = (__int128) A->lo[1] * B->lo[3];
	A1B0_A0B1 = (__int128) ((__int128) ((__int128) A->hi[1] *
		B->lo[3]) + ((__int128) A->lo[1] *
		B->hi[3])) + HIGH(A0B0);
tmplo = (__int128) LOW(A0B0) | ((__int128)A1B0_A0B1 << 64);
	Rhi[4] += (__int128) A1B1 + HIGH(A1B0_A0B1) +
		add_overflow(Rlo + 4, tmplo);

	A1B1 = (__int128) A->hi[2] * B->hi[2];
	A0B0 = (__int128) A->lo[2] * B->lo[2];
	A1B0_A0B1 = (__int128) ((__int128) ((__int128) A->hi[2] *
		B->lo[2]) + ((__int128) A->lo[2] *
		B->hi[2])) + HIGH(A0B0);
tmplo = (__int128) LOW(A0B0) | ((__int128)A1B0_A0B1 << 64);
	Rhi[4] += (__int128) A1B1 + HIGH(A1B0_A0B1) +
		add_overflow(Rlo + 4, tmplo);

	A1B1 = (__int128) A->hi[3] * B->hi[1];
	A0B0 = (__int128) A->lo[3] * B->lo[1];
	A1B0_A0B1 = (__int128) ((__int128) ((__int128) A->hi[3] *
		B->lo[1]) + ((__int128) A->lo[3] *
		B->hi[1])) + HIGH(A0B0);
tmplo = (__int128) LOW(A0B0) | ((__int128)A1B0_A0B1 << 64);
	Rhi[4] += (__int128) A1B1 + HIGH(A1B0_A0B1) +
		add_overflow(Rlo + 4, tmplo);

	A1B1 = (__int128) A->hi[4] * B->hi[0];
	A0B0 = (__int128) A->lo[4] * B->lo[0];
	A1B0_A0B1 = (__int128) ((__int128) ((__int128) A->hi[4] *
		B->lo[0]) + ((__int128) A->lo[4] *
		B->hi[0])) + HIGH(A0B0);
tmplo = (__int128) LOW(A0B0) | ((__int128)A1B0_A0B1 << 64);
	Rhi[4] += (__int128) A1B1 + HIGH(A1B0_A0B1) +
		add_overflow(Rlo + 4, tmplo);

	A1B1 = (__int128) A->hi[6] * B->hi[8] * LAMBDA;
	A0B0 = (__int128) A->lo[6] * B->lo[8] * LAMBDA;
	A1B0_A0B1 = (__int128) ((__int128) ((__int128) A->hi[6] *
		B->lo[8] * LAMBDA) + ((__int128) A->lo[6] *
		B->hi[8] * LAMBDA)) + HIGH(A0B0);
tmplo = (__int128) LOW(A0B0) | ((__int128)A1B0_A0B1 << 64);
	Rhi[5] += (__int128) A1B1 + HIGH(A1B0_A0B1) +
		add_overflow(Rlo + 5, tmplo);

	A1B1 = (__int128) A->hi[7] * B->hi[7] * LAMBDA;
	A0B0 = (__int128) A->lo[7] * B->lo[7] * LAMBDA;
	A1B0_A0B1 = (__int128) ((__int128) ((__int128) A->hi[7] *
		B->lo[7] * LAMBDA) + ((__int128) A->lo[7] *
		B->hi[7] * LAMBDA)) + HIGH(A0B0);
tmplo = (__int128) LOW(A0B0) | ((__int128)A1B0_A0B1 << 64);
	Rhi[5] += (__int128) A1B1 + HIGH(A1B0_A0B1) +
		add_overflow(Rlo + 5, tmplo);

	A1B1 = (__int128) A->hi[8] * B->hi[6] * LAMBDA;
	A0B0 = (__int128) A->lo[8] * B->lo[6] * LAMBDA;
	A1B0_A0B1 = (__int128) ((__int128) ((__int128) A->hi[8] *
		B->lo[6] * LAMBDA) + ((__int128) A->lo[8] *
		B->hi[6] * LAMBDA)) + HIGH(A0B0);
tmplo = (__int128) LOW(A0B0) | ((__int128)A1B0_A0B1 << 64);
	Rhi[5] += (__int128) A1B1 + HIGH(A1B0_A0B1) +
		add_overflow(Rlo + 5, tmplo);

	A1B1 = (__int128) A->hi[0] * B->hi[5];
	A0B0 = (__int128) A->lo[0] * B->lo[5];
	A1B0_A0B1 = (__int128) ((__int128) ((__int128) A->hi[0] *
		B->lo[5]) + ((__int128) A->lo[0] *
		B->hi[5])) + HIGH(A0B0);
tmplo = (__int128) LOW(A0B0) | ((__int128)A1B0_A0B1 << 64);
	Rhi[5] += (__int128) A1B1 + HIGH(A1B0_A0B1) +
		add_overflow(Rlo + 5, tmplo);

	A1B1 = (__int128) A->hi[1] * B->hi[4];
	A0B0 = (__int128) A->lo[1] * B->lo[4];
	A1B0_A0B1 = (__int128) ((__int128) ((__int128) A->hi[1] *
		B->lo[4]) + ((__int128) A->lo[1] *
		B->hi[4])) + HIGH(A0B0);
tmplo = (__int128) LOW(A0B0) | ((__int128)A1B0_A0B1 << 64);
	Rhi[5] += (__int128) A1B1 + HIGH(A1B0_A0B1) +
		add_overflow(Rlo + 5, tmplo);

	A1B1 = (__int128) A->hi[2] * B->hi[3];
	A0B0 = (__int128) A->lo[2] * B->lo[3];
	A1B0_A0B1 = (__int128) ((__int128) ((__int128) A->hi[2] *
		B->lo[3]) + ((__int128) A->lo[2] *
		B->hi[3])) + HIGH(A0B0);
tmplo = (__int128) LOW(A0B0) | ((__int128)A1B0_A0B1 << 64);
	Rhi[5] += (__int128) A1B1 + HIGH(A1B0_A0B1) +
		add_overflow(Rlo + 5, tmplo);

	A1B1 = (__int128) A->hi[3] * B->hi[2];
	A0B0 = (__int128) A->lo[3] * B->lo[2];
	A1B0_A0B1 = (__int128) ((__int128) ((__int128) A->hi[3] *
		B->lo[2]) + ((__int128) A->lo[3] *
		B->hi[2])) + HIGH(A0B0);
tmplo = (__int128) LOW(A0B0) | ((__int128)A1B0_A0B1 << 64);
	Rhi[5] += (__int128) A1B1 + HIGH(A1B0_A0B1) +
		add_overflow(Rlo + 5, tmplo);

	A1B1 = (__int128) A->hi[4] * B->hi[1];
	A0B0 = (__int128) A->lo[4] * B->lo[1];
	A1B0_A0B1 = (__int128) ((__int128) ((__int128) A->hi[4] *
		B->lo[1]) + ((__int128) A->lo[4] *
		B->hi[1])) + HIGH(A0B0);
tmplo = (__int128) LOW(A0B0) | ((__int128)A1B0_A0B1 << 64);
	Rhi[5] += (__int128) A1B1 + HIGH(A1B0_A0B1) +
		add_overflow(Rlo + 5, tmplo);

	A1B1 = (__int128) A->hi[5] * B->hi[0];
	A0B0 = (__int128) A->lo[5] * B->lo[0];
	A1B0_A0B1 = (__int128) ((__int128) ((__int128) A->hi[5] *
		B->lo[0]) + ((__int128) A->lo[5] *
		B->hi[0])) + HIGH(A0B0);
tmplo = (__int128) LOW(A0B0) | ((__int128)A1B0_A0B1 << 64);
	Rhi[5] += (__int128) A1B1 + HIGH(A1B0_A0B1) +
		add_overflow(Rlo + 5, tmplo);

	A1B1 = (__int128) A->hi[7] * B->hi[8] * LAMBDA;
	A0B0 = (__int128) A->lo[7] * B->lo[8] * LAMBDA;
	A1B0_A0B1 = (__int128) ((__int128) ((__int128) A->hi[7] *
		B->lo[8] * LAMBDA) + ((__int128) A->lo[7] *
		B->hi[8] * LAMBDA)) + HIGH(A0B0);
tmplo = (__int128) LOW(A0B0) | ((__int128)A1B0_A0B1 << 64);
	Rhi[6] += (__int128) A1B1 + HIGH(A1B0_A0B1) +
		add_overflow(Rlo + 6, tmplo);

	A1B1 = (__int128) A->hi[8] * B->hi[7] * LAMBDA;
	A0B0 = (__int128) A->lo[8] * B->lo[7] * LAMBDA;
	A1B0_A0B1 = (__int128) ((__int128) ((__int128) A->hi[8] *
		B->lo[7] * LAMBDA) + ((__int128) A->lo[8] *
		B->hi[7] * LAMBDA)) + HIGH(A0B0);
tmplo = (__int128) LOW(A0B0) | ((__int128)A1B0_A0B1 << 64);
	Rhi[6] += (__int128) A1B1 + HIGH(A1B0_A0B1) +
		add_overflow(Rlo + 6, tmplo);

	A1B1 = (__int128) A->hi[0] * B->hi[6];
	A0B0 = (__int128) A->lo[0] * B->lo[6];
	A1B0_A0B1 = (__int128) ((__int128) ((__int128) A->hi[0] *
		B->lo[6]) + ((__int128) A->lo[0] *
		B->hi[6])) + HIGH(A0B0);
tmplo = (__int128) LOW(A0B0) | ((__int128)A1B0_A0B1 << 64);
	Rhi[6] += (__int128) A1B1 + HIGH(A1B0_A0B1) +
		add_overflow(Rlo + 6, tmplo);

	A1B1 = (__int128) A->hi[1] * B->hi[5];
	A0B0 = (__int128) A->lo[1] * B->lo[5];
	A1B0_A0B1 = (__int128) ((__int128) ((__int128) A->hi[1] *
		B->lo[5]) + ((__int128) A->lo[1] *
		B->hi[5])) + HIGH(A0B0);
tmplo = (__int128) LOW(A0B0) | ((__int128)A1B0_A0B1 << 64);
	Rhi[6] += (__int128) A1B1 + HIGH(A1B0_A0B1) +
		add_overflow(Rlo + 6, tmplo);

	A1B1 = (__int128) A->hi[2] * B->hi[4];
	A0B0 = (__int128) A->lo[2] * B->lo[4];
	A1B0_A0B1 = (__int128) ((__int128) ((__int128) A->hi[2] *
		B->lo[4]) + ((__int128) A->lo[2] *
		B->hi[4])) + HIGH(A0B0);
tmplo = (__int128) LOW(A0B0) | ((__int128)A1B0_A0B1 << 64);
	Rhi[6] += (__int128) A1B1 + HIGH(A1B0_A0B1) +
		add_overflow(Rlo + 6, tmplo);

	A1B1 = (__int128) A->hi[3] * B->hi[3];
	A0B0 = (__int128) A->lo[3] * B->lo[3];
	A1B0_A0B1 = (__int128) ((__int128) ((__int128) A->hi[3] *
		B->lo[3]) + ((__int128) A->lo[3] *
		B->hi[3])) + HIGH(A0B0);
tmplo = (__int128) LOW(A0B0) | ((__int128)A1B0_A0B1 << 64);
	Rhi[6] += (__int128) A1B1 + HIGH(A1B0_A0B1) +
		add_overflow(Rlo + 6, tmplo);

	A1B1 = (__int128) A->hi[4] * B->hi[2];
	A0B0 = (__int128) A->lo[4] * B->lo[2];
	A1B0_A0B1 = (__int128) ((__int128) ((__int128) A->hi[4] *
		B->lo[2]) + ((__int128) A->lo[4] *
		B->hi[2])) + HIGH(A0B0);
tmplo = (__int128) LOW(A0B0) | ((__int128)A1B0_A0B1 << 64);
	Rhi[6] += (__int128) A1B1 + HIGH(A1B0_A0B1) +
		add_overflow(Rlo + 6, tmplo);

	A1B1 = (__int128) A->hi[5] * B->hi[1];
	A0B0 = (__int128) A->lo[5] * B->lo[1];
	A1B0_A0B1 = (__int128) ((__int128) ((__int128) A->hi[5] *
		B->lo[1]) + ((__int128) A->lo[5] *
		B->hi[1])) + HIGH(A0B0);
tmplo = (__int128) LOW(A0B0) | ((__int128)A1B0_A0B1 << 64);
	Rhi[6] += (__int128) A1B1 + HIGH(A1B0_A0B1) +
		add_overflow(Rlo + 6, tmplo);

	A1B1 = (__int128) A->hi[6] * B->hi[0];
	A0B0 = (__int128) A->lo[6] * B->lo[0];
	A1B0_A0B1 = (__int128) ((__int128) ((__int128) A->hi[6] *
		B->lo[0]) + ((__int128) A->lo[6] *
		B->hi[0])) + HIGH(A0B0);
tmplo = (__int128) LOW(A0B0) | ((__int128)A1B0_A0B1 << 64);
	Rhi[6] += (__int128) A1B1 + HIGH(A1B0_A0B1) +
		add_overflow(Rlo + 6, tmplo);

	A1B1 = (__int128) A->hi[8] * B->hi[8] * LAMBDA;
	A0B0 = (__int128) A->lo[8] * B->lo[8] * LAMBDA;
	A1B0_A0B1 = (__int128) ((__int128) ((__int128) A->hi[8] *
		B->lo[8] * LAMBDA) + ((__int128) A->lo[8] *
		B->hi[8] * LAMBDA)) + HIGH(A0B0);
tmplo = (__int128) LOW(A0B0) | ((__int128)A1B0_A0B1 << 64);
	Rhi[7] += (__int128) A1B1 + HIGH(A1B0_A0B1) +
		add_overflow(Rlo + 7, tmplo);

	A1B1 = (__int128) A->hi[0] * B->hi[7];
	A0B0 = (__int128) A->lo[0] * B->lo[7];
	A1B0_A0B1 = (__int128) ((__int128) ((__int128) A->hi[0] *
		B->lo[7]) + ((__int128) A->lo[0] *
		B->hi[7])) + HIGH(A0B0);
tmplo = (__int128) LOW(A0B0) | ((__int128)A1B0_A0B1 << 64);
	Rhi[7] += (__int128) A1B1 + HIGH(A1B0_A0B1) +
		add_overflow(Rlo + 7, tmplo);

	A1B1 = (__int128) A->hi[1] * B->hi[6];
	A0B0 = (__int128) A->lo[1] * B->lo[6];
	A1B0_A0B1 = (__int128) ((__int128) ((__int128) A->hi[1] *
		B->lo[6]) + ((__int128) A->lo[1] *
		B->hi[6])) + HIGH(A0B0);
tmplo = (__int128) LOW(A0B0) | ((__int128)A1B0_A0B1 << 64);
	Rhi[7] += (__int128) A1B1 + HIGH(A1B0_A0B1) +
		add_overflow(Rlo + 7, tmplo);

	A1B1 = (__int128) A->hi[2] * B->hi[5];
	A0B0 = (__int128) A->lo[2] * B->lo[5];
	A1B0_A0B1 = (__int128) ((__int128) ((__int128) A->hi[2] *
		B->lo[5]) + ((__int128) A->lo[2] *
		B->hi[5])) + HIGH(A0B0);
tmplo = (__int128) LOW(A0B0) | ((__int128)A1B0_A0B1 << 64);
	Rhi[7] += (__int128) A1B1 + HIGH(A1B0_A0B1) +
		add_overflow(Rlo + 7, tmplo);

	A1B1 = (__int128) A->hi[3] * B->hi[4];
	A0B0 = (__int128) A->lo[3] * B->lo[4];
	A1B0_A0B1 = (__int128) ((__int128) ((__int128) A->hi[3] *
		B->lo[4]) + ((__int128) A->lo[3] *
		B->hi[4])) + HIGH(A0B0);
tmplo = (__int128) LOW(A0B0) | ((__int128)A1B0_A0B1 << 64);
	Rhi[7] += (__int128) A1B1 + HIGH(A1B0_A0B1) +
		add_overflow(Rlo + 7, tmplo);

	A1B1 = (__int128) A->hi[4] * B->hi[3];
	A0B0 = (__int128) A->lo[4] * B->lo[3];
	A1B0_A0B1 = (__int128) ((__int128) ((__int128) A->hi[4] *
		B->lo[3]) + ((__int128) A->lo[4] *
		B->hi[3])) + HIGH(A0B0);
tmplo = (__int128) LOW(A0B0) | ((__int128)A1B0_A0B1 << 64);
	Rhi[7] += (__int128) A1B1 + HIGH(A1B0_A0B1) +
		add_overflow(Rlo + 7, tmplo);

	A1B1 = (__int128) A->hi[5] * B->hi[2];
	A0B0 = (__int128) A->lo[5] * B->lo[2];
	A1B0_A0B1 = (__int128) ((__int128) ((__int128) A->hi[5] *
		B->lo[2]) + ((__int128) A->lo[5] *
		B->hi[2])) + HIGH(A0B0);
tmplo = (__int128) LOW(A0B0) | ((__int128)A1B0_A0B1 << 64);
	Rhi[7] += (__int128) A1B1 + HIGH(A1B0_A0B1) +
		add_overflow(Rlo + 7, tmplo);

	A1B1 = (__int128) A->hi[6] * B->hi[1];
	A0B0 = (__int128) A->lo[6] * B->lo[1];
	A1B0_A0B1 = (__int128) ((__int128) ((__int128) A->hi[6] *
		B->lo[1]) + ((__int128) A->lo[6] *
		B->hi[1])) + HIGH(A0B0);
tmplo = (__int128) LOW(A0B0) | ((__int128)A1B0_A0B1 << 64);
	Rhi[7] += (__int128) A1B1 + HIGH(A1B0_A0B1) +
		add_overflow(Rlo + 7, tmplo);

	A1B1 = (__int128) A->hi[7] * B->hi[0];
	A0B0 = (__int128) A->lo[7] * B->lo[0];
	A1B0_A0B1 = (__int128) ((__int128) ((__int128) A->hi[7] *
		B->lo[0]) + ((__int128) A->lo[7] *
		B->hi[0])) + HIGH(A0B0);
tmplo = (__int128) LOW(A0B0) | ((__int128)A1B0_A0B1 << 64);
	Rhi[7] += (__int128) A1B1 + HIGH(A1B0_A0B1) +
		add_overflow(Rlo + 7, tmplo);

	A1B1 = (__int128) A->hi[0] * B->hi[8];
	A0B0 = (__int128) A->lo[0] * B->lo[8];
	A1B0_A0B1 = (__int128) ((__int128) ((__int128) A->hi[0] *
		B->lo[8]) + ((__int128) A->lo[0] *
		B->hi[8])) + HIGH(A0B0);
tmplo = (__int128) LOW(A0B0) | ((__int128)A1B0_A0B1 << 64);
	Rhi[8] += (__int128) A1B1 + HIGH(A1B0_A0B1) +
		add_overflow(Rlo + 8, tmplo);

	A1B1 = (__int128) A->hi[1] * B->hi[7];
	A0B0 = (__int128) A->lo[1] * B->lo[7];
	A1B0_A0B1 = (__int128) ((__int128) ((__int128) A->hi[1] *
		B->lo[7]) + ((__int128) A->lo[1] *
		B->hi[7])) + HIGH(A0B0);
tmplo = (__int128) LOW(A0B0) | ((__int128)A1B0_A0B1 << 64);
	Rhi[8] += (__int128) A1B1 + HIGH(A1B0_A0B1) +
		add_overflow(Rlo + 8, tmplo);

	A1B1 = (__int128) A->hi[2] * B->hi[6];
	A0B0 = (__int128) A->lo[2] * B->lo[6];
	A1B0_A0B1 = (__int128) ((__int128) ((__int128) A->hi[2] *
		B->lo[6]) + ((__int128) A->lo[2] *
		B->hi[6])) + HIGH(A0B0);
tmplo = (__int128) LOW(A0B0) | ((__int128)A1B0_A0B1 << 64);
	Rhi[8] += (__int128) A1B1 + HIGH(A1B0_A0B1) +
		add_overflow(Rlo + 8, tmplo);

	A1B1 = (__int128) A->hi[3] * B->hi[5];
	A0B0 = (__int128) A->lo[3] * B->lo[5];
	A1B0_A0B1 = (__int128) ((__int128) ((__int128) A->hi[3] *
		B->lo[5]) + ((__int128) A->lo[3] *
		B->hi[5])) + HIGH(A0B0);
tmplo = (__int128) LOW(A0B0) | ((__int128)A1B0_A0B1 << 64);
	Rhi[8] += (__int128) A1B1 + HIGH(A1B0_A0B1) +
		add_overflow(Rlo + 8, tmplo);

	A1B1 = (__int128) A->hi[4] * B->hi[4];
	A0B0 = (__int128) A->lo[4] * B->lo[4];
	A1B0_A0B1 = (__int128) ((__int128) ((__int128) A->hi[4] *
		B->lo[4]) + ((__int128) A->lo[4] *
		B->hi[4])) + HIGH(A0B0);
tmplo = (__int128) LOW(A0B0) | ((__int128)A1B0_A0B1 << 64);
	Rhi[8] += (__int128) A1B1 + HIGH(A1B0_A0B1) +
		add_overflow(Rlo + 8, tmplo);

	A1B1 = (__int128) A->hi[5] * B->hi[3];
	A0B0 = (__int128) A->lo[5] * B->lo[3];
	A1B0_A0B1 = (__int128) ((__int128) ((__int128) A->hi[5] *
		B->lo[3]) + ((__int128) A->lo[5] *
		B->hi[3])) + HIGH(A0B0);
tmplo = (__int128) LOW(A0B0) | ((__int128)A1B0_A0B1 << 64);
	Rhi[8] += (__int128) A1B1 + HIGH(A1B0_A0B1) +
		add_overflow(Rlo + 8, tmplo);

	A1B1 = (__int128) A->hi[6] * B->hi[2];
	A0B0 = (__int128) A->lo[6] * B->lo[2];
	A1B0_A0B1 = (__int128) ((__int128) ((__int128) A->hi[6] *
		B->lo[2]) + ((__int128) A->lo[6] *
		B->hi[2])) + HIGH(A0B0);
tmplo = (__int128) LOW(A0B0) | ((__int128)A1B0_A0B1 << 64);
	Rhi[8] += (__int128) A1B1 + HIGH(A1B0_A0B1) +
		add_overflow(Rlo + 8, tmplo);

	A1B1 = (__int128) A->hi[7] * B->hi[1];
	A0B0 = (__int128) A->lo[7] * B->lo[1];
	A1B0_A0B1 = (__int128) ((__int128) ((__int128) A->hi[7] *
		B->lo[1]) + ((__int128) A->lo[7] *
		B->hi[1])) + HIGH(A0B0);
tmplo = (__int128) LOW(A0B0) | ((__int128)A1B0_A0B1 << 64);
	Rhi[8] += (__int128) A1B1 + HIGH(A1B0_A0B1) +
		add_overflow(Rlo + 8, tmplo);

	A1B1 = (__int128) A->hi[8] * B->hi[0];
	A0B0 = (__int128) A->lo[8] * B->lo[0];
	A1B0_A0B1 = (__int128) ((__int128) ((__int128) A->hi[8] *
		B->lo[0]) + ((__int128) A->lo[8] *
		B->hi[0])) + HIGH(A0B0);
tmplo = (__int128) LOW(A0B0) | ((__int128)A1B0_A0B1 << 64);
	Rhi[8] += (__int128) A1B1 + HIGH(A1B0_A0B1) +
		add_overflow(Rlo + 8, tmplo);

}


static const uint64_t __Pilo__[N][N] = {
		{5376598762601051339u, 16213388500880840312u, 5530548709805373365u, 13095877484673919271u, 18045786499962462997u, 1556394180358023759u, 13043885565685954040u, 2251358345310306570u, 3452246067452373499u},
		{9341886582406500819u, 14898890286193588079u, 9467449100606365268u, 9696569198921177901u, 11980412337539612629u, 2503006403810847880u, 11167319261663503158u, 1815254280204261706u, 9219818861440712309u},
		{15997213679939212704u, 8923929281513803138u, 16601459561601874399u, 1741488732869269529u, 5952841732557649140u, 18271030667165056161u, 15628079592709893753u, 17412780891204970438u, 7175616948033531403u},
		{16479535000172087959u, 11220148914834583987u, 9766801718672583441u, 10818779343357778009u, 2233406667963716561u, 18250731767515764629u, 1986817743318120791u, 1272812921940289827u, 9552388498019975788u},
		{12022765333814426433u, 7531083881317781474u, 11254505463765492593u, 2042213734229528695u, 18141644165532284572u, 1638707660681232616u, 12040582336803535186u, 3992287378499227813u, 592094478070834604u},
		{1485793184681435331u, 4984281597176308438u, 6156455586430138503u, 8352713143211382938u, 3241556628585707761u, 18289353839395183830u, 3577542202524103889u, 15642857776507667635u, 11953842398718704547u},
		{6054306717814908029u, 4115551068864646679u, 476944783496750492u, 12291654933004020256u, 17514293404289298919u, 5034502544352188314u, 4916212162243664696u, 11188695956628765500u, 11976516230073501845u},
		{16257851010089459491u, 3284745990095666468u, 13860529064609017278u, 8294776732010555671u, 10054577751838434911u, 5147132019762282018u, 11080555033730051135u, 10239378058004238240u, 8035429580240476796u},
		{13819893418803996946u, 8667494596637929412u, 11184430149924246998u, 4180318403921349852u, 730949536555165158u, 11297395777694938105u, 14830203397057698842u, 15277953696660266876u, 13080356709005824945u}
	};


static const int64_t __Pihi__[N][N] = {
		{1141595552238942, 1874539072300261, 1462062564860891, 1612931421116346, 750139991226840, 1083290447193354, 533909090699587, 640350588509616, 1081444568084844},
		{1761541061393764, 2095242068890833, 1314490075326394, 1225588744261365, 906166185022748, 1299309934618255, 1079073675554002, 1289498800083549, 861808247423507},
		{1647798905485926, 1181140592485619, 1018150569920345, 1410239965135327, 558500729434412, 973819251841524, 733591512836455, 843382562777524, 780565613217328},
		{1419948633314975, 2401336691070376, 1979440986753813, 1770082081594015, 1729623414323600, 1600428061399337, 872560579490965, 952430373769436, 1044511153613364},
		{1652149219792003, 2555647765335148, 1406264780911961, 1097486158225838, 704108726663483, 1514486423021062, 427032847605673, 914052149440730, 603927342028334},
		{2231896799619525, 1690932777130956, 1315284357025583, 1278329464776924, 1736833711673105, 1512451956836766, 921720085480145, 1197722567381486, 625837801744448},
		{1556576136971395, 1933420203562528, 1358561995526772, 786277421799284, 688445158232417, 905243566745995, 660952632711300, 998502414338385, 1022861935174787},
		{1476529663995290, 1561210671071873, 1942937469551776, 1851103851771761, 1908409527434022, 1592313719448089, 967051718537041, 828515102936179, 300156359920697},
		{992573556403559, 1939241198043237, 1654823438216782, 1223116209787185, 1487867579897400, 1590439264440031, 334425532238351, 766962100326872, 355079729618819}
	};

static _poly __P__ = { .deg = 16,
		.t = (int64_t[]) {0xa7ae081b201514d9, 0x8060b32d2121cbb5, 0x52d5f0004da421c6, 0x944220d595f3ab94, 0x6a73db81e00cb885, 0xd8c4f443456c2431, 0x798e59e790cf9f9d, 0x16944f2d6e9a02a8, 0x845ca84e2f2ff2b3, 0xfa108bd02adda45a, 0x4f5e88f9df8a1b27, 0xa83239104be35e44, 0xb7decf6c1b9949f4, 0xb7683e9e5b4607d3, 0x773f17d17aa0ab3c, 0xe253bc3cbe88ddb1} },
	Gi[] = { { .deg = 16,
		.t = (int64_t[]) {0x5bf8284ae4ee67e1, 0x21181e9a471069a4, 0xfc7f09c9e0c66694, 0xd32845b2b5a34c2f, 0xc364160761964305, 0x544d8f973e669b2d, 0x862c192152ac8dc5, 0xdf2b4635f962efa4, 0xa1266211fc7c937d, 0x18a1f7a296f314da, 0xa321048fc485a66b, 0xe3b919c0f1714211, 0xeb071cbc2a43a9d9, 0xe1148ca80acc6553, 0x208b2a6b2c1005ec, 0x8462a6b97066f24d} },
	{ .deg = 16,
		.t = (int64_t[]) {0x44153374e48fbeec, 0xba405f8581896280, 0x5d1d33e84bbb6071, 0x21526407c76fe29a, 0x4c5fa0e6266d868e, 0x191cf6e79d0abb84, 0xa3c332bbd30e6854, 0x274eb521010367c2, 0x94af20a5022406f4, 0xb6e047367eb3dc85, 0xddbea15648808a67, 0x3d15d41f5d8dbc60, 0xed8bf2005b68a64d, 0x659376690c7e0271, 0x7d068220781b87b7, 0x93241b63f070b0c9} },
	{ .deg = 16,
		.t = (int64_t[]) {0x6bba2b35f1ee255a, 0x157860936d349f74, 0x1142d04c6ab434a1, 0x3ead01289ae33428, 0xd0090ad1d80df51e, 0x12c7315e40760a10, 0xbe2666841eb5155a, 0x3ab6fbb37cc57804, 0xbc31652f75665fbc, 0xf55290ccdd64ce44, 0xf1956b49cf034869, 0x1318a4325b941249, 0xb8e6f7b03bec3f53, 0x6625a9fb2d498d41, 0xa920ab27ea3d040d, 0x3edc2b849382590a} },
	{ .deg = 16,
		.t = (int64_t[]) {0x78414e255e8606bb, 0x4d32f85cebc8c69, 0x3c5a0f1a6ffc597, 0xdd31d01a2d430754, 0xc79b39eda22ae9b4, 0xe10918c2fda2f766, 0x21581d2a1df8624c, 0xe7858cfe69fdae13, 0x255f7d11d3ce8a6, 0xb4ba777625228715, 0xc8cba29f90a4b0fe, 0x3597934952aeb68b, 0xa93c71c82421a88d, 0x8c8e9d8b8a510b64, 0xda66c2ae9a596675, 0x611073c26decb42f} },
	{ .deg = 16,
		.t = (int64_t[]) {0x2799d6ce318c5a5c, 0x127d1e74fde82ada, 0xe89e1dbbb613c5d5, 0x51ad21c6064f07a, 0xe0adbdf6b62c3a28, 0x83f1ba5be92cefe7, 0xb56a3f7ee653129d, 0x2d4f5c9d6036a9f0, 0x74447948bd35be91, 0xe5d13621e7982c7d, 0xaaf8fbab9ee8882f, 0x98f920c9a3f45662, 0x71de39e6c14dca1, 0xf15e5986ee6fa3f8, 0x8d5be010ef6823b0, 0x45918fa5d0ef9f36} },
	{ .deg = 16,
		.t = (int64_t[]) {0xf3c8c57af7c3e324, 0x7a1e4c9eb315c2c, 0xe25316382eb469e9, 0xa82bf900c503e7d8, 0x884af166dfc87092, 0xf52b085e439aa83a, 0xd02dc9de75dafded, 0x641999409fdc32ff, 0x42f9095417ad1297, 0xc1065b1311715817, 0x7fc5feda55934a8c, 0x94c72eb814069e37, 0xad13b29f49b5552c, 0xdf80d69a5829f092, 0x6bdc2b6cf4634e60, 0x49edd9218c705e8d} },
	{ .deg = 16,
		.t = (int64_t[]) {0x72420bd1427abdcb, 0xdb80fb2e7ebc83df, 0x61f6034b8d5745fd, 0xee34cca35cd1e510, 0x5ca21b72bb9e7ae5, 0x3c2afacfe1ba57, 0xbd2c82e0518a10, 0x7069596b26de2887, 0x1fea024689c74449, 0x397eb64bb4509e31, 0x978c9827f18b542d, 0x73e5ba938ca6df5b, 0x4b7d3739554cd49, 0xa870535e29a3e4e, 0xdc8b598570645866, 0x92cdf090652ec2a0} },
	{ .deg = 16,
		.t = (int64_t[]) {0xde44fb651fb1b77f, 0x2e9cc5e8356251b8, 0xb4f6fb42c41d9119, 0x6deb1075309ef81, 0x47b8e709a16e54e5, 0x7c69a0041f2da61c, 0x842408c77ffb9282, 0x1af835fcb67c792, 0xbc6fd2b045597e94, 0x91139c0ae93df1fb, 0x207013145937849d, 0xf5c3ca8ff7fd7350, 0xbac53382d2ef3b7c, 0xfcd3dc3079148bdd, 0x559a81c39b111c5, 0xa4b2e15ce62d9b99} }};

static _poly128 __theta__ = { .deg = 9,
	.hi = (int64_t[]) { 0x6626e73b72b0a, 0x41dce4c53d8d2, 0x3f3d63040c9b7, 0x1d8e2eacd3f91, 0x84df27ecda68, 0x295184ed27fb5, 0x29d7f843d15b3, 0x3810f9fc475b0, 0x25b14e010feb5 },
	.lo = (uint64_t[]) { 0x60419ea9e77800bd, 0x8a5726a3397dbbc4, 0x3ca3342a4dc8593a, 0x9bf35637cb68c325, 0xafc83728ff246ba3, 0xdbeac6aa50684ed1, 0xcaccebf7a15869e8, 0x33fd6d2a61f980cb, 0x675ddf8cc00bfce1 } };
#endif
