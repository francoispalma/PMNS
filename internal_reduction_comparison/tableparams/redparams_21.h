#define N 21
#define LAMBDA 2
#define RHO 4342901310350240
#define RHOhi 4342901310350240
#define DIVBYRHO 46
#define LENGTH_OF_P 16

static const uint64_t __P__[16] = { 14275681042131700307u, 12406566025813840011u, 10733430793380399332u, 6666126063959117998u, 4041757575636995755u, 8717473218431449134u, 6676808817679190925u, 15005872735625910103u, 11363070355644521897u, 7134083707294252230u, 2618061248878739510u, 15633468766741759967u, 17270627711541066646u, 9625071254591946387u, 11511505641757001636u, 11684485003261494306u };

static const uint64_t __invP__[16] = { 14837888265818802651u, 13796417644179895859u, 2760103671974020543u, 6492483928239594772u, 9383672308151390541u, 3087282646892673338u, 4218021354967969363u, 13426784043329170113u, 14450828077574261015u, 4555238343251007967u, 7102634845729224622u, 17667802830205406014u, 17986627092855878623u, 12733740283757720117u, 8898661767342602644u, 16529726554133327475u };

static const int64_t M[41] = { -612595386428378, 257645305763204, 223936025809370, -398653305604996, -312461088606914, -70443805694204, -220337081250794, -95548496368842, -372897074952084, -83401997660280, 189497783744872, 133019388395616, 58346362463054, -324130337614674, 170741770791270, -123330393048320, 209008143482064, -139418018370956, -13263516762704, -196550242606608, -137675784931037, -306297693214189, 128822652881602, 111968012904685, -199326652802498, -156230544303457, -35221902847102, -110168540625397, -47774248184421, -186448537476042, -41700998830140, 94748891872436, 66509694197808, 29173181231527, -162065168807337, 85370885395635, -61665196524160, 104504071741032, -69709009185478, -6631758381352, -98275121303304 };

static const int64_t Mhi[41] = { -1, 0, 0, -1, -1, -1, -1, -1, -1, -1, 0, 0, 0, -1, 0, -1, 0, -1, -1, -1, -1, -1, 0, 0, -1, -1, -1, -1, -1, -1, -1, 0, 0, 0, -1, 0, -1, 0, -1, -1, -1 };

static const uint64_t Mlo[41] = { 18446131478323123238u, 257645305763204u, 223936025809370u, 18446345420403946620u, 18446431612620944702u, 18446673629903857412u, 18446523736628300822u, 18446648525213182774u, 18446371176634599532u, 18446660671711891336u, 189497783744872u, 133019388395616u, 58346362463054u, 18446419943371936942u, 170741770791270u, 18446620743316503296u, 209008143482064u, 18446604655691180660u, 18446730810192788912u, 18446547523466945008u, 18446606397924620579u, 18446437776016337427u, 128822652881602u, 111968012904685u, 18446544747056749118u, 18446587843165248159u, 18446708851806704514u, 18446633905168926219u, 18446696299461367195u, 18446557625172075574u, 18446702372710721476u, 94748891872436u, 66509694197808u, 29173181231527u, 18446582008540744279u, 85370885395635u, 18446682408513027456u, 104504071741032u, 18446674364700366138u, 18446737441951170264u, 18446645798588248312u };

static const int64_t M1[41] = { 280378167218244058, 275683835791906350, 4746766205407498864, -2793212532822730602, 1038622108587834506, 4102199642200729292, 922502289334487238, 4430054990846765144, -8606751941188649058, 2641639588896095788, 7958838871942228242, -6272116289327547362, 6778034775656288246, 2922243022749107092, -5638104135326629250, -7055467376891998656, -7107393043399270764, -1267705287188458806, -8714797491954331238, -1862671838629622200, -2800802887498511713, 140189083609122029, 137841917895953175, -6849988934151026376, 7826765770443410507, 519311054293917253, -7172272215754411162, -8762120892187532189, 2215027495423382572, -4303375970594324529, 1320819794448047894, 3979419435971114121, -3136058144663773681, -5834354649026631685, 1461121511374553546, -2819052067663314625, -3527733688445999328, 5669675515155140426, 8589519393260546405, -4357398745977165619, -931335919314811100 };

static const int64_t M2hi[41] = { -5485260006046072064, -4659966350517183030, -6672205943256860235, 391707442099391024, -4645898127584276350, -3562000268553907801, 194838717797744651, 1743230342196793116, 7073257676295870515, 8888117305650140774, -855116806803979470, -918578433329133465, -1005527151086803411, -6446735680342618698, 873934378612618975, 2330782417565458343, -3589319755119556920, -2221999411068254070, 6797286620415211749, -153156471683018613, -668995690040397227, -2742630003023036032, 6893388861596184293, -3336102971628430118, -9027518315805080296, -2322949063792138175, 7442371902577821907, -9125952677955903483, -8351756865756379250, -5686743198706840551, 4444058652825070387, -427558403401989735, -459289216664566733, -502763575543401706, 6000004196683466459, -8786404847548466321, -8057980828072046637, -1794659877559778460, 8112372331320648773, -5824728726647169934, -76578235841509307 };

static const uint64_t M2lo[41] = { 280378167218244058u, 275683835791906350u, 4746766205407498864u, 15653531540886821014u, 1038622108587834506u, 4102199642200729292u, 922502289334487238u, 4430054990846765144u, 9839992132520902558u, 2641639588896095788u, 7958838871942228242u, 12174627784382004254u, 6778034775656288246u, 2922243022749107092u, 12808639938382922366u, 11391276696817552960u, 11339351030310280852u, 17179038786521092810u, 9731946581755220378u, 16584072235079929416u, 15645941186211039903u, 140189083609122029u, 137841917895953175u, 11596755139558525240u, 7826765770443410507u, 519311054293917253u, 11274471857955140454u, 9684623181522019427u, 2215027495423382572u, 14143368103115227087u, 1320819794448047894u, 3979419435971114121u, 15310685929045777935u, 12612389424682919931u, 1461121511374553546u, 15627692006046236991u, 14919010385263552288u, 5669675515155140426u, 8589519393260546405u, 14089345327732385997u, 17515408154394740516u };

static const int64_t Gprime[41] = { -832403396101418516, -1627403264636084113, -841639033277198277, 1471893490118169749, 284889458304782020, 1255534617871856724, -1198801757617152338, 2333610817906001124, 1239292830581736988, 143021499779081536, 559110348297642367, -1629129496588496718, -610049264824352525, -1688970220930054869, 35542185170283689, 87337253353931466, -1950397689755634603, 1597647879785779143, 1323567434976501128, -1813217316685301288, -499805517070564620, -416201698050709258, -813701632318042057, -420819516638599139, 735946745059084875, 142444729152391010, 627767308935928362, -599400878808576169, 1166805408953000562, 619646415290868494, 71510749889540768, 279555174148821183, -814564748294248359, -305024632412176263, -844485110465027435, 17771092585141845, 43668626676965733, -975198844877817301, 798823939892889572, 661783717488250564, -906608658342650644 };

static inline void mtoep10(__int128* restrict rop, const int64_t* restrict vect, const int64_t* restrict matr)
	SCHOOLBOOK(N/3)

static inline void mmmtoep10(__int128* restrict rop, const __int128* restrict vect, const int64_t* restrict matr)
	SCHOOLBOOK(N/3)

static inline void mmtoep10(__int128* restrict rop, const int64_t* restrict vect, const int64_t* restrict matr)
	SCHOOLBOOK(N/3)

static inline void m1toep10(int64_t* restrict rop, const int64_t* restrict vect, const int64_t* restrict matr)
	M1SCHOOLBOOK(N/3)


static inline void toeplitz_vm(__int128* restrict rop, const int64_t* restrict vect, const int64_t* restrict matr)
	TOEP33TOP(N, mtoep10)

static inline void mtoeptop(__int128* restrict rop, const int64_t* restrict vect, const int64_t* restrict matr)
	MTOEP33TOP(N, mmtoep10, mmmtoep10)

static inline void m1toep20(int64_t* restrict rop, const int64_t* restrict vect, const int64_t* restrict matr)
	M1TOEP33TOP(N, m1toep10)


static inline void mtoeplitz_vm(__int128* restrict rop, const int64_t* restrict vect)
{
	mtoeptop(rop, vect, M);
}


static inline void m1toeplitz_vm(int64_t* restrict rop, const __int128* restrict vect)
{
	int64_t v[N];
	for(int i = 0; i < N; i++)
		v[i] = vect[i];
	m1toep20(rop, v, M1);
}


static inline void mtoep128(__int128* restrict rop, const __int128* restrict vect, const __int128* restrict matr)
	SCHOOLBOOK(N/3)


void toep128(__int128* restrict rop, const __int128* restrict vect, const __int128* restrict matr)
	TOEP33TOP128(N, mtoep128)


static inline void bigtoep128(__int128* restrict rop, const int64_t* restrict vect, const __int128* restrict matr)
	SCHOOLBOOK(N/3)


void bigmattoep(__int128* restrict rop, const int64_t* restrict vect, const __int128* restrict matr)
	bigmatTOEP33TOP(N, bigtoep128)

